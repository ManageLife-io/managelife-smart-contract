{
	"id": "b67d677bab45db8a380dd6183116cffd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/rewards/DynamicRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract DynamicRewards is AccessControl, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n\r\n    bytes32 public constant REWARD_MANAGER = keccak256(\"REWARD_MANAGER\");\r\n    \r\n    struct RewardSchedule {\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 totalRewards;\r\n        uint256 claimedRewards;\r\n        address rewardsToken; // 支持多奖励代币\r\n    }\r\n\r\n    IERC20 public immutable stakingToken;\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(uint256 => RewardSchedule) public rewardSchedules;\r\n    uint256 public currentScheduleId;\r\n    mapping(address => mapping(uint256 => uint256)) private _userAccrued;\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardScheduleAdded(uint256 scheduleId);\r\n    event RewardClaimed(address indexed user, uint256 amount, address token);\r\n\r\n    constructor(address _stakingToken, address admin) {\r\n        require(_stakingToken != address(0), \"Invalid staking token\");\r\n        stakingToken = IERC20(_stakingToken);\r\n        \r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(REWARD_MANAGER, admin);\r\n    }\r\n\r\n    // ================== 核心功能 ==================\r\n    function stake(uint256 amount) external nonReentrant {\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        _updateRewards(msg.sender);\r\n        \r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        \r\n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\r\n        require(success, \"Transfer failed\");\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external nonReentrant {\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        require(_balances[msg.sender] >= amount, \"Insufficient balance\");\r\n        \r\n        _updateRewards(msg.sender);\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        \r\n        bool success = stakingToken.transfer(msg.sender, amount);\r\n        require(success, \"Transfer failed\");\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    // ================== 奖励管理 ==================\r\n    function addRewardSchedule(\r\n        uint256 startTime,\r\n        uint256 duration,\r\n        uint256 totalReward,\r\n        address rewardsToken\r\n    ) external onlyRole(REWARD_MANAGER) {\r\n        require(startTime >= block.timestamp, \"Start time in past\");\r\n        require(duration > 0, \"Invalid duration\");\r\n        require(totalReward > 0, \"Invalid reward amount\");\r\n        \r\n        uint256 balance = IERC20(rewardsToken).balanceOf(address(this));\r\n        require(balance >= totalReward, \"Insufficient reward tokens\");\r\n\r\n        uint256 scheduleId = ++currentScheduleId;\r\n        rewardSchedules[scheduleId] = RewardSchedule({\r\n            startTime: startTime,\r\n            endTime: startTime.add(duration),\r\n            totalRewards: totalReward,\r\n            claimedRewards: 0,\r\n            rewardsToken: rewardsToken\r\n        });\r\n\r\n        emit RewardScheduleAdded(scheduleId);\r\n    }\r\n\r\n    // ================== 奖励计算 ==================\r\n    function earned(address account) public view returns (uint256 total) {\r\n        for (uint256 i = 1; i <= currentScheduleId; i++) {\r\n            total = total.add(_earnedPerSchedule(account, i));\r\n        }\r\n    }\r\n\r\n    function _earnedPerSchedule(address account, uint256 scheduleId) private view returns (uint256) {\r\n        RewardSchedule storage schedule = rewardSchedules[scheduleId];\r\n        if (_balances[account] == 0 || block.timestamp < schedule.startTime) return 0;\r\n\r\n        uint256 timeElapsed = block.timestamp.sub(schedule.startTime);\r\n        uint256 totalDuration = schedule.endTime.sub(schedule.startTime);\r\n        uint256 multiplier = timeElapsed.mul(1e18).div(totalDuration);\r\n\r\n        uint256 availableRewards = schedule.totalRewards.sub(schedule.claimedRewards);\r\n        uint256 userShare = _balances[account].mul(multiplier).div(_totalSupply);\r\n        \r\n        return availableRewards.mul(userShare).div(1e18).sub(_userAccrued[account][scheduleId]);\r\n    }\r\n\r\n    // ================== 奖励领取 ==================\r\n    function claimRewards() external nonReentrant {\r\n        _updateRewards(msg.sender);\r\n        \r\n        uint256 totalClaimed = 0;\r\n        for (uint256 i = 1; i <= currentScheduleId; i++) {\r\n            RewardSchedule storage schedule = rewardSchedules[i];\r\n            uint256 amount = _userAccrued[msg.sender][i];\r\n            if (amount == 0) continue;\r\n\r\n            // 安全检查\r\n            require(\r\n                schedule.claimedRewards.add(amount) <= schedule.totalRewards,\r\n                \"Over claimed\"\r\n            );\r\n            \r\n            _userAccrued[msg.sender][i] = 0;\r\n            schedule.claimedRewards = schedule.claimedRewards.add(amount);\r\n            \r\n            _sendReward(schedule.rewardsToken, msg.sender, amount);\r\n            totalClaimed = totalClaimed.add(amount);\r\n        }\r\n\r\n        require(totalClaimed > 0, \"No rewards\");\r\n        emit RewardClaimed(msg.sender, totalClaimed, address(stakingToken));\r\n    }\r\n\r\n    // ================== 内部函数 ==================\r\n    function _updateRewards(address account) internal {\r\n        for (uint256 i = 1; i <= currentScheduleId; i++) {\r\n            _userAccrued[account][i] = _userAccrued[account][i].add(_earnedPerSchedule(account, i));\r\n        }\r\n    }\r\n\r\n    function _sendReward(address token, address to, uint256 amount) internal {\r\n        require(\r\n            IERC20(token).balanceOf(address(this)) >= amount,\r\n            \"Insufficient reward balance\"\r\n        );\r\n        bool success = IERC20(token).transfer(to, amount);\r\n        require(success, \"Transfer failed\");\r\n    }\r\n\r\n    // ================== 视图函数 ==================\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function totalStaked() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function getActiveSchedules() public view returns (uint256[] memory) {\r\n        uint256 count = 0;\r\n        for (uint256 i = 1; i <= currentScheduleId; i++) {\r\n            if (block.timestamp < rewardSchedules[i].endTime) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        uint256[] memory active = new uint256[](count);\r\n        uint256 index = 0;\r\n        for (uint256 i = 1; i <= currentScheduleId; i++) {\r\n            if (block.timestamp < rewardSchedules[i].endTime) {\r\n                active[index++] = i;\r\n            }\r\n        }\r\n        return active;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 389,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/rewards/DynamicRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/rewards/DynamicRewards.sol": {
				"DynamicRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheduleId",
									"type": "uint256"
								}
							],
							"name": "RewardScheduleAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REWARD_MANAGER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"name": "addRewardSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentScheduleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getActiveSchedules",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimedRewards",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/rewards/DynamicRewards.sol\":304:7135  contract DynamicRewards is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/rewards/DynamicRewards.sol\":1259:1538  constructor(address _stakingToken, address admin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/rewards/DynamicRewards.sol\":1353:1354  0 */\n  0x00\n    /* \"contracts/rewards/DynamicRewards.sol\":1328:1355  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/rewards/DynamicRewards.sol\":1328:1341  _stakingToken */\n  dup3\n    /* \"contracts/rewards/DynamicRewards.sol\":1328:1355  _stakingToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/rewards/DynamicRewards.sol\":1320:1381  require(_stakingToken != address(0), \"Invalid staking token\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/rewards/DynamicRewards.sol\":1414:1427  _stakingToken */\n  dup2\n    /* \"contracts/rewards/DynamicRewards.sol\":1392:1428  stakingToken = IERC20(_stakingToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/rewards/DynamicRewards.sol\":1449:1486  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/rewards/DynamicRewards.sol\":1460:1478  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/rewards/DynamicRewards.sol\":1480:1485  admin */\n  dup3\n    /* \"contracts/rewards/DynamicRewards.sol\":1449:1459  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/rewards/DynamicRewards.sol\":1449:1486  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/rewards/DynamicRewards.sol\":1497:1530  _grantRole(REWARD_MANAGER, admin) */\n  tag_13\n    /* \"contracts/rewards/DynamicRewards.sol\":445:472  keccak256(\"REWARD_MANAGER\") */\n  0x6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe\n    /* \"contracts/rewards/DynamicRewards.sol\":1524:1529  admin */\n  dup3\n    /* \"contracts/rewards/DynamicRewards.sol\":1497:1507  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/rewards/DynamicRewards.sol\":1497:1530  _grantRole(REWARD_MANAGER, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/rewards/DynamicRewards.sol\":1259:1538  constructor(address _stakingToken, address admin) {... */\n  pop\n  pop\n    /* \"contracts/rewards/DynamicRewards.sol\":304:7135  contract DynamicRewards is AccessControl, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_29:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_28\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_30:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_29\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_48\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":949:1068   */\ntag_47:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_49\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_50\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1527   */\ntag_31:\n    /* \"#utility.yul\":1442:1453   */\n  0x00\n    /* \"#utility.yul\":1476:1482   */\n  dup3\n    /* \"#utility.yul\":1471:1474   */\n  dup3\n    /* \"#utility.yul\":1464:1483   */\n  mstore\n    /* \"#utility.yul\":1516:1520   */\n  0x20\n    /* \"#utility.yul\":1511:1514   */\n  dup3\n    /* \"#utility.yul\":1507:1521   */\n  add\n    /* \"#utility.yul\":1492:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1704   */\ntag_32:\n    /* \"#utility.yul\":1673:1696   */\n  0x496e76616c6964207374616b696e6720746f6b656e0000000000000000000000\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1661:1667   */\n  dup3\n    /* \"#utility.yul\":1657:1671   */\n  add\n    /* \"#utility.yul\":1650:1697   */\n  mstore\n    /* \"#utility.yul\":1533:1704   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:2076   */\ntag_33:\n    /* \"#utility.yul\":1852:1855   */\n  0x00\n    /* \"#utility.yul\":1873:1940   */\n  tag_54\n    /* \"#utility.yul\":1937:1939   */\n  0x15\n    /* \"#utility.yul\":1932:1935   */\n  dup4\n    /* \"#utility.yul\":1873:1940   */\n  tag_31\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1866:1940   */\n  swap2\n  pop\n    /* \"#utility.yul\":1949:2042   */\n  tag_55\n    /* \"#utility.yul\":2038:2041   */\n  dup3\n    /* \"#utility.yul\":1949:2042   */\n  tag_32\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2067:2069   */\n  0x20\n    /* \"#utility.yul\":2062:2065   */\n  dup3\n    /* \"#utility.yul\":2058:2070   */\n  add\n    /* \"#utility.yul\":2051:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:2076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2082:2501   */\ntag_10:\n    /* \"#utility.yul\":2248:2252   */\n  0x00\n    /* \"#utility.yul\":2286:2288   */\n  0x20\n    /* \"#utility.yul\":2275:2284   */\n  dup3\n    /* \"#utility.yul\":2271:2289   */\n  add\n    /* \"#utility.yul\":2263:2289   */\n  swap1\n  pop\n    /* \"#utility.yul\":2335:2344   */\n  dup2\n    /* \"#utility.yul\":2329:2333   */\n  dup2\n    /* \"#utility.yul\":2325:2345   */\n  sub\n    /* \"#utility.yul\":2321:2322   */\n  0x00\n    /* \"#utility.yul\":2310:2319   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2299:2346   */\n  mstore\n    /* \"#utility.yul\":2363:2494   */\n  tag_57\n    /* \"#utility.yul\":2489:2493   */\n  dup2\n    /* \"#utility.yul\":2363:2494   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2355:2494   */\n  swap1\n  pop\n    /* \"#utility.yul\":2082:2501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/rewards/DynamicRewards.sol\":304:7135  contract DynamicRewards is AccessControl, ReentrancyGuard {... */\ntag_14:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/rewards/DynamicRewards.sol\":304:7135  contract DynamicRewards is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5932fdba\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe075d82c\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x5932fdba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x85ecdd93\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x248a9ca3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b35a4b0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1c1121c5\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/rewards/DynamicRewards.sol\":3628:3840  function earned(address account) public view returns (uint256 total) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":6550:7132  function getActiveSchedules() public view returns (uint256[] memory) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":829:886  mapping(uint256 => RewardSchedule) public rewardSchedules */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":2075:2599  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/rewards/DynamicRewards.sol\":4681:5637  function claimRewards() external nonReentrant {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/rewards/DynamicRewards.sol\":404:472  bytes32 public constant REWARD_MANAGER = keccak256(\"REWARD_MANAGER\") */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":6333:6443  function balanceOf(address account) public view returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":697:733  IERC20 public immutable stakingToken */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":6451:6542  function totalStaked() public view returns (uint256) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":893:925  uint256 public currentScheduleId */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/rewards/DynamicRewards.sol\":1605:2067  function stake(uint256 amount) external nonReentrant {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/rewards/DynamicRewards.sol\":2666:3561  function addRewardSchedule(... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/rewards/DynamicRewards.sol\":3628:3840  function earned(address account) public view returns (uint256 total) {... */\n    tag_28:\n        /* \"contracts/rewards/DynamicRewards.sol\":3682:3695  uint256 total */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3713:3722  uint256 i */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":3725:3726  1 */\n      0x01\n        /* \"contracts/rewards/DynamicRewards.sol\":3713:3726  uint256 i = 1 */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3708:3833  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_100:\n        /* \"contracts/rewards/DynamicRewards.sol\":3733:3750  currentScheduleId */\n      sload(0x05)\n        /* \"contracts/rewards/DynamicRewards.sol\":3728:3729  i */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":3728:3750  i <= currentScheduleId */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":3708:3833  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      tag_101\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":3780:3821  total.add(_earnedPerSchedule(account, i)) */\n      tag_103\n        /* \"contracts/rewards/DynamicRewards.sol\":3790:3820  _earnedPerSchedule(account, i) */\n      tag_104\n        /* \"contracts/rewards/DynamicRewards.sol\":3809:3816  account */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":3818:3819  i */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":3790:3808  _earnedPerSchedule */\n      tag_105\n        /* \"contracts/rewards/DynamicRewards.sol\":3790:3820  _earnedPerSchedule(account, i) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/rewards/DynamicRewards.sol\":3780:3785  total */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":3780:3789  total.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":3780:3821  total.add(_earnedPerSchedule(account, i)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/rewards/DynamicRewards.sol\":3772:3821  total = total.add(_earnedPerSchedule(account, i)) */\n      swap2\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3752:3755  i++ */\n      dup1\n      dup1\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3708:3833  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      jump(tag_100)\n    tag_101:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3628:3840  function earned(address account) public view returns (uint256 total) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":6550:7132  function getActiveSchedules() public view returns (uint256[] memory) {... */\n    tag_38:\n        /* \"contracts/rewards/DynamicRewards.sol\":6601:6617  uint256[] memory */\n      0x60\n        /* \"contracts/rewards/DynamicRewards.sol\":6630:6643  uint256 count */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6663:6672  uint256 i */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":6675:6676  1 */\n      0x01\n        /* \"contracts/rewards/DynamicRewards.sol\":6663:6676  uint256 i = 1 */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6658:6825  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_114:\n        /* \"contracts/rewards/DynamicRewards.sol\":6683:6700  currentScheduleId */\n      sload(0x05)\n        /* \"contracts/rewards/DynamicRewards.sol\":6678:6679  i */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":6678:6700  i <= currentScheduleId */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":6658:6825  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      tag_115\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":6744:6759  rewardSchedules */\n      0x04\n        /* \"contracts/rewards/DynamicRewards.sol\":6744:6762  rewardSchedules[i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6760:6761  i */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":6744:6762  rewardSchedules[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":6744:6770  rewardSchedules[i].endTime */\n      0x01\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":6726:6741  block.timestamp */\n      timestamp\n        /* \"contracts/rewards/DynamicRewards.sol\":6726:6770  block.timestamp < rewardSchedules[i].endTime */\n      lt\n        /* \"contracts/rewards/DynamicRewards.sol\":6722:6814  if (block.timestamp < rewardSchedules[i].endTime) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":6791:6798  count++ */\n      dup2\n      dup1\n      tag_118\n      swap1\n      tag_108\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6722:6814  if (block.timestamp < rewardSchedules[i].endTime) {... */\n    tag_117:\n        /* \"contracts/rewards/DynamicRewards.sol\":6702:6705  i++ */\n      dup1\n      dup1\n      tag_119\n      swap1\n      tag_108\n      jump\t// in\n    tag_119:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6658:6825  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6837:6860  uint256[] memory active */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6877:6882  count */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":6863:6883  new uint256[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n    tag_120:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_123:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6837:6883  uint256[] memory active = new uint256[](count) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6894:6907  uint256 index */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6927:6936  uint256 i */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":6939:6940  1 */\n      0x01\n        /* \"contracts/rewards/DynamicRewards.sol\":6927:6940  uint256 i = 1 */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6922:7101  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_124:\n        /* \"contracts/rewards/DynamicRewards.sol\":6947:6964  currentScheduleId */\n      sload(0x05)\n        /* \"contracts/rewards/DynamicRewards.sol\":6942:6943  i */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":6942:6964  i <= currentScheduleId */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":6922:7101  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      tag_125\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":7008:7023  rewardSchedules */\n      0x04\n        /* \"contracts/rewards/DynamicRewards.sol\":7008:7026  rewardSchedules[i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":7024:7025  i */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":7008:7026  rewardSchedules[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":7008:7034  rewardSchedules[i].endTime */\n      0x01\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":6990:7005  block.timestamp */\n      timestamp\n        /* \"contracts/rewards/DynamicRewards.sol\":6990:7034  block.timestamp < rewardSchedules[i].endTime */\n      lt\n        /* \"contracts/rewards/DynamicRewards.sol\":6986:7090  if (block.timestamp < rewardSchedules[i].endTime) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":7073:7074  i */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":7055:7061  active */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":7062:7069  index++ */\n      dup4\n      dup1\n      tag_128\n      swap1\n      tag_108\n      jump\t// in\n    tag_128:\n      swap5\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":7055:7070  active[index++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":7055:7074  active[index++] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6986:7090  if (block.timestamp < rewardSchedules[i].endTime) {... */\n    tag_127:\n        /* \"contracts/rewards/DynamicRewards.sol\":6966:6969  i++ */\n      dup1\n      dup1\n      tag_132\n      swap1\n      tag_108\n      jump\t// in\n    tag_132:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6922:7101  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":7118:7124  active */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":7111:7124  return active */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6550:7132  function getActiveSchedules() public view returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":829:886  mapping(uint256 => RewardSchedule) public rewardSchedules */\n    tag_44:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":2075:2599  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_135\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/rewards/DynamicRewards.sol\":2159:2160  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2150:2156  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":2150:2160  amount > 0 */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":2142:2183  require(amount > 0, \"Amount must be > 0\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/rewards/DynamicRewards.sol\":2227:2233  amount */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":2202:2211  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":2202:2223  _balances[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2202:2223  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":2202:2233  _balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/rewards/DynamicRewards.sol\":2194:2258  require(_balances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/rewards/DynamicRewards.sol\":2279:2305  _updateRewards(msg.sender) */\n      tag_144\n        /* \"contracts/rewards/DynamicRewards.sol\":2294:2304  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2279:2293  _updateRewards */\n      tag_145\n        /* \"contracts/rewards/DynamicRewards.sol\":2279:2305  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/rewards/DynamicRewards.sol\":2331:2355  _totalSupply.sub(amount) */\n      tag_146\n        /* \"contracts/rewards/DynamicRewards.sol\":2348:2354  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":2331:2343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/rewards/DynamicRewards.sol\":2331:2347  _totalSupply.sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":2331:2355  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/rewards/DynamicRewards.sol\":2316:2328  _totalSupply */\n      0x02\n        /* \"contracts/rewards/DynamicRewards.sol\":2316:2355  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2423  _balances[msg.sender].sub(amount) */\n      tag_148\n        /* \"contracts/rewards/DynamicRewards.sol\":2416:2422  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2399  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2411  _balances[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2400:2410  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2411  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2415  _balances[msg.sender].sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":2390:2423  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/rewards/DynamicRewards.sol\":2366:2375  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":2366:2387  _balances[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2376:2386  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2366:2387  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":2366:2423  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":2444:2456  bool success */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2459:2471  stakingToken */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"contracts/rewards/DynamicRewards.sol\":2459:2480  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/rewards/DynamicRewards.sol\":2481:2491  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2493:2499  amount */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":2459:2500  stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/rewards/DynamicRewards.sol\":2444:2500  bool success = stakingToken.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":2519:2526  success */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":2511:2546  require(success, \"Transfer failed\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/rewards/DynamicRewards.sol\":2572:2582  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2562:2591  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/rewards/DynamicRewards.sol\":2584:2590  amount */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":2562:2591  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/rewards/DynamicRewards.sol\":2131:2599  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/rewards/DynamicRewards.sol\":2075:2599  function withdraw(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_166:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_172:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":4681:5637  function claimRewards() external nonReentrant {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/rewards/DynamicRewards.sol\":4738:4764  _updateRewards(msg.sender) */\n      tag_177\n        /* \"contracts/rewards/DynamicRewards.sol\":4753:4763  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":4738:4752  _updateRewards */\n      tag_145\n        /* \"contracts/rewards/DynamicRewards.sol\":4738:4764  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/rewards/DynamicRewards.sol\":4785:4805  uint256 totalClaimed */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4825:4834  uint256 i */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":4837:4838  1 */\n      0x01\n        /* \"contracts/rewards/DynamicRewards.sol\":4825:4838  uint256 i = 1 */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4820:5500  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_178:\n        /* \"contracts/rewards/DynamicRewards.sol\":4845:4862  currentScheduleId */\n      sload(0x05)\n        /* \"contracts/rewards/DynamicRewards.sol\":4840:4841  i */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":4840:4862  i <= currentScheduleId */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":4820:5500  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      tag_179\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":4884:4915  RewardSchedule storage schedule */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4918:4933  rewardSchedules */\n      0x04\n        /* \"contracts/rewards/DynamicRewards.sol\":4918:4936  rewardSchedules[i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4934:4935  i */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":4918:4936  rewardSchedules[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":4884:4936  RewardSchedule storage schedule = rewardSchedules[i] */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4951:4965  uint256 amount */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4968:4980  _userAccrued */\n      0x06\n        /* \"contracts/rewards/DynamicRewards.sol\":4968:4992  _userAccrued[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4981:4991  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":4968:4992  _userAccrued[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":4968:4995  _userAccrued[msg.sender][i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4993:4994  i */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":4968:4995  _userAccrued[msg.sender][i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4951:4995  uint256 amount = _userAccrued[msg.sender][i] */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5024:5025  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5014:5020  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5014:5025  amount == 0 */\n      sub\n        /* \"contracts/rewards/DynamicRewards.sol\":5010:5035  if (amount == 0) continue */\n      tag_181\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":5027:5035  continue */\n      pop\n      pop\n      jump(tag_180)\n        /* \"contracts/rewards/DynamicRewards.sol\":5010:5035  if (amount == 0) continue */\n    tag_181:\n        /* \"contracts/rewards/DynamicRewards.sol\":5146:5154  schedule */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5146:5167  schedule.totalRewards */\n      0x02\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5142  schedule.claimedRewards.add(amount) */\n      tag_182\n        /* \"contracts/rewards/DynamicRewards.sol\":5135:5141  amount */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5115  schedule */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5130  schedule.claimedRewards */\n      0x03\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5134  schedule.claimedRewards.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5142  schedule.claimedRewards.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/rewards/DynamicRewards.sol\":5107:5167  schedule.claimedRewards.add(amount) <= schedule.totalRewards */\n      gt\n      iszero\n        /* \"contracts/rewards/DynamicRewards.sol\":5081:5215  require(... */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/rewards/DynamicRewards.sol\":5274:5275  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5256  _userAccrued */\n      0x06\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5268  _userAccrued[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5257:5267  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5268  _userAccrued[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5271  _userAccrued[msg.sender][i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5269:5270  i */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5271  _userAccrued[msg.sender][i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":5244:5275  _userAccrued[msg.sender][i] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5316:5351  schedule.claimedRewards.add(amount) */\n      tag_186\n        /* \"contracts/rewards/DynamicRewards.sol\":5344:5350  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5316:5324  schedule */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":5316:5339  schedule.claimedRewards */\n      0x03\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":5316:5343  schedule.claimedRewards.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":5316:5351  schedule.claimedRewards.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/rewards/DynamicRewards.sol\":5290:5298  schedule */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":5290:5313  schedule.claimedRewards */\n      0x03\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":5290:5351  schedule.claimedRewards = schedule.claimedRewards.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5380:5434  _sendReward(schedule.rewardsToken, msg.sender, amount) */\n      tag_187\n        /* \"contracts/rewards/DynamicRewards.sol\":5392:5400  schedule */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":5392:5413  schedule.rewardsToken */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/rewards/DynamicRewards.sol\":5415:5425  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":5427:5433  amount */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":5380:5391  _sendReward */\n      tag_188\n        /* \"contracts/rewards/DynamicRewards.sol\":5380:5434  _sendReward(schedule.rewardsToken, msg.sender, amount) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/rewards/DynamicRewards.sol\":5464:5488  totalClaimed.add(amount) */\n      tag_189\n        /* \"contracts/rewards/DynamicRewards.sol\":5481:5487  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5464:5476  totalClaimed */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":5464:5480  totalClaimed.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":5464:5488  totalClaimed.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/rewards/DynamicRewards.sol\":5449:5488  totalClaimed = totalClaimed.add(amount) */\n      swap4\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4869:5500  {... */\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4820:5500  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_180:\n        /* \"contracts/rewards/DynamicRewards.sol\":4864:4867  i++ */\n      dup1\n      dup1\n      tag_190\n      swap1\n      tag_108\n      jump\t// in\n    tag_190:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4820:5500  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      jump(tag_178)\n    tag_179:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5535:5536  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5520:5532  totalClaimed */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5520:5536  totalClaimed > 0 */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":5512:5551  require(totalClaimed > 0, \"No rewards\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/rewards/DynamicRewards.sol\":5581:5591  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":5567:5629  RewardClaimed(msg.sender, totalClaimed, address(stakingToken)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf80b6d248ca65e589d3f24c7ce36e2df22ba16ba4e7656aad67e114abbe971d2\n        /* \"contracts/rewards/DynamicRewards.sol\":5593:5605  totalClaimed */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":5615:5627  stakingToken */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"contracts/rewards/DynamicRewards.sol\":5567:5629  RewardClaimed(msg.sender, totalClaimed, address(stakingToken)) */\n      mload(0x40)\n      tag_194\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/rewards/DynamicRewards.sol\":4727:5637  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_196\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/rewards/DynamicRewards.sol\":4681:5637  function claimRewards() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":404:472  bytes32 public constant REWARD_MANAGER = keccak256(\"REWARD_MANAGER\") */\n    tag_66:\n        /* \"contracts/rewards/DynamicRewards.sol\":445:472  keccak256(\"REWARD_MANAGER\") */\n      0x6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe\n        /* \"contracts/rewards/DynamicRewards.sol\":404:472  bytes32 public constant REWARD_MANAGER = keccak256(\"REWARD_MANAGER\") */\n      dup2\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":6333:6443  function balanceOf(address account) public view returns (uint256) {... */\n    tag_70:\n        /* \"contracts/rewards/DynamicRewards.sol\":6390:6397  uint256 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6417:6426  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":6417:6435  _balances[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6427:6434  account */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":6417:6435  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":6410:6435  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6333:6443  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":697:733  IERC20 public immutable stakingToken */\n    tag_73:\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n      dup2\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":6451:6542  function totalStaked() public view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/rewards/DynamicRewards.sol\":6495:6502  uint256 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6522:6534  _totalSupply */\n      sload(0x02)\n        /* \"contracts/rewards/DynamicRewards.sol\":6515:6534  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6451:6542  function totalStaked() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":893:925  uint256 public currentScheduleId */\n    tag_80:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":1605:2067  function stake(uint256 amount) external nonReentrant {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/rewards/DynamicRewards.sol\":1686:1687  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":1677:1683  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":1677:1687  amount > 0 */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":1669:1710  require(amount > 0, \"Amount must be > 0\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_140\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/rewards/DynamicRewards.sol\":1721:1747  _updateRewards(msg.sender) */\n      tag_205\n        /* \"contracts/rewards/DynamicRewards.sol\":1736:1746  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":1721:1735  _updateRewards */\n      tag_145\n        /* \"contracts/rewards/DynamicRewards.sol\":1721:1747  _updateRewards(msg.sender) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/rewards/DynamicRewards.sol\":1783:1807  _totalSupply.add(amount) */\n      tag_206\n        /* \"contracts/rewards/DynamicRewards.sol\":1800:1806  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":1783:1795  _totalSupply */\n      sload(0x02)\n        /* \"contracts/rewards/DynamicRewards.sol\":1783:1799  _totalSupply.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":1783:1807  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/rewards/DynamicRewards.sol\":1768:1780  _totalSupply */\n      0x02\n        /* \"contracts/rewards/DynamicRewards.sol\":1768:1807  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1875  _balances[msg.sender].add(amount) */\n      tag_207\n        /* \"contracts/rewards/DynamicRewards.sol\":1868:1874  amount */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1851  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1863  _balances[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":1852:1862  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1863  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1867  _balances[msg.sender].add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":1842:1875  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/rewards/DynamicRewards.sol\":1818:1827  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":1818:1839  _balances[msg.sender] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":1828:1838  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":1818:1839  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":1818:1875  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":1896:1908  bool success */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":1911:1923  stakingToken */\n      immutable(\"0xa2d428e9c4facd0743249251fe9c0ddba9cd5b0a11e24507191ed7e4f89daaf2\")\n        /* \"contracts/rewards/DynamicRewards.sol\":1911:1936  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/rewards/DynamicRewards.sol\":1937:1947  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":1957:1961  this */\n      address\n        /* \"contracts/rewards/DynamicRewards.sol\":1964:1970  amount */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":1911:1971  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"contracts/rewards/DynamicRewards.sol\":1896:1971  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":1990:1997  success */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":1982:2017  require(success, \"Transfer failed\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_157\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/rewards/DynamicRewards.sol\":2040:2050  msg.sender */\n      caller\n        /* \"contracts/rewards/DynamicRewards.sol\":2033:2059  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/rewards/DynamicRewards.sol\":2052:2058  amount */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":2033:2059  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/rewards/DynamicRewards.sol\":1658:2067  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/rewards/DynamicRewards.sol\":1605:2067  function stake(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_221:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":2666:3561  function addRewardSchedule(... */\n    tag_98:\n        /* \"contracts/rewards/DynamicRewards.sol\":445:472  keccak256(\"REWARD_MANAGER\") */\n      0x6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/rewards/DynamicRewards.sol\":2882:2897  block.timestamp */\n      timestamp\n        /* \"contracts/rewards/DynamicRewards.sol\":2869:2878  startTime */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":2869:2897  startTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/rewards/DynamicRewards.sol\":2861:2920  require(startTime >= block.timestamp, \"Start time in past\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/rewards/DynamicRewards.sol\":2950:2951  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2939:2947  duration */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":2939:2951  duration > 0 */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":2931:2972  require(duration > 0, \"Invalid duration\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/rewards/DynamicRewards.sol\":3005:3006  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":2991:3002  totalReward */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":2991:3006  totalReward > 0 */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":2983:3032  require(totalReward > 0, \"Invalid reward amount\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/rewards/DynamicRewards.sol\":3053:3068  uint256 balance */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3078:3090  rewardsToken */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":3071:3101  IERC20(rewardsToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/rewards/DynamicRewards.sol\":3110:3114  this */\n      address\n        /* \"contracts/rewards/DynamicRewards.sol\":3071:3116  IERC20(rewardsToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"contracts/rewards/DynamicRewards.sol\":3053:3116  uint256 balance = IERC20(rewardsToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3146:3157  totalReward */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":3135:3142  balance */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":3135:3157  balance >= totalReward */\n      lt\n      iszero\n        /* \"contracts/rewards/DynamicRewards.sol\":3127:3188  require(balance >= totalReward, \"Insufficient reward tokens\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"contracts/rewards/DynamicRewards.sol\":3201:3219  uint256 scheduleId */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3224:3241  currentScheduleId */\n      0x05\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3222:3241  ++currentScheduleId */\n      dup2\n      sload\n      tag_243\n      swap1\n      tag_108\n      jump\t// in\n    tag_243:\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/rewards/DynamicRewards.sol\":3201:3241  uint256 scheduleId = ++currentScheduleId */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":3323:3332  startTime */\n      dup9\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":3356:3379  startTime.add(duration) */\n      tag_244\n        /* \"contracts/rewards/DynamicRewards.sol\":3370:3378  duration */\n      dup9\n        /* \"contracts/rewards/DynamicRewards.sol\":3356:3365  startTime */\n      dup11\n        /* \"contracts/rewards/DynamicRewards.sol\":3356:3369  startTime.add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":3356:3379  startTime.add(duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":3408:3419  totalReward */\n      dup7\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":3450:3451  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/rewards/DynamicRewards.sol\":3480:3492  rewardsToken */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":3282:3504  RewardSchedule({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3252:3267  rewardSchedules */\n      0x04\n        /* \"contracts/rewards/DynamicRewards.sol\":3252:3279  rewardSchedules[scheduleId] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3268:3278  scheduleId */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":3252:3279  rewardSchedules[scheduleId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":3252:3504  rewardSchedules[scheduleId] = RewardSchedule({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3522:3553  RewardScheduleAdded(scheduleId) */\n      0x85396969f10b93e89b84ce058bbce90a809c86067bb94a5f0243dfe9f9868943\n        /* \"contracts/rewards/DynamicRewards.sol\":3542:3552  scheduleId */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":3522:3553  RewardScheduleAdded(scheduleId) */\n      mload(0x40)\n      tag_245\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/rewards/DynamicRewards.sol\":2850:3561  {... */\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":2666:3561  function addRewardSchedule(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":3848:4614  function _earnedPerSchedule(address account, uint256 scheduleId) private view returns (uint256) {... */\n    tag_105:\n        /* \"contracts/rewards/DynamicRewards.sol\":3935:3942  uint256 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":3955:3986  RewardSchedule storage schedule */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":3989:4004  rewardSchedules */\n      0x04\n        /* \"contracts/rewards/DynamicRewards.sol\":3989:4016  rewardSchedules[scheduleId] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4005:4015  scheduleId */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":3989:4016  rewardSchedules[scheduleId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":3955:4016  RewardSchedule storage schedule = rewardSchedules[scheduleId] */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4053:4054  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4040  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4049  _balances[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4041:4048  account */\n      dup7\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4049  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4054  _balances[account] == 0 */\n      eq\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4094  _balances[account] == 0 || block.timestamp < schedule.startTime */\n      dup1\n      tag_247\n      jumpi\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4076:4084  schedule */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":4076:4094  schedule.startTime */\n      0x00\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4058:4073  block.timestamp */\n      timestamp\n        /* \"contracts/rewards/DynamicRewards.sol\":4058:4094  block.timestamp < schedule.startTime */\n      lt\n        /* \"contracts/rewards/DynamicRewards.sol\":4031:4094  _balances[account] == 0 || block.timestamp < schedule.startTime */\n    tag_247:\n        /* \"contracts/rewards/DynamicRewards.sol\":4027:4104  if (_balances[account] == 0 || block.timestamp < schedule.startTime) return 0 */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":4103:4104  0 */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4096:4104  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_246)\n        /* \"contracts/rewards/DynamicRewards.sol\":4027:4104  if (_balances[account] == 0 || block.timestamp < schedule.startTime) return 0 */\n    tag_248:\n        /* \"contracts/rewards/DynamicRewards.sol\":4117:4136  uint256 timeElapsed */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4139:4178  block.timestamp.sub(schedule.startTime) */\n      tag_249\n        /* \"contracts/rewards/DynamicRewards.sol\":4159:4167  schedule */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":4159:4177  schedule.startTime */\n      0x00\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4139:4154  block.timestamp */\n      timestamp\n        /* \"contracts/rewards/DynamicRewards.sol\":4139:4158  block.timestamp.sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4139:4178  block.timestamp.sub(schedule.startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/rewards/DynamicRewards.sol\":4117:4178  uint256 timeElapsed = block.timestamp.sub(schedule.startTime) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4189:4210  uint256 totalDuration */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4213:4253  schedule.endTime.sub(schedule.startTime) */\n      tag_250\n        /* \"contracts/rewards/DynamicRewards.sol\":4234:4242  schedule */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":4234:4252  schedule.startTime */\n      0x00\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4213:4221  schedule */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":4213:4229  schedule.endTime */\n      0x01\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4213:4233  schedule.endTime.sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4213:4253  schedule.endTime.sub(schedule.startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"contracts/rewards/DynamicRewards.sol\":4189:4253  uint256 totalDuration = schedule.endTime.sub(schedule.startTime) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4264:4282  uint256 multiplier */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4325  timeElapsed.mul(1e18).div(totalDuration) */\n      tag_251\n        /* \"contracts/rewards/DynamicRewards.sol\":4311:4324  totalDuration */\n      dup3\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4306  timeElapsed.mul(1e18) */\n      tag_252\n        /* \"contracts/rewards/DynamicRewards.sol\":4301:4305  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4296  timeElapsed */\n      dup7\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4300  timeElapsed.mul */\n      tag_253\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4306  timeElapsed.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4310  timeElapsed.mul(1e18).div */\n      tag_254\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4285:4325  timeElapsed.mul(1e18).div(totalDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"contracts/rewards/DynamicRewards.sol\":4264:4325  uint256 multiplier = timeElapsed.mul(1e18).div(totalDuration) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4338:4362  uint256 availableRewards */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4365:4415  schedule.totalRewards.sub(schedule.claimedRewards) */\n      tag_255\n        /* \"contracts/rewards/DynamicRewards.sol\":4391:4399  schedule */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":4391:4414  schedule.claimedRewards */\n      0x03\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4365:4373  schedule */\n      dup7\n        /* \"contracts/rewards/DynamicRewards.sol\":4365:4386  schedule.totalRewards */\n      0x02\n      add\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4365:4390  schedule.totalRewards.sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4365:4415  schedule.totalRewards.sub(schedule.claimedRewards) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/rewards/DynamicRewards.sol\":4338:4415  uint256 availableRewards = schedule.totalRewards.sub(schedule.claimedRewards) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4426:4443  uint256 userShare */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4498  _balances[account].mul(multiplier).div(_totalSupply) */\n      tag_256\n        /* \"contracts/rewards/DynamicRewards.sol\":4485:4497  _totalSupply */\n      sload(0x02)\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4480  _balances[account].mul(multiplier) */\n      tag_257\n        /* \"contracts/rewards/DynamicRewards.sol\":4469:4479  multiplier */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4455  _balances */\n      0x03\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4464  _balances[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4456:4463  account */\n      dup15\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4464  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4468  _balances[account].mul */\n      tag_253\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4480  _balances[account].mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4484  _balances[account].mul(multiplier).div */\n      tag_254\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4446:4498  _balances[account].mul(multiplier).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/rewards/DynamicRewards.sol\":4426:4498  uint256 userShare = _balances[account].mul(multiplier).div(_totalSupply) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4606  availableRewards.mul(userShare).div(1e18).sub(_userAccrued[account][scheduleId]) */\n      tag_258\n        /* \"contracts/rewards/DynamicRewards.sol\":4572:4584  _userAccrued */\n      0x06\n        /* \"contracts/rewards/DynamicRewards.sol\":4572:4593  _userAccrued[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4585:4592  account */\n      dup12\n        /* \"contracts/rewards/DynamicRewards.sol\":4572:4593  _userAccrued[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":4572:4605  _userAccrued[account][scheduleId] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":4594:4604  scheduleId */\n      dup11\n        /* \"contracts/rewards/DynamicRewards.sol\":4572:4605  _userAccrued[account][scheduleId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4567  availableRewards.mul(userShare).div(1e18) */\n      tag_259\n        /* \"contracts/rewards/DynamicRewards.sol\":4562:4566  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4557  availableRewards.mul(userShare) */\n      tag_260\n        /* \"contracts/rewards/DynamicRewards.sol\":4547:4556  userShare */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4542  availableRewards */\n      dup8\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4546  availableRewards.mul */\n      tag_253\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4557  availableRewards.mul(userShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4561  availableRewards.mul(userShare).div */\n      tag_254\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4567  availableRewards.mul(userShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4571  availableRewards.mul(userShare).div(1e18).sub */\n      tag_147\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":4526:4606  availableRewards.mul(userShare).div(1e18).sub(_userAccrued[account][scheduleId]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"contracts/rewards/DynamicRewards.sol\":4519:4606  return availableRewards.mul(userShare).div(1e18).sub(_userAccrued[account][scheduleId]) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":3848:4614  function _earnedPerSchedule(address account, uint256 scheduleId) private view returns (uint256) {... */\n    tag_246:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":5704:5935  function _updateRewards(address account) internal {... */\n    tag_145:\n        /* \"contracts/rewards/DynamicRewards.sol\":5770:5779  uint256 i */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5782:5783  1 */\n      0x01\n        /* \"contracts/rewards/DynamicRewards.sol\":5770:5783  uint256 i = 1 */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5765:5928  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n    tag_270:\n        /* \"contracts/rewards/DynamicRewards.sol\":5790:5807  currentScheduleId */\n      sload(0x05)\n        /* \"contracts/rewards/DynamicRewards.sol\":5785:5786  i */\n      dup2\n        /* \"contracts/rewards/DynamicRewards.sol\":5785:5807  i <= currentScheduleId */\n      gt\n        /* \"contracts/rewards/DynamicRewards.sol\":5765:5928  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      tag_271\n      jumpi\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5916  _userAccrued[account][i].add(_earnedPerSchedule(account, i)) */\n      tag_273\n        /* \"contracts/rewards/DynamicRewards.sol\":5885:5915  _earnedPerSchedule(account, i) */\n      tag_274\n        /* \"contracts/rewards/DynamicRewards.sol\":5904:5911  account */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":5913:5914  i */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":5885:5903  _earnedPerSchedule */\n      tag_105\n        /* \"contracts/rewards/DynamicRewards.sol\":5885:5915  _earnedPerSchedule(account, i) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5868  _userAccrued */\n      0x06\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5877  _userAccrued[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5869:5876  account */\n      dup6\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5877  _userAccrued[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5880  _userAccrued[account][i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5878:5879  i */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5880  _userAccrued[account][i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5884  _userAccrued[account][i].add */\n      tag_106\n      swap1\n        /* \"contracts/rewards/DynamicRewards.sol\":5856:5916  _userAccrued[account][i].add(_earnedPerSchedule(account, i)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5841  _userAccrued */\n      0x06\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5850  _userAccrued[account] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5842:5849  account */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5850  _userAccrued[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5853  _userAccrued[account][i] */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":5851:5852  i */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5853  _userAccrued[account][i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/rewards/DynamicRewards.sol\":5829:5916  _userAccrued[account][i] = _userAccrued[account][i].add(_earnedPerSchedule(account, i)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5809:5812  i++ */\n      dup1\n      dup1\n      tag_275\n      swap1\n      tag_108\n      jump\t// in\n    tag_275:\n      swap2\n      pop\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5765:5928  for (uint256 i = 1; i <= currentScheduleId; i++) {... */\n      jump(tag_270)\n    tag_271:\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5704:5935  function _updateRewards(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_281\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_283\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_284)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_284:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_290)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_290:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/rewards/DynamicRewards.sol\":5943:6266  function _sendReward(address token, address to, uint256 amount) internal {... */\n    tag_188:\n        /* \"contracts/rewards/DynamicRewards.sol\":6091:6097  amount */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":6056:6061  token */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":6049:6072  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/rewards/DynamicRewards.sol\":6081:6085  this */\n      address\n        /* \"contracts/rewards/DynamicRewards.sol\":6049:6087  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_299:\n        /* \"contracts/rewards/DynamicRewards.sol\":6049:6097  IERC20(token).balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/rewards/DynamicRewards.sol\":6027:6152  require(... */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"contracts/rewards/DynamicRewards.sol\":6163:6175  bool success */\n      0x00\n        /* \"contracts/rewards/DynamicRewards.sol\":6185:6190  token */\n      dup4\n        /* \"contracts/rewards/DynamicRewards.sol\":6178:6200  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/rewards/DynamicRewards.sol\":6201:6203  to */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":6205:6211  amount */\n      dup5\n        /* \"contracts/rewards/DynamicRewards.sol\":6178:6212  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_303:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_306:\n        /* \"contracts/rewards/DynamicRewards.sol\":6163:6212  bool success = IERC20(token).transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":6231:6238  success */\n      dup1\n        /* \"contracts/rewards/DynamicRewards.sol\":6223:6258  require(success, \"Transfer failed\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_157\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"contracts/rewards/DynamicRewards.sol\":6016:6266  {... */\n      pop\n        /* \"contracts/rewards/DynamicRewards.sol\":5943:6266  function _sendReward(address token, address to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_313\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_316\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap3\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_321:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_323:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_324:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_387\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_323\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_325:\n        /* \"#utility.yul\":641:665   */\n      tag_389\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_324\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_390:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_326:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_392\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_325\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_27:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_395\n      tag_321\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":917:1036   */\n    tag_394:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_396\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_326\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_327:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_328:\n        /* \"#utility.yul\":1346:1370   */\n      tag_399\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_327\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_30:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_401\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_328\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1760   */\n    tag_329:\n        /* \"#utility.yul\":1647:1654   */\n      0x00\n        /* \"#utility.yul\":1687:1753   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1680:1685   */\n      dup3\n        /* \"#utility.yul\":1676:1754   */\n      and\n        /* \"#utility.yul\":1665:1754   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1766:1886   */\n    tag_330:\n        /* \"#utility.yul\":1838:1861   */\n      tag_404\n        /* \"#utility.yul\":1855:1860   */\n      dup2\n        /* \"#utility.yul\":1838:1861   */\n      tag_329\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1831:1836   */\n      dup2\n        /* \"#utility.yul\":1828:1862   */\n      eq\n        /* \"#utility.yul\":1818:1880   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1876:1877   */\n      0x00\n        /* \"#utility.yul\":1873:1874   */\n      dup1\n        /* \"#utility.yul\":1866:1878   */\n      revert\n        /* \"#utility.yul\":1818:1880   */\n    tag_405:\n        /* \"#utility.yul\":1766:1886   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2029   */\n    tag_331:\n        /* \"#utility.yul\":1937:1942   */\n      0x00\n        /* \"#utility.yul\":1975:1981   */\n      dup2\n        /* \"#utility.yul\":1962:1982   */\n      calldataload\n        /* \"#utility.yul\":1953:1982   */\n      swap1\n      pop\n        /* \"#utility.yul\":1991:2023   */\n      tag_407\n        /* \"#utility.yul\":2017:2022   */\n      dup2\n        /* \"#utility.yul\":1991:2023   */\n      tag_330\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1892:2029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2035:2362   */\n    tag_33:\n        /* \"#utility.yul\":2093:2099   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x20\n        /* \"#utility.yul\":2130:2139   */\n      dup3\n        /* \"#utility.yul\":2121:2128   */\n      dup5\n        /* \"#utility.yul\":2117:2140   */\n      sub\n        /* \"#utility.yul\":2113:2145   */\n      slt\n        /* \"#utility.yul\":2110:2229   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":2148:2227   */\n      tag_410\n      tag_321\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2110:2229   */\n    tag_409:\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2293:2345   */\n      tag_411\n        /* \"#utility.yul\":2337:2344   */\n      dup5\n        /* \"#utility.yul\":2328:2334   */\n      dup3\n        /* \"#utility.yul\":2317:2326   */\n      dup6\n        /* \"#utility.yul\":2313:2335   */\n      add\n        /* \"#utility.yul\":2293:2345   */\n      tag_331\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2283:2345   */\n      swap2\n      pop\n        /* \"#utility.yul\":2239:2355   */\n      pop\n        /* \"#utility.yul\":2035:2362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2458   */\n    tag_332:\n        /* \"#utility.yul\":2402:2409   */\n      0x00\n        /* \"#utility.yul\":2445:2450   */\n      dup2\n        /* \"#utility.yul\":2438:2451   */\n      iszero\n        /* \"#utility.yul\":2431:2452   */\n      iszero\n        /* \"#utility.yul\":2420:2452   */\n      swap1\n      pop\n        /* \"#utility.yul\":2368:2458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2464:2573   */\n    tag_333:\n        /* \"#utility.yul\":2545:2566   */\n      tag_414\n        /* \"#utility.yul\":2560:2565   */\n      dup2\n        /* \"#utility.yul\":2545:2566   */\n      tag_332\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2540:2543   */\n      dup3\n        /* \"#utility.yul\":2533:2567   */\n      mstore\n        /* \"#utility.yul\":2464:2573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2789   */\n    tag_36:\n        /* \"#utility.yul\":2666:2670   */\n      0x00\n        /* \"#utility.yul\":2704:2706   */\n      0x20\n        /* \"#utility.yul\":2693:2702   */\n      dup3\n        /* \"#utility.yul\":2689:2707   */\n      add\n        /* \"#utility.yul\":2681:2707   */\n      swap1\n      pop\n        /* \"#utility.yul\":2717:2782   */\n      tag_416\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2717:2782   */\n      tag_333\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2579:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2909   */\n    tag_334:\n        /* \"#utility.yul\":2862:2868   */\n      0x00\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2890:2902   */\n      mload\n        /* \"#utility.yul\":2880:2902   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3099   */\n    tag_335:\n        /* \"#utility.yul\":3014:3025   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup3\n        /* \"#utility.yul\":3043:3046   */\n      dup3\n        /* \"#utility.yul\":3036:3055   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x20\n        /* \"#utility.yul\":3083:3086   */\n      dup3\n        /* \"#utility.yul\":3079:3093   */\n      add\n        /* \"#utility.yul\":3064:3093   */\n      swap1\n      pop\n        /* \"#utility.yul\":2915:3099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3105:3237   */\n    tag_336:\n        /* \"#utility.yul\":3172:3176   */\n      0x00\n        /* \"#utility.yul\":3195:3198   */\n      dup2\n        /* \"#utility.yul\":3187:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3225:3229   */\n      0x20\n        /* \"#utility.yul\":3220:3223   */\n      dup3\n        /* \"#utility.yul\":3216:3230   */\n      add\n        /* \"#utility.yul\":3208:3230   */\n      swap1\n      pop\n        /* \"#utility.yul\":3105:3237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3243:3351   */\n    tag_337:\n        /* \"#utility.yul\":3320:3344   */\n      tag_421\n        /* \"#utility.yul\":3338:3343   */\n      dup2\n        /* \"#utility.yul\":3320:3344   */\n      tag_327\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3315:3318   */\n      dup3\n        /* \"#utility.yul\":3308:3345   */\n      mstore\n        /* \"#utility.yul\":3243:3351   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3357:3536   */\n    tag_338:\n        /* \"#utility.yul\":3426:3436   */\n      0x00\n        /* \"#utility.yul\":3447:3493   */\n      tag_423\n        /* \"#utility.yul\":3489:3492   */\n      dup4\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3447:3493   */\n      tag_337\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3525:3529   */\n      0x20\n        /* \"#utility.yul\":3520:3523   */\n      dup4\n        /* \"#utility.yul\":3516:3530   */\n      add\n        /* \"#utility.yul\":3502:3530   */\n      swap1\n      pop\n        /* \"#utility.yul\":3357:3536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3542:3655   */\n    tag_339:\n        /* \"#utility.yul\":3612:3616   */\n      0x00\n        /* \"#utility.yul\":3644:3648   */\n      0x20\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3635:3649   */\n      add\n        /* \"#utility.yul\":3627:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3542:3655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4423   */\n    tag_340:\n        /* \"#utility.yul\":3810:3813   */\n      0x00\n        /* \"#utility.yul\":3839:3893   */\n      tag_426\n        /* \"#utility.yul\":3887:3892   */\n      dup3\n        /* \"#utility.yul\":3839:3893   */\n      tag_334\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3909:3995   */\n      tag_427\n        /* \"#utility.yul\":3988:3994   */\n      dup2\n        /* \"#utility.yul\":3983:3986   */\n      dup6\n        /* \"#utility.yul\":3909:3995   */\n      tag_335\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3902:3995   */\n      swap4\n      pop\n        /* \"#utility.yul\":4019:4075   */\n      tag_428\n        /* \"#utility.yul\":4069:4074   */\n      dup4\n        /* \"#utility.yul\":4019:4075   */\n      tag_336\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4098:4105   */\n      dup1\n        /* \"#utility.yul\":4129:4130   */\n      0x00\n        /* \"#utility.yul\":4114:4398   */\n    tag_429:\n        /* \"#utility.yul\":4139:4145   */\n      dup4\n        /* \"#utility.yul\":4136:4137   */\n      dup2\n        /* \"#utility.yul\":4133:4146   */\n      lt\n        /* \"#utility.yul\":4114:4398   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":4215:4221   */\n      dup2\n        /* \"#utility.yul\":4209:4222   */\n      mload\n        /* \"#utility.yul\":4242:4305   */\n      tag_432\n        /* \"#utility.yul\":4301:4304   */\n      dup9\n        /* \"#utility.yul\":4286:4299   */\n      dup3\n        /* \"#utility.yul\":4242:4305   */\n      tag_338\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4235:4305   */\n      swap8\n      pop\n        /* \"#utility.yul\":4328:4388   */\n      tag_433\n        /* \"#utility.yul\":4381:4387   */\n      dup4\n        /* \"#utility.yul\":4328:4388   */\n      tag_339\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4318:4388   */\n      swap3\n      pop\n        /* \"#utility.yul\":4174:4398   */\n      pop\n        /* \"#utility.yul\":4161:4162   */\n      0x01\n        /* \"#utility.yul\":4158:4159   */\n      dup2\n        /* \"#utility.yul\":4154:4163   */\n      add\n        /* \"#utility.yul\":4149:4163   */\n      swap1\n      pop\n        /* \"#utility.yul\":4114:4398   */\n      jump(tag_429)\n    tag_431:\n        /* \"#utility.yul\":4118:4132   */\n      pop\n        /* \"#utility.yul\":4414:4417   */\n      dup6\n        /* \"#utility.yul\":4407:4417   */\n      swap4\n      pop\n        /* \"#utility.yul\":3815:4423   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3691:4423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4802   */\n    tag_40:\n        /* \"#utility.yul\":4572:4576   */\n      0x00\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4599:4608   */\n      dup3\n        /* \"#utility.yul\":4595:4613   */\n      add\n        /* \"#utility.yul\":4587:4613   */\n      swap1\n      pop\n        /* \"#utility.yul\":4659:4668   */\n      dup2\n        /* \"#utility.yul\":4653:4657   */\n      dup2\n        /* \"#utility.yul\":4649:4669   */\n      sub\n        /* \"#utility.yul\":4645:4646   */\n      0x00\n        /* \"#utility.yul\":4634:4643   */\n      dup4\n        /* \"#utility.yul\":4630:4647   */\n      add\n        /* \"#utility.yul\":4623:4670   */\n      mstore\n        /* \"#utility.yul\":4687:4795   */\n      tag_435\n        /* \"#utility.yul\":4790:4794   */\n      dup2\n        /* \"#utility.yul\":4781:4787   */\n      dup5\n        /* \"#utility.yul\":4687:4795   */\n      tag_340\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4679:4795   */\n      swap1\n      pop\n        /* \"#utility.yul\":4429:4802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4808:4930   */\n    tag_341:\n        /* \"#utility.yul\":4881:4905   */\n      tag_437\n        /* \"#utility.yul\":4899:4904   */\n      dup2\n        /* \"#utility.yul\":4881:4905   */\n      tag_327\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4874:4879   */\n      dup2\n        /* \"#utility.yul\":4871:4906   */\n      eq\n        /* \"#utility.yul\":4861:4924   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4920:4921   */\n      0x00\n        /* \"#utility.yul\":4917:4918   */\n      dup1\n        /* \"#utility.yul\":4910:4922   */\n      revert\n        /* \"#utility.yul\":4861:4924   */\n    tag_438:\n        /* \"#utility.yul\":4808:4930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5075   */\n    tag_342:\n        /* \"#utility.yul\":4982:4987   */\n      0x00\n        /* \"#utility.yul\":5020:5026   */\n      dup2\n        /* \"#utility.yul\":5007:5027   */\n      calldataload\n        /* \"#utility.yul\":4998:5027   */\n      swap1\n      pop\n        /* \"#utility.yul\":5036:5069   */\n      tag_440\n        /* \"#utility.yul\":5063:5068   */\n      dup2\n        /* \"#utility.yul\":5036:5069   */\n      tag_341\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4936:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_43:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_443\n      tag_321\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5157:5276   */\n    tag_442:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_444\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_342\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_343:\n        /* \"#utility.yul\":5503:5527   */\n      tag_446\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_324\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6204   */\n    tag_46:\n        /* \"#utility.yul\":5745:5749   */\n      0x00\n        /* \"#utility.yul\":5783:5786   */\n      0xa0\n        /* \"#utility.yul\":5772:5781   */\n      dup3\n        /* \"#utility.yul\":5768:5787   */\n      add\n        /* \"#utility.yul\":5760:5787   */\n      swap1\n      pop\n        /* \"#utility.yul\":5797:5868   */\n      tag_448\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5854:5863   */\n      dup4\n        /* \"#utility.yul\":5850:5867   */\n      add\n        /* \"#utility.yul\":5841:5847   */\n      dup9\n        /* \"#utility.yul\":5797:5868   */\n      tag_328\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5878:5950   */\n      tag_449\n        /* \"#utility.yul\":5946:5948   */\n      0x20\n        /* \"#utility.yul\":5935:5944   */\n      dup4\n        /* \"#utility.yul\":5931:5949   */\n      add\n        /* \"#utility.yul\":5922:5928   */\n      dup8\n        /* \"#utility.yul\":5878:5950   */\n      tag_328\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5960:6032   */\n      tag_450\n        /* \"#utility.yul\":6028:6030   */\n      0x40\n        /* \"#utility.yul\":6017:6026   */\n      dup4\n        /* \"#utility.yul\":6013:6031   */\n      add\n        /* \"#utility.yul\":6004:6010   */\n      dup7\n        /* \"#utility.yul\":5960:6032   */\n      tag_328\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6042:6114   */\n      tag_451\n        /* \"#utility.yul\":6110:6112   */\n      0x60\n        /* \"#utility.yul\":6099:6108   */\n      dup4\n        /* \"#utility.yul\":6095:6113   */\n      add\n        /* \"#utility.yul\":6086:6092   */\n      dup6\n        /* \"#utility.yul\":6042:6114   */\n      tag_328\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6124:6197   */\n      tag_452\n        /* \"#utility.yul\":6192:6195   */\n      0x80\n        /* \"#utility.yul\":6181:6190   */\n      dup4\n        /* \"#utility.yul\":6177:6196   */\n      add\n        /* \"#utility.yul\":6168:6174   */\n      dup5\n        /* \"#utility.yul\":6124:6197   */\n      tag_343\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5540:6204   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6287   */\n    tag_344:\n        /* \"#utility.yul\":6247:6254   */\n      0x00\n        /* \"#utility.yul\":6276:6281   */\n      dup2\n        /* \"#utility.yul\":6265:6281   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6293:6415   */\n    tag_345:\n        /* \"#utility.yul\":6366:6390   */\n      tag_455\n        /* \"#utility.yul\":6384:6389   */\n      dup2\n        /* \"#utility.yul\":6366:6390   */\n      tag_344\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6356:6391   */\n      eq\n        /* \"#utility.yul\":6346:6409   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6405:6406   */\n      0x00\n        /* \"#utility.yul\":6402:6403   */\n      dup1\n        /* \"#utility.yul\":6395:6407   */\n      revert\n        /* \"#utility.yul\":6346:6409   */\n    tag_456:\n        /* \"#utility.yul\":6293:6415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6421:6560   */\n    tag_346:\n        /* \"#utility.yul\":6467:6472   */\n      0x00\n        /* \"#utility.yul\":6505:6511   */\n      dup2\n        /* \"#utility.yul\":6492:6512   */\n      calldataload\n        /* \"#utility.yul\":6483:6512   */\n      swap1\n      pop\n        /* \"#utility.yul\":6521:6554   */\n      tag_458\n        /* \"#utility.yul\":6548:6553   */\n      dup2\n        /* \"#utility.yul\":6521:6554   */\n      tag_345\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6421:6560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6566:6895   */\n    tag_49:\n        /* \"#utility.yul\":6625:6631   */\n      0x00\n        /* \"#utility.yul\":6674:6676   */\n      0x20\n        /* \"#utility.yul\":6662:6671   */\n      dup3\n        /* \"#utility.yul\":6653:6660   */\n      dup5\n        /* \"#utility.yul\":6649:6672   */\n      sub\n        /* \"#utility.yul\":6645:6677   */\n      slt\n        /* \"#utility.yul\":6642:6761   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6680:6759   */\n      tag_461\n      tag_321\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6642:6761   */\n    tag_460:\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6825:6878   */\n      tag_462\n        /* \"#utility.yul\":6870:6877   */\n      dup5\n        /* \"#utility.yul\":6861:6867   */\n      dup3\n        /* \"#utility.yul\":6850:6859   */\n      dup6\n        /* \"#utility.yul\":6846:6868   */\n      add\n        /* \"#utility.yul\":6825:6878   */\n      tag_346\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6815:6878   */\n      swap2\n      pop\n        /* \"#utility.yul\":6771:6888   */\n      pop\n        /* \"#utility.yul\":6566:6895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6901:7019   */\n    tag_347:\n        /* \"#utility.yul\":6988:7012   */\n      tag_464\n        /* \"#utility.yul\":7006:7011   */\n      dup2\n        /* \"#utility.yul\":6988:7012   */\n      tag_344\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6983:6986   */\n      dup3\n        /* \"#utility.yul\":6976:7013   */\n      mstore\n        /* \"#utility.yul\":6901:7019   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7247   */\n    tag_52:\n        /* \"#utility.yul\":7118:7122   */\n      0x00\n        /* \"#utility.yul\":7156:7158   */\n      0x20\n        /* \"#utility.yul\":7145:7154   */\n      dup3\n        /* \"#utility.yul\":7141:7159   */\n      add\n        /* \"#utility.yul\":7133:7159   */\n      swap1\n      pop\n        /* \"#utility.yul\":7169:7240   */\n      tag_466\n        /* \"#utility.yul\":7237:7238   */\n      0x00\n        /* \"#utility.yul\":7226:7235   */\n      dup4\n        /* \"#utility.yul\":7222:7239   */\n      add\n        /* \"#utility.yul\":7213:7219   */\n      dup5\n        /* \"#utility.yul\":7169:7240   */\n      tag_347\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7025:7247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7253:7727   */\n    tag_58:\n        /* \"#utility.yul\":7321:7327   */\n      0x00\n        /* \"#utility.yul\":7329:7335   */\n      dup1\n        /* \"#utility.yul\":7378:7380   */\n      0x40\n        /* \"#utility.yul\":7366:7375   */\n      dup4\n        /* \"#utility.yul\":7357:7364   */\n      dup6\n        /* \"#utility.yul\":7353:7376   */\n      sub\n        /* \"#utility.yul\":7349:7381   */\n      slt\n        /* \"#utility.yul\":7346:7465   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7384:7463   */\n      tag_469\n      tag_321\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7346:7465   */\n    tag_468:\n        /* \"#utility.yul\":7504:7505   */\n      0x00\n        /* \"#utility.yul\":7529:7582   */\n      tag_470\n        /* \"#utility.yul\":7574:7581   */\n      dup6\n        /* \"#utility.yul\":7565:7571   */\n      dup3\n        /* \"#utility.yul\":7554:7563   */\n      dup7\n        /* \"#utility.yul\":7550:7572   */\n      add\n        /* \"#utility.yul\":7529:7582   */\n      tag_346\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7519:7582   */\n      swap3\n      pop\n        /* \"#utility.yul\":7475:7592   */\n      pop\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"#utility.yul\":7657:7710   */\n      tag_471\n        /* \"#utility.yul\":7702:7709   */\n      dup6\n        /* \"#utility.yul\":7693:7699   */\n      dup3\n        /* \"#utility.yul\":7682:7691   */\n      dup7\n        /* \"#utility.yul\":7678:7700   */\n      add\n        /* \"#utility.yul\":7657:7710   */\n      tag_326\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7647:7710   */\n      swap2\n      pop\n        /* \"#utility.yul\":7602:7720   */\n      pop\n        /* \"#utility.yul\":7253:7727   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:7793   */\n    tag_348:\n        /* \"#utility.yul\":7761:7764   */\n      0x00\n        /* \"#utility.yul\":7782:7787   */\n      dup2\n        /* \"#utility.yul\":7775:7787   */\n      swap1\n      pop\n        /* \"#utility.yul\":7733:7793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7799:7941   */\n    tag_349:\n        /* \"#utility.yul\":7849:7858   */\n      0x00\n        /* \"#utility.yul\":7882:7935   */\n      tag_474\n        /* \"#utility.yul\":7900:7934   */\n      tag_475\n        /* \"#utility.yul\":7909:7933   */\n      tag_476\n        /* \"#utility.yul\":7927:7932   */\n      dup5\n        /* \"#utility.yul\":7909:7933   */\n      tag_323\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7900:7934   */\n      tag_348\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7882:7935   */\n      tag_323\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7869:7935   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7947:8073   */\n    tag_350:\n        /* \"#utility.yul\":7997:8006   */\n      0x00\n        /* \"#utility.yul\":8030:8067   */\n      tag_478\n        /* \"#utility.yul\":8061:8066   */\n      dup3\n        /* \"#utility.yul\":8030:8067   */\n      tag_349\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8017:8067   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:8073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8079:8219   */\n    tag_351:\n        /* \"#utility.yul\":8143:8152   */\n      0x00\n        /* \"#utility.yul\":8176:8213   */\n      tag_480\n        /* \"#utility.yul\":8207:8212   */\n      dup3\n        /* \"#utility.yul\":8176:8213   */\n      tag_350\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8163:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8079:8219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8384   */\n    tag_352:\n        /* \"#utility.yul\":8326:8377   */\n      tag_482\n        /* \"#utility.yul\":8371:8376   */\n      dup2\n        /* \"#utility.yul\":8326:8377   */\n      tag_351\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8378   */\n      mstore\n        /* \"#utility.yul\":8225:8384   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8390:8640   */\n    tag_75:\n        /* \"#utility.yul\":8497:8501   */\n      0x00\n        /* \"#utility.yul\":8535:8537   */\n      0x20\n        /* \"#utility.yul\":8524:8533   */\n      dup3\n        /* \"#utility.yul\":8520:8538   */\n      add\n        /* \"#utility.yul\":8512:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8548:8633   */\n      tag_484\n        /* \"#utility.yul\":8630:8631   */\n      0x00\n        /* \"#utility.yul\":8619:8628   */\n      dup4\n        /* \"#utility.yul\":8615:8632   */\n      add\n        /* \"#utility.yul\":8606:8612   */\n      dup5\n        /* \"#utility.yul\":8548:8633   */\n      tag_352\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8390:8640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8646:9411   */\n    tag_97:\n        /* \"#utility.yul\":8732:8738   */\n      0x00\n        /* \"#utility.yul\":8740:8746   */\n      dup1\n        /* \"#utility.yul\":8748:8754   */\n      0x00\n        /* \"#utility.yul\":8756:8762   */\n      dup1\n        /* \"#utility.yul\":8805:8808   */\n      0x80\n        /* \"#utility.yul\":8793:8802   */\n      dup6\n        /* \"#utility.yul\":8784:8791   */\n      dup8\n        /* \"#utility.yul\":8780:8803   */\n      sub\n        /* \"#utility.yul\":8776:8809   */\n      slt\n        /* \"#utility.yul\":8773:8893   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8812:8891   */\n      tag_487\n      tag_321\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8773:8893   */\n    tag_486:\n        /* \"#utility.yul\":8932:8933   */\n      0x00\n        /* \"#utility.yul\":8957:9010   */\n      tag_488\n        /* \"#utility.yul\":9002:9009   */\n      dup8\n        /* \"#utility.yul\":8993:8999   */\n      dup3\n        /* \"#utility.yul\":8982:8991   */\n      dup9\n        /* \"#utility.yul\":8978:9000   */\n      add\n        /* \"#utility.yul\":8957:9010   */\n      tag_342\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8947:9010   */\n      swap5\n      pop\n        /* \"#utility.yul\":8903:9020   */\n      pop\n        /* \"#utility.yul\":9059:9061   */\n      0x20\n        /* \"#utility.yul\":9085:9138   */\n      tag_489\n        /* \"#utility.yul\":9130:9137   */\n      dup8\n        /* \"#utility.yul\":9121:9127   */\n      dup3\n        /* \"#utility.yul\":9110:9119   */\n      dup9\n        /* \"#utility.yul\":9106:9128   */\n      add\n        /* \"#utility.yul\":9085:9138   */\n      tag_342\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9075:9138   */\n      swap4\n      pop\n        /* \"#utility.yul\":9030:9148   */\n      pop\n        /* \"#utility.yul\":9187:9189   */\n      0x40\n        /* \"#utility.yul\":9213:9266   */\n      tag_490\n        /* \"#utility.yul\":9258:9265   */\n      dup8\n        /* \"#utility.yul\":9249:9255   */\n      dup3\n        /* \"#utility.yul\":9238:9247   */\n      dup9\n        /* \"#utility.yul\":9234:9256   */\n      add\n        /* \"#utility.yul\":9213:9266   */\n      tag_342\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9203:9266   */\n      swap3\n      pop\n        /* \"#utility.yul\":9158:9276   */\n      pop\n        /* \"#utility.yul\":9315:9317   */\n      0x60\n        /* \"#utility.yul\":9341:9394   */\n      tag_491\n        /* \"#utility.yul\":9386:9393   */\n      dup8\n        /* \"#utility.yul\":9377:9383   */\n      dup3\n        /* \"#utility.yul\":9366:9375   */\n      dup9\n        /* \"#utility.yul\":9362:9384   */\n      add\n        /* \"#utility.yul\":9341:9394   */\n      tag_326\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9331:9394   */\n      swap2\n      pop\n        /* \"#utility.yul\":9286:9404   */\n      pop\n        /* \"#utility.yul\":8646:9411   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:9597   */\n    tag_353:\n        /* \"#utility.yul\":9465:9542   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9462:9463   */\n      0x00\n        /* \"#utility.yul\":9455:9543   */\n      mstore\n        /* \"#utility.yul\":9562:9566   */\n      0x11\n        /* \"#utility.yul\":9559:9560   */\n      0x04\n        /* \"#utility.yul\":9552:9567   */\n      mstore\n        /* \"#utility.yul\":9586:9590   */\n      0x24\n        /* \"#utility.yul\":9583:9584   */\n      0x00\n        /* \"#utility.yul\":9576:9591   */\n      revert\n        /* \"#utility.yul\":9603:9836   */\n    tag_108:\n        /* \"#utility.yul\":9642:9645   */\n      0x00\n        /* \"#utility.yul\":9665:9689   */\n      tag_494\n        /* \"#utility.yul\":9683:9688   */\n      dup3\n        /* \"#utility.yul\":9665:9689   */\n      tag_327\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9656:9689   */\n      swap2\n      pop\n        /* \"#utility.yul\":9711:9777   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9704:9709   */\n      dup3\n        /* \"#utility.yul\":9701:9778   */\n      sub\n        /* \"#utility.yul\":9698:9801   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":9781:9799   */\n      tag_496\n      tag_353\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9698:9801   */\n    tag_495:\n        /* \"#utility.yul\":9828:9829   */\n      0x01\n        /* \"#utility.yul\":9821:9826   */\n      dup3\n        /* \"#utility.yul\":9817:9830   */\n      add\n        /* \"#utility.yul\":9810:9830   */\n      swap1\n      pop\n        /* \"#utility.yul\":9603:9836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9842:10022   */\n    tag_122:\n        /* \"#utility.yul\":9890:9967   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9880:9968   */\n      mstore\n        /* \"#utility.yul\":9987:9991   */\n      0x41\n        /* \"#utility.yul\":9984:9985   */\n      0x04\n        /* \"#utility.yul\":9977:9992   */\n      mstore\n        /* \"#utility.yul\":10011:10015   */\n      0x24\n        /* \"#utility.yul\":10008:10009   */\n      0x00\n        /* \"#utility.yul\":10001:10016   */\n      revert\n        /* \"#utility.yul\":10028:10208   */\n    tag_131:\n        /* \"#utility.yul\":10076:10153   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10073:10074   */\n      0x00\n        /* \"#utility.yul\":10066:10154   */\n      mstore\n        /* \"#utility.yul\":10173:10177   */\n      0x32\n        /* \"#utility.yul\":10170:10171   */\n      0x04\n        /* \"#utility.yul\":10163:10178   */\n      mstore\n        /* \"#utility.yul\":10197:10201   */\n      0x24\n        /* \"#utility.yul\":10194:10195   */\n      0x00\n        /* \"#utility.yul\":10187:10202   */\n      revert\n        /* \"#utility.yul\":10214:10383   */\n    tag_354:\n        /* \"#utility.yul\":10298:10309   */\n      0x00\n        /* \"#utility.yul\":10332:10338   */\n      dup3\n        /* \"#utility.yul\":10327:10330   */\n      dup3\n        /* \"#utility.yul\":10320:10339   */\n      mstore\n        /* \"#utility.yul\":10372:10376   */\n      0x20\n        /* \"#utility.yul\":10367:10370   */\n      dup3\n        /* \"#utility.yul\":10363:10377   */\n      add\n        /* \"#utility.yul\":10348:10377   */\n      swap1\n      pop\n        /* \"#utility.yul\":10214:10383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10389:10557   */\n    tag_355:\n        /* \"#utility.yul\":10529:10549   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":10525:10526   */\n      0x00\n        /* \"#utility.yul\":10517:10523   */\n      dup3\n        /* \"#utility.yul\":10513:10527   */\n      add\n        /* \"#utility.yul\":10506:10550   */\n      mstore\n        /* \"#utility.yul\":10389:10557   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10563:10929   */\n    tag_356:\n        /* \"#utility.yul\":10705:10708   */\n      0x00\n        /* \"#utility.yul\":10726:10793   */\n      tag_502\n        /* \"#utility.yul\":10790:10792   */\n      0x12\n        /* \"#utility.yul\":10785:10788   */\n      dup4\n        /* \"#utility.yul\":10726:10793   */\n      tag_354\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10719:10793   */\n      swap2\n      pop\n        /* \"#utility.yul\":10802:10895   */\n      tag_503\n        /* \"#utility.yul\":10891:10894   */\n      dup3\n        /* \"#utility.yul\":10802:10895   */\n      tag_355\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10920:10922   */\n      0x20\n        /* \"#utility.yul\":10915:10918   */\n      dup3\n        /* \"#utility.yul\":10911:10923   */\n      add\n        /* \"#utility.yul\":10904:10923   */\n      swap1\n      pop\n        /* \"#utility.yul\":10563:10929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10935:11354   */\n    tag_140:\n        /* \"#utility.yul\":11101:11105   */\n      0x00\n        /* \"#utility.yul\":11139:11141   */\n      0x20\n        /* \"#utility.yul\":11128:11137   */\n      dup3\n        /* \"#utility.yul\":11124:11142   */\n      add\n        /* \"#utility.yul\":11116:11142   */\n      swap1\n      pop\n        /* \"#utility.yul\":11188:11197   */\n      dup2\n        /* \"#utility.yul\":11182:11186   */\n      dup2\n        /* \"#utility.yul\":11178:11198   */\n      sub\n        /* \"#utility.yul\":11174:11175   */\n      0x00\n        /* \"#utility.yul\":11163:11172   */\n      dup4\n        /* \"#utility.yul\":11159:11176   */\n      add\n        /* \"#utility.yul\":11152:11199   */\n      mstore\n        /* \"#utility.yul\":11216:11347   */\n      tag_505\n        /* \"#utility.yul\":11342:11346   */\n      dup2\n        /* \"#utility.yul\":11216:11347   */\n      tag_356\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11208:11347   */\n      swap1\n      pop\n        /* \"#utility.yul\":10935:11354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11360:11530   */\n    tag_357:\n        /* \"#utility.yul\":11500:11522   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":11496:11497   */\n      0x00\n        /* \"#utility.yul\":11488:11494   */\n      dup3\n        /* \"#utility.yul\":11484:11498   */\n      add\n        /* \"#utility.yul\":11477:11523   */\n      mstore\n        /* \"#utility.yul\":11360:11530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11536:11902   */\n    tag_358:\n        /* \"#utility.yul\":11678:11681   */\n      0x00\n        /* \"#utility.yul\":11699:11766   */\n      tag_508\n        /* \"#utility.yul\":11763:11765   */\n      0x14\n        /* \"#utility.yul\":11758:11761   */\n      dup4\n        /* \"#utility.yul\":11699:11766   */\n      tag_354\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11692:11766   */\n      swap2\n      pop\n        /* \"#utility.yul\":11775:11868   */\n      tag_509\n        /* \"#utility.yul\":11864:11867   */\n      dup3\n        /* \"#utility.yul\":11775:11868   */\n      tag_357\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11893:11895   */\n      0x20\n        /* \"#utility.yul\":11888:11891   */\n      dup3\n        /* \"#utility.yul\":11884:11896   */\n      add\n        /* \"#utility.yul\":11877:11896   */\n      swap1\n      pop\n        /* \"#utility.yul\":11536:11902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11908:12327   */\n    tag_143:\n        /* \"#utility.yul\":12074:12078   */\n      0x00\n        /* \"#utility.yul\":12112:12114   */\n      0x20\n        /* \"#utility.yul\":12101:12110   */\n      dup3\n        /* \"#utility.yul\":12097:12115   */\n      add\n        /* \"#utility.yul\":12089:12115   */\n      swap1\n      pop\n        /* \"#utility.yul\":12161:12170   */\n      dup2\n        /* \"#utility.yul\":12155:12159   */\n      dup2\n        /* \"#utility.yul\":12151:12171   */\n      sub\n        /* \"#utility.yul\":12147:12148   */\n      0x00\n        /* \"#utility.yul\":12136:12145   */\n      dup4\n        /* \"#utility.yul\":12132:12149   */\n      add\n        /* \"#utility.yul\":12125:12172   */\n      mstore\n        /* \"#utility.yul\":12189:12320   */\n      tag_511\n        /* \"#utility.yul\":12315:12319   */\n      dup2\n        /* \"#utility.yul\":12189:12320   */\n      tag_358\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12181:12320   */\n      swap1\n      pop\n        /* \"#utility.yul\":11908:12327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12333:12665   */\n    tag_150:\n        /* \"#utility.yul\":12454:12458   */\n      0x00\n        /* \"#utility.yul\":12492:12494   */\n      0x40\n        /* \"#utility.yul\":12481:12490   */\n      dup3\n        /* \"#utility.yul\":12477:12495   */\n      add\n        /* \"#utility.yul\":12469:12495   */\n      swap1\n      pop\n        /* \"#utility.yul\":12505:12576   */\n      tag_513\n        /* \"#utility.yul\":12573:12574   */\n      0x00\n        /* \"#utility.yul\":12562:12571   */\n      dup4\n        /* \"#utility.yul\":12558:12575   */\n      add\n        /* \"#utility.yul\":12549:12555   */\n      dup6\n        /* \"#utility.yul\":12505:12576   */\n      tag_343\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12586:12658   */\n      tag_514\n        /* \"#utility.yul\":12654:12656   */\n      0x20\n        /* \"#utility.yul\":12643:12652   */\n      dup4\n        /* \"#utility.yul\":12639:12657   */\n      add\n        /* \"#utility.yul\":12630:12636   */\n      dup5\n        /* \"#utility.yul\":12586:12658   */\n      tag_328\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12333:12665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12671:12787   */\n    tag_359:\n        /* \"#utility.yul\":12741:12762   */\n      tag_516\n        /* \"#utility.yul\":12756:12761   */\n      dup2\n        /* \"#utility.yul\":12741:12762   */\n      tag_332\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12734:12739   */\n      dup2\n        /* \"#utility.yul\":12731:12763   */\n      eq\n        /* \"#utility.yul\":12721:12781   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":12777:12778   */\n      0x00\n        /* \"#utility.yul\":12774:12775   */\n      dup1\n        /* \"#utility.yul\":12767:12779   */\n      revert\n        /* \"#utility.yul\":12721:12781   */\n    tag_517:\n        /* \"#utility.yul\":12671:12787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12793:12930   */\n    tag_360:\n        /* \"#utility.yul\":12847:12852   */\n      0x00\n        /* \"#utility.yul\":12878:12884   */\n      dup2\n        /* \"#utility.yul\":12872:12885   */\n      mload\n        /* \"#utility.yul\":12863:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12894:12924   */\n      tag_519\n        /* \"#utility.yul\":12918:12923   */\n      dup2\n        /* \"#utility.yul\":12894:12924   */\n      tag_359\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12793:12930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12936:13281   */\n    tag_154:\n        /* \"#utility.yul\":13003:13009   */\n      0x00\n        /* \"#utility.yul\":13052:13054   */\n      0x20\n        /* \"#utility.yul\":13040:13049   */\n      dup3\n        /* \"#utility.yul\":13031:13038   */\n      dup5\n        /* \"#utility.yul\":13027:13050   */\n      sub\n        /* \"#utility.yul\":13023:13055   */\n      slt\n        /* \"#utility.yul\":13020:13139   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":13058:13137   */\n      tag_522\n      tag_321\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13020:13139   */\n    tag_521:\n        /* \"#utility.yul\":13178:13179   */\n      0x00\n        /* \"#utility.yul\":13203:13264   */\n      tag_523\n        /* \"#utility.yul\":13256:13263   */\n      dup5\n        /* \"#utility.yul\":13247:13253   */\n      dup3\n        /* \"#utility.yul\":13236:13245   */\n      dup6\n        /* \"#utility.yul\":13232:13254   */\n      add\n        /* \"#utility.yul\":13203:13264   */\n      tag_360\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":13193:13264   */\n      swap2\n      pop\n        /* \"#utility.yul\":13149:13274   */\n      pop\n        /* \"#utility.yul\":12936:13281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13287:13452   */\n    tag_361:\n        /* \"#utility.yul\":13427:13444   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":13423:13424   */\n      0x00\n        /* \"#utility.yul\":13415:13421   */\n      dup3\n        /* \"#utility.yul\":13411:13425   */\n      add\n        /* \"#utility.yul\":13404:13445   */\n      mstore\n        /* \"#utility.yul\":13287:13452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13458:13824   */\n    tag_362:\n        /* \"#utility.yul\":13600:13603   */\n      0x00\n        /* \"#utility.yul\":13621:13688   */\n      tag_526\n        /* \"#utility.yul\":13685:13687   */\n      0x0f\n        /* \"#utility.yul\":13680:13683   */\n      dup4\n        /* \"#utility.yul\":13621:13688   */\n      tag_354\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13614:13688   */\n      swap2\n      pop\n        /* \"#utility.yul\":13697:13790   */\n      tag_527\n        /* \"#utility.yul\":13786:13789   */\n      dup3\n        /* \"#utility.yul\":13697:13790   */\n      tag_361\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13815:13817   */\n      0x20\n        /* \"#utility.yul\":13810:13813   */\n      dup3\n        /* \"#utility.yul\":13806:13818   */\n      add\n        /* \"#utility.yul\":13799:13818   */\n      swap1\n      pop\n        /* \"#utility.yul\":13458:13824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13830:14249   */\n    tag_157:\n        /* \"#utility.yul\":13996:14000   */\n      0x00\n        /* \"#utility.yul\":14034:14036   */\n      0x20\n        /* \"#utility.yul\":14023:14032   */\n      dup3\n        /* \"#utility.yul\":14019:14037   */\n      add\n        /* \"#utility.yul\":14011:14037   */\n      swap1\n      pop\n        /* \"#utility.yul\":14083:14092   */\n      dup2\n        /* \"#utility.yul\":14077:14081   */\n      dup2\n        /* \"#utility.yul\":14073:14093   */\n      sub\n        /* \"#utility.yul\":14069:14070   */\n      0x00\n        /* \"#utility.yul\":14058:14067   */\n      dup4\n        /* \"#utility.yul\":14054:14071   */\n      add\n        /* \"#utility.yul\":14047:14094   */\n      mstore\n        /* \"#utility.yul\":14111:14242   */\n      tag_529\n        /* \"#utility.yul\":14237:14241   */\n      dup2\n        /* \"#utility.yul\":14111:14242   */\n      tag_362\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14103:14242   */\n      swap1\n      pop\n        /* \"#utility.yul\":13830:14249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14417   */\n    tag_363:\n        /* \"#utility.yul\":14395:14409   */\n      0x4f76657220636c61696d65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":14391:14392   */\n      0x00\n        /* \"#utility.yul\":14383:14389   */\n      dup3\n        /* \"#utility.yul\":14379:14393   */\n      add\n        /* \"#utility.yul\":14372:14410   */\n      mstore\n        /* \"#utility.yul\":14255:14417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14423:14789   */\n    tag_364:\n        /* \"#utility.yul\":14565:14568   */\n      0x00\n        /* \"#utility.yul\":14586:14653   */\n      tag_532\n        /* \"#utility.yul\":14650:14652   */\n      0x0c\n        /* \"#utility.yul\":14645:14648   */\n      dup4\n        /* \"#utility.yul\":14586:14653   */\n      tag_354\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14579:14653   */\n      swap2\n      pop\n        /* \"#utility.yul\":14662:14755   */\n      tag_533\n        /* \"#utility.yul\":14751:14754   */\n      dup3\n        /* \"#utility.yul\":14662:14755   */\n      tag_363\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14780:14782   */\n      0x20\n        /* \"#utility.yul\":14775:14778   */\n      dup3\n        /* \"#utility.yul\":14771:14783   */\n      add\n        /* \"#utility.yul\":14764:14783   */\n      swap1\n      pop\n        /* \"#utility.yul\":14423:14789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14795:15214   */\n    tag_185:\n        /* \"#utility.yul\":14961:14965   */\n      0x00\n        /* \"#utility.yul\":14999:15001   */\n      0x20\n        /* \"#utility.yul\":14988:14997   */\n      dup3\n        /* \"#utility.yul\":14984:15002   */\n      add\n        /* \"#utility.yul\":14976:15002   */\n      swap1\n      pop\n        /* \"#utility.yul\":15048:15057   */\n      dup2\n        /* \"#utility.yul\":15042:15046   */\n      dup2\n        /* \"#utility.yul\":15038:15058   */\n      sub\n        /* \"#utility.yul\":15034:15035   */\n      0x00\n        /* \"#utility.yul\":15023:15032   */\n      dup4\n        /* \"#utility.yul\":15019:15036   */\n      add\n        /* \"#utility.yul\":15012:15059   */\n      mstore\n        /* \"#utility.yul\":15076:15207   */\n      tag_535\n        /* \"#utility.yul\":15202:15206   */\n      dup2\n        /* \"#utility.yul\":15076:15207   */\n      tag_364\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15068:15207   */\n      swap1\n      pop\n        /* \"#utility.yul\":14795:15214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15220:15380   */\n    tag_365:\n        /* \"#utility.yul\":15360:15372   */\n      0x4e6f207265776172647300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15356:15357   */\n      0x00\n        /* \"#utility.yul\":15348:15354   */\n      dup3\n        /* \"#utility.yul\":15344:15358   */\n      add\n        /* \"#utility.yul\":15337:15373   */\n      mstore\n        /* \"#utility.yul\":15220:15380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15386:15752   */\n    tag_366:\n        /* \"#utility.yul\":15528:15531   */\n      0x00\n        /* \"#utility.yul\":15549:15616   */\n      tag_538\n        /* \"#utility.yul\":15613:15615   */\n      0x0a\n        /* \"#utility.yul\":15608:15611   */\n      dup4\n        /* \"#utility.yul\":15549:15616   */\n      tag_354\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15542:15616   */\n      swap2\n      pop\n        /* \"#utility.yul\":15625:15718   */\n      tag_539\n        /* \"#utility.yul\":15714:15717   */\n      dup3\n        /* \"#utility.yul\":15625:15718   */\n      tag_365\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":15743:15745   */\n      0x20\n        /* \"#utility.yul\":15738:15741   */\n      dup3\n        /* \"#utility.yul\":15734:15746   */\n      add\n        /* \"#utility.yul\":15727:15746   */\n      swap1\n      pop\n        /* \"#utility.yul\":15386:15752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15758:16177   */\n    tag_193:\n        /* \"#utility.yul\":15924:15928   */\n      0x00\n        /* \"#utility.yul\":15962:15964   */\n      0x20\n        /* \"#utility.yul\":15951:15960   */\n      dup3\n        /* \"#utility.yul\":15947:15965   */\n      add\n        /* \"#utility.yul\":15939:15965   */\n      swap1\n      pop\n        /* \"#utility.yul\":16011:16020   */\n      dup2\n        /* \"#utility.yul\":16005:16009   */\n      dup2\n        /* \"#utility.yul\":16001:16021   */\n      sub\n        /* \"#utility.yul\":15997:15998   */\n      0x00\n        /* \"#utility.yul\":15986:15995   */\n      dup4\n        /* \"#utility.yul\":15982:15999   */\n      add\n        /* \"#utility.yul\":15975:16022   */\n      mstore\n        /* \"#utility.yul\":16039:16170   */\n      tag_541\n        /* \"#utility.yul\":16165:16169   */\n      dup2\n        /* \"#utility.yul\":16039:16170   */\n      tag_366\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16031:16170   */\n      swap1\n      pop\n        /* \"#utility.yul\":15758:16177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16183:16515   */\n    tag_195:\n        /* \"#utility.yul\":16304:16308   */\n      0x00\n        /* \"#utility.yul\":16342:16344   */\n      0x40\n        /* \"#utility.yul\":16331:16340   */\n      dup3\n        /* \"#utility.yul\":16327:16345   */\n      add\n        /* \"#utility.yul\":16319:16345   */\n      swap1\n      pop\n        /* \"#utility.yul\":16355:16426   */\n      tag_543\n        /* \"#utility.yul\":16423:16424   */\n      0x00\n        /* \"#utility.yul\":16412:16421   */\n      dup4\n        /* \"#utility.yul\":16408:16425   */\n      add\n        /* \"#utility.yul\":16399:16405   */\n      dup6\n        /* \"#utility.yul\":16355:16426   */\n      tag_328\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16436:16508   */\n      tag_544\n        /* \"#utility.yul\":16504:16506   */\n      0x20\n        /* \"#utility.yul\":16493:16502   */\n      dup4\n        /* \"#utility.yul\":16489:16507   */\n      add\n        /* \"#utility.yul\":16480:16486   */\n      dup5\n        /* \"#utility.yul\":16436:16508   */\n      tag_343\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16183:16515   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16521:16963   */\n    tag_209:\n        /* \"#utility.yul\":16670:16674   */\n      0x00\n        /* \"#utility.yul\":16708:16710   */\n      0x60\n        /* \"#utility.yul\":16697:16706   */\n      dup3\n        /* \"#utility.yul\":16693:16711   */\n      add\n        /* \"#utility.yul\":16685:16711   */\n      swap1\n      pop\n        /* \"#utility.yul\":16721:16792   */\n      tag_546\n        /* \"#utility.yul\":16789:16790   */\n      0x00\n        /* \"#utility.yul\":16778:16787   */\n      dup4\n        /* \"#utility.yul\":16774:16791   */\n      add\n        /* \"#utility.yul\":16765:16771   */\n      dup7\n        /* \"#utility.yul\":16721:16792   */\n      tag_343\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":16802:16874   */\n      tag_547\n        /* \"#utility.yul\":16870:16872   */\n      0x20\n        /* \"#utility.yul\":16859:16868   */\n      dup4\n        /* \"#utility.yul\":16855:16873   */\n      add\n        /* \"#utility.yul\":16846:16852   */\n      dup6\n        /* \"#utility.yul\":16802:16874   */\n      tag_343\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16884:16956   */\n      tag_548\n        /* \"#utility.yul\":16952:16954   */\n      0x40\n        /* \"#utility.yul\":16941:16950   */\n      dup4\n        /* \"#utility.yul\":16937:16955   */\n      add\n        /* \"#utility.yul\":16928:16934   */\n      dup5\n        /* \"#utility.yul\":16884:16956   */\n      tag_328\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16521:16963   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16969:17137   */\n    tag_367:\n        /* \"#utility.yul\":17109:17129   */\n      0x53746172742074696d6520696e20706173740000000000000000000000000000\n        /* \"#utility.yul\":17105:17106   */\n      0x00\n        /* \"#utility.yul\":17097:17103   */\n      dup3\n        /* \"#utility.yul\":17093:17107   */\n      add\n        /* \"#utility.yul\":17086:17130   */\n      mstore\n        /* \"#utility.yul\":16969:17137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17143:17509   */\n    tag_368:\n        /* \"#utility.yul\":17285:17288   */\n      0x00\n        /* \"#utility.yul\":17306:17373   */\n      tag_551\n        /* \"#utility.yul\":17370:17372   */\n      0x12\n        /* \"#utility.yul\":17365:17368   */\n      dup4\n        /* \"#utility.yul\":17306:17373   */\n      tag_354\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17299:17373   */\n      swap2\n      pop\n        /* \"#utility.yul\":17382:17475   */\n      tag_552\n        /* \"#utility.yul\":17471:17474   */\n      dup3\n        /* \"#utility.yul\":17382:17475   */\n      tag_367\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17500:17502   */\n      0x20\n        /* \"#utility.yul\":17495:17498   */\n      dup3\n        /* \"#utility.yul\":17491:17503   */\n      add\n        /* \"#utility.yul\":17484:17503   */\n      swap1\n      pop\n        /* \"#utility.yul\":17143:17509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17515:17934   */\n    tag_227:\n        /* \"#utility.yul\":17681:17685   */\n      0x00\n        /* \"#utility.yul\":17719:17721   */\n      0x20\n        /* \"#utility.yul\":17708:17717   */\n      dup3\n        /* \"#utility.yul\":17704:17722   */\n      add\n        /* \"#utility.yul\":17696:17722   */\n      swap1\n      pop\n        /* \"#utility.yul\":17768:17777   */\n      dup2\n        /* \"#utility.yul\":17762:17766   */\n      dup2\n        /* \"#utility.yul\":17758:17778   */\n      sub\n        /* \"#utility.yul\":17754:17755   */\n      0x00\n        /* \"#utility.yul\":17743:17752   */\n      dup4\n        /* \"#utility.yul\":17739:17756   */\n      add\n        /* \"#utility.yul\":17732:17779   */\n      mstore\n        /* \"#utility.yul\":17796:17927   */\n      tag_554\n        /* \"#utility.yul\":17922:17926   */\n      dup2\n        /* \"#utility.yul\":17796:17927   */\n      tag_368\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17788:17927   */\n      swap1\n      pop\n        /* \"#utility.yul\":17515:17934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17940:18106   */\n    tag_369:\n        /* \"#utility.yul\":18080:18098   */\n      0x496e76616c6964206475726174696f6e00000000000000000000000000000000\n        /* \"#utility.yul\":18076:18077   */\n      0x00\n        /* \"#utility.yul\":18068:18074   */\n      dup3\n        /* \"#utility.yul\":18064:18078   */\n      add\n        /* \"#utility.yul\":18057:18099   */\n      mstore\n        /* \"#utility.yul\":17940:18106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18112:18478   */\n    tag_370:\n        /* \"#utility.yul\":18254:18257   */\n      0x00\n        /* \"#utility.yul\":18275:18342   */\n      tag_557\n        /* \"#utility.yul\":18339:18341   */\n      0x10\n        /* \"#utility.yul\":18334:18337   */\n      dup4\n        /* \"#utility.yul\":18275:18342   */\n      tag_354\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18268:18342   */\n      swap2\n      pop\n        /* \"#utility.yul\":18351:18444   */\n      tag_558\n        /* \"#utility.yul\":18440:18443   */\n      dup3\n        /* \"#utility.yul\":18351:18444   */\n      tag_369\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18469:18471   */\n      0x20\n        /* \"#utility.yul\":18464:18467   */\n      dup3\n        /* \"#utility.yul\":18460:18472   */\n      add\n        /* \"#utility.yul\":18453:18472   */\n      swap1\n      pop\n        /* \"#utility.yul\":18112:18478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18484:18903   */\n    tag_230:\n        /* \"#utility.yul\":18650:18654   */\n      0x00\n        /* \"#utility.yul\":18688:18690   */\n      0x20\n        /* \"#utility.yul\":18677:18686   */\n      dup3\n        /* \"#utility.yul\":18673:18691   */\n      add\n        /* \"#utility.yul\":18665:18691   */\n      swap1\n      pop\n        /* \"#utility.yul\":18737:18746   */\n      dup2\n        /* \"#utility.yul\":18731:18735   */\n      dup2\n        /* \"#utility.yul\":18727:18747   */\n      sub\n        /* \"#utility.yul\":18723:18724   */\n      0x00\n        /* \"#utility.yul\":18712:18721   */\n      dup4\n        /* \"#utility.yul\":18708:18725   */\n      add\n        /* \"#utility.yul\":18701:18748   */\n      mstore\n        /* \"#utility.yul\":18765:18896   */\n      tag_560\n        /* \"#utility.yul\":18891:18895   */\n      dup2\n        /* \"#utility.yul\":18765:18896   */\n      tag_370\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18757:18896   */\n      swap1\n      pop\n        /* \"#utility.yul\":18484:18903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18909:19080   */\n    tag_371:\n        /* \"#utility.yul\":19049:19072   */\n      0x496e76616c69642072657761726420616d6f756e740000000000000000000000\n        /* \"#utility.yul\":19045:19046   */\n      0x00\n        /* \"#utility.yul\":19037:19043   */\n      dup3\n        /* \"#utility.yul\":19033:19047   */\n      add\n        /* \"#utility.yul\":19026:19073   */\n      mstore\n        /* \"#utility.yul\":18909:19080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19086:19452   */\n    tag_372:\n        /* \"#utility.yul\":19228:19231   */\n      0x00\n        /* \"#utility.yul\":19249:19316   */\n      tag_563\n        /* \"#utility.yul\":19313:19315   */\n      0x15\n        /* \"#utility.yul\":19308:19311   */\n      dup4\n        /* \"#utility.yul\":19249:19316   */\n      tag_354\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19242:19316   */\n      swap2\n      pop\n        /* \"#utility.yul\":19325:19418   */\n      tag_564\n        /* \"#utility.yul\":19414:19417   */\n      dup3\n        /* \"#utility.yul\":19325:19418   */\n      tag_371\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19443:19445   */\n      0x20\n        /* \"#utility.yul\":19438:19441   */\n      dup3\n        /* \"#utility.yul\":19434:19446   */\n      add\n        /* \"#utility.yul\":19427:19446   */\n      swap1\n      pop\n        /* \"#utility.yul\":19086:19452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19458:19877   */\n    tag_233:\n        /* \"#utility.yul\":19624:19628   */\n      0x00\n        /* \"#utility.yul\":19662:19664   */\n      0x20\n        /* \"#utility.yul\":19651:19660   */\n      dup3\n        /* \"#utility.yul\":19647:19665   */\n      add\n        /* \"#utility.yul\":19639:19665   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:19720   */\n      dup2\n        /* \"#utility.yul\":19705:19709   */\n      dup2\n        /* \"#utility.yul\":19701:19721   */\n      sub\n        /* \"#utility.yul\":19697:19698   */\n      0x00\n        /* \"#utility.yul\":19686:19695   */\n      dup4\n        /* \"#utility.yul\":19682:19699   */\n      add\n        /* \"#utility.yul\":19675:19722   */\n      mstore\n        /* \"#utility.yul\":19739:19870   */\n      tag_566\n        /* \"#utility.yul\":19865:19869   */\n      dup2\n        /* \"#utility.yul\":19739:19870   */\n      tag_372\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19731:19870   */\n      swap1\n      pop\n        /* \"#utility.yul\":19458:19877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19883:20105   */\n    tag_235:\n        /* \"#utility.yul\":19976:19980   */\n      0x00\n        /* \"#utility.yul\":20014:20016   */\n      0x20\n        /* \"#utility.yul\":20003:20012   */\n      dup3\n        /* \"#utility.yul\":19999:20017   */\n      add\n        /* \"#utility.yul\":19991:20017   */\n      swap1\n      pop\n        /* \"#utility.yul\":20027:20098   */\n      tag_568\n        /* \"#utility.yul\":20095:20096   */\n      0x00\n        /* \"#utility.yul\":20084:20093   */\n      dup4\n        /* \"#utility.yul\":20080:20097   */\n      add\n        /* \"#utility.yul\":20071:20077   */\n      dup5\n        /* \"#utility.yul\":20027:20098   */\n      tag_343\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":19883:20105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20111:20254   */\n    tag_373:\n        /* \"#utility.yul\":20168:20173   */\n      0x00\n        /* \"#utility.yul\":20199:20205   */\n      dup2\n        /* \"#utility.yul\":20193:20206   */\n      mload\n        /* \"#utility.yul\":20184:20206   */\n      swap1\n      pop\n        /* \"#utility.yul\":20215:20248   */\n      tag_570\n        /* \"#utility.yul\":20242:20247   */\n      dup2\n        /* \"#utility.yul\":20215:20248   */\n      tag_341\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":20111:20254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20260:20611   */\n    tag_239:\n        /* \"#utility.yul\":20330:20336   */\n      0x00\n        /* \"#utility.yul\":20379:20381   */\n      0x20\n        /* \"#utility.yul\":20367:20376   */\n      dup3\n        /* \"#utility.yul\":20358:20365   */\n      dup5\n        /* \"#utility.yul\":20354:20377   */\n      sub\n        /* \"#utility.yul\":20350:20382   */\n      slt\n        /* \"#utility.yul\":20347:20466   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":20385:20464   */\n      tag_573\n      tag_321\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":20347:20466   */\n    tag_572:\n        /* \"#utility.yul\":20505:20506   */\n      0x00\n        /* \"#utility.yul\":20530:20594   */\n      tag_574\n        /* \"#utility.yul\":20586:20593   */\n      dup5\n        /* \"#utility.yul\":20577:20583   */\n      dup3\n        /* \"#utility.yul\":20566:20575   */\n      dup6\n        /* \"#utility.yul\":20562:20584   */\n      add\n        /* \"#utility.yul\":20530:20594   */\n      tag_373\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20520:20594   */\n      swap2\n      pop\n        /* \"#utility.yul\":20476:20604   */\n      pop\n        /* \"#utility.yul\":20260:20611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20617:20793   */\n    tag_374:\n        /* \"#utility.yul\":20757:20785   */\n      0x496e73756666696369656e742072657761726420746f6b656e73000000000000\n        /* \"#utility.yul\":20753:20754   */\n      0x00\n        /* \"#utility.yul\":20745:20751   */\n      dup3\n        /* \"#utility.yul\":20741:20755   */\n      add\n        /* \"#utility.yul\":20734:20786   */\n      mstore\n        /* \"#utility.yul\":20617:20793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20799:21165   */\n    tag_375:\n        /* \"#utility.yul\":20941:20944   */\n      0x00\n        /* \"#utility.yul\":20962:21029   */\n      tag_577\n        /* \"#utility.yul\":21026:21028   */\n      0x1a\n        /* \"#utility.yul\":21021:21024   */\n      dup4\n        /* \"#utility.yul\":20962:21029   */\n      tag_354\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20955:21029   */\n      swap2\n      pop\n        /* \"#utility.yul\":21038:21131   */\n      tag_578\n        /* \"#utility.yul\":21127:21130   */\n      dup3\n        /* \"#utility.yul\":21038:21131   */\n      tag_374\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":21156:21158   */\n      0x20\n        /* \"#utility.yul\":21151:21154   */\n      dup3\n        /* \"#utility.yul\":21147:21159   */\n      add\n        /* \"#utility.yul\":21140:21159   */\n      swap1\n      pop\n        /* \"#utility.yul\":20799:21165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21171:21590   */\n    tag_242:\n        /* \"#utility.yul\":21337:21341   */\n      0x00\n        /* \"#utility.yul\":21375:21377   */\n      0x20\n        /* \"#utility.yul\":21364:21373   */\n      dup3\n        /* \"#utility.yul\":21360:21378   */\n      add\n        /* \"#utility.yul\":21352:21378   */\n      swap1\n      pop\n        /* \"#utility.yul\":21424:21433   */\n      dup2\n        /* \"#utility.yul\":21418:21422   */\n      dup2\n        /* \"#utility.yul\":21414:21434   */\n      sub\n        /* \"#utility.yul\":21410:21411   */\n      0x00\n        /* \"#utility.yul\":21399:21408   */\n      dup4\n        /* \"#utility.yul\":21395:21412   */\n      add\n        /* \"#utility.yul\":21388:21435   */\n      mstore\n        /* \"#utility.yul\":21452:21583   */\n      tag_580\n        /* \"#utility.yul\":21578:21582   */\n      dup2\n        /* \"#utility.yul\":21452:21583   */\n      tag_375\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":21444:21583   */\n      swap1\n      pop\n        /* \"#utility.yul\":21171:21590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21596:21787   */\n    tag_263:\n        /* \"#utility.yul\":21636:21639   */\n      0x00\n        /* \"#utility.yul\":21655:21675   */\n      tag_582\n        /* \"#utility.yul\":21673:21674   */\n      dup3\n        /* \"#utility.yul\":21655:21675   */\n      tag_327\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":21650:21675   */\n      swap2\n      pop\n        /* \"#utility.yul\":21689:21709   */\n      tag_583\n        /* \"#utility.yul\":21707:21708   */\n      dup4\n        /* \"#utility.yul\":21689:21709   */\n      tag_327\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":21684:21709   */\n      swap3\n      pop\n        /* \"#utility.yul\":21732:21733   */\n      dup3\n        /* \"#utility.yul\":21729:21730   */\n      dup3\n        /* \"#utility.yul\":21725:21734   */\n      add\n        /* \"#utility.yul\":21718:21734   */\n      swap1\n      pop\n        /* \"#utility.yul\":21753:21756   */\n      dup1\n        /* \"#utility.yul\":21750:21751   */\n      dup3\n        /* \"#utility.yul\":21747:21757   */\n      gt\n        /* \"#utility.yul\":21744:21780   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":21760:21778   */\n      tag_585\n      tag_353\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21744:21780   */\n    tag_584:\n        /* \"#utility.yul\":21596:21787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21793:21974   */\n    tag_376:\n        /* \"#utility.yul\":21933:21966   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":21929:21930   */\n      0x00\n        /* \"#utility.yul\":21921:21927   */\n      dup3\n        /* \"#utility.yul\":21917:21931   */\n      add\n        /* \"#utility.yul\":21910:21967   */\n      mstore\n        /* \"#utility.yul\":21793:21974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21980:22346   */\n    tag_377:\n        /* \"#utility.yul\":22122:22125   */\n      0x00\n        /* \"#utility.yul\":22143:22210   */\n      tag_588\n        /* \"#utility.yul\":22207:22209   */\n      0x1f\n        /* \"#utility.yul\":22202:22205   */\n      dup4\n        /* \"#utility.yul\":22143:22210   */\n      tag_354\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":22136:22210   */\n      swap2\n      pop\n        /* \"#utility.yul\":22219:22312   */\n      tag_589\n        /* \"#utility.yul\":22308:22311   */\n      dup3\n        /* \"#utility.yul\":22219:22312   */\n      tag_376\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":22337:22339   */\n      0x20\n        /* \"#utility.yul\":22332:22335   */\n      dup3\n        /* \"#utility.yul\":22328:22340   */\n      add\n        /* \"#utility.yul\":22321:22340   */\n      swap1\n      pop\n        /* \"#utility.yul\":21980:22346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22352:22771   */\n    tag_268:\n        /* \"#utility.yul\":22518:22522   */\n      0x00\n        /* \"#utility.yul\":22556:22558   */\n      0x20\n        /* \"#utility.yul\":22545:22554   */\n      dup3\n        /* \"#utility.yul\":22541:22559   */\n      add\n        /* \"#utility.yul\":22533:22559   */\n      swap1\n      pop\n        /* \"#utility.yul\":22605:22614   */\n      dup2\n        /* \"#utility.yul\":22599:22603   */\n      dup2\n        /* \"#utility.yul\":22595:22615   */\n      sub\n        /* \"#utility.yul\":22591:22592   */\n      0x00\n        /* \"#utility.yul\":22580:22589   */\n      dup4\n        /* \"#utility.yul\":22576:22593   */\n      add\n        /* \"#utility.yul\":22569:22616   */\n      mstore\n        /* \"#utility.yul\":22633:22764   */\n      tag_591\n        /* \"#utility.yul\":22759:22763   */\n      dup2\n        /* \"#utility.yul\":22633:22764   */\n      tag_377\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":22625:22764   */\n      swap1\n      pop\n        /* \"#utility.yul\":22352:22771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22777:22971   */\n    tag_278:\n        /* \"#utility.yul\":22817:22821   */\n      0x00\n        /* \"#utility.yul\":22837:22857   */\n      tag_593\n        /* \"#utility.yul\":22855:22856   */\n      dup3\n        /* \"#utility.yul\":22837:22857   */\n      tag_327\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":22832:22857   */\n      swap2\n      pop\n        /* \"#utility.yul\":22871:22891   */\n      tag_594\n        /* \"#utility.yul\":22889:22890   */\n      dup4\n        /* \"#utility.yul\":22871:22891   */\n      tag_327\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":22866:22891   */\n      swap3\n      pop\n        /* \"#utility.yul\":22915:22916   */\n      dup3\n        /* \"#utility.yul\":22912:22913   */\n      dup3\n        /* \"#utility.yul\":22908:22917   */\n      sub\n        /* \"#utility.yul\":22900:22917   */\n      swap1\n      pop\n        /* \"#utility.yul\":22939:22940   */\n      dup2\n        /* \"#utility.yul\":22933:22937   */\n      dup2\n        /* \"#utility.yul\":22930:22941   */\n      gt\n        /* \"#utility.yul\":22927:22964   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":22944:22962   */\n      tag_596\n      tag_353\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":22927:22964   */\n    tag_595:\n        /* \"#utility.yul\":22777:22971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22977:23154   */\n    tag_378:\n        /* \"#utility.yul\":23117:23146   */\n      0x496e73756666696369656e74207265776172642062616c616e63650000000000\n        /* \"#utility.yul\":23113:23114   */\n      0x00\n        /* \"#utility.yul\":23105:23111   */\n      dup3\n        /* \"#utility.yul\":23101:23115   */\n      add\n        /* \"#utility.yul\":23094:23147   */\n      mstore\n        /* \"#utility.yul\":22977:23154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23160:23526   */\n    tag_379:\n        /* \"#utility.yul\":23302:23305   */\n      0x00\n        /* \"#utility.yul\":23323:23390   */\n      tag_599\n        /* \"#utility.yul\":23387:23389   */\n      0x1b\n        /* \"#utility.yul\":23382:23385   */\n      dup4\n        /* \"#utility.yul\":23323:23390   */\n      tag_354\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":23316:23390   */\n      swap2\n      pop\n        /* \"#utility.yul\":23399:23492   */\n      tag_600\n        /* \"#utility.yul\":23488:23491   */\n      dup3\n        /* \"#utility.yul\":23399:23492   */\n      tag_378\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":23517:23519   */\n      0x20\n        /* \"#utility.yul\":23512:23515   */\n      dup3\n        /* \"#utility.yul\":23508:23520   */\n      add\n        /* \"#utility.yul\":23501:23520   */\n      swap1\n      pop\n        /* \"#utility.yul\":23160:23526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23532:23951   */\n    tag_302:\n        /* \"#utility.yul\":23698:23702   */\n      0x00\n        /* \"#utility.yul\":23736:23738   */\n      0x20\n        /* \"#utility.yul\":23725:23734   */\n      dup3\n        /* \"#utility.yul\":23721:23739   */\n      add\n        /* \"#utility.yul\":23713:23739   */\n      swap1\n      pop\n        /* \"#utility.yul\":23785:23794   */\n      dup2\n        /* \"#utility.yul\":23779:23783   */\n      dup2\n        /* \"#utility.yul\":23775:23795   */\n      sub\n        /* \"#utility.yul\":23771:23772   */\n      0x00\n        /* \"#utility.yul\":23760:23769   */\n      dup4\n        /* \"#utility.yul\":23756:23773   */\n      add\n        /* \"#utility.yul\":23749:23796   */\n      mstore\n        /* \"#utility.yul\":23813:23944   */\n      tag_602\n        /* \"#utility.yul\":23939:23943   */\n      dup2\n        /* \"#utility.yul\":23813:23944   */\n      tag_379\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":23805:23944   */\n      swap1\n      pop\n        /* \"#utility.yul\":23532:23951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23957:24367   */\n    tag_311:\n        /* \"#utility.yul\":23997:24004   */\n      0x00\n        /* \"#utility.yul\":24020:24040   */\n      tag_604\n        /* \"#utility.yul\":24038:24039   */\n      dup3\n        /* \"#utility.yul\":24020:24040   */\n      tag_327\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":24015:24040   */\n      swap2\n      pop\n        /* \"#utility.yul\":24054:24074   */\n      tag_605\n        /* \"#utility.yul\":24072:24073   */\n      dup4\n        /* \"#utility.yul\":24054:24074   */\n      tag_327\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":24049:24074   */\n      swap3\n      pop\n        /* \"#utility.yul\":24109:24110   */\n      dup3\n        /* \"#utility.yul\":24106:24107   */\n      dup3\n        /* \"#utility.yul\":24102:24111   */\n      mul\n        /* \"#utility.yul\":24131:24161   */\n      tag_606\n        /* \"#utility.yul\":24149:24160   */\n      dup2\n        /* \"#utility.yul\":24131:24161   */\n      tag_327\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":24120:24161   */\n      swap2\n      pop\n        /* \"#utility.yul\":24310:24311   */\n      dup3\n        /* \"#utility.yul\":24301:24308   */\n      dup3\n        /* \"#utility.yul\":24297:24312   */\n      div\n        /* \"#utility.yul\":24294:24295   */\n      dup5\n        /* \"#utility.yul\":24291:24313   */\n      eq\n        /* \"#utility.yul\":24271:24272   */\n      dup4\n        /* \"#utility.yul\":24264:24273   */\n      iszero\n        /* \"#utility.yul\":24244:24327   */\n      or\n        /* \"#utility.yul\":24221:24360   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":24340:24358   */\n      tag_608\n      tag_353\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":24221:24360   */\n    tag_607:\n        /* \"#utility.yul\":24005:24367   */\n      pop\n        /* \"#utility.yul\":23957:24367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24373:24553   */\n    tag_380:\n        /* \"#utility.yul\":24421:24498   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24418:24419   */\n      0x00\n        /* \"#utility.yul\":24411:24499   */\n      mstore\n        /* \"#utility.yul\":24518:24522   */\n      0x12\n        /* \"#utility.yul\":24515:24516   */\n      0x04\n        /* \"#utility.yul\":24508:24523   */\n      mstore\n        /* \"#utility.yul\":24542:24546   */\n      0x24\n        /* \"#utility.yul\":24539:24540   */\n      0x00\n        /* \"#utility.yul\":24532:24547   */\n      revert\n        /* \"#utility.yul\":24559:24744   */\n    tag_314:\n        /* \"#utility.yul\":24599:24600   */\n      0x00\n        /* \"#utility.yul\":24616:24636   */\n      tag_611\n        /* \"#utility.yul\":24634:24635   */\n      dup3\n        /* \"#utility.yul\":24616:24636   */\n      tag_327\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":24611:24636   */\n      swap2\n      pop\n        /* \"#utility.yul\":24650:24670   */\n      tag_612\n        /* \"#utility.yul\":24668:24669   */\n      dup4\n        /* \"#utility.yul\":24650:24670   */\n      tag_327\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":24645:24670   */\n      swap3\n      pop\n        /* \"#utility.yul\":24689:24690   */\n      dup3\n        /* \"#utility.yul\":24679:24714   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":24694:24712   */\n      tag_614\n      tag_380\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":24679:24714   */\n    tag_613:\n        /* \"#utility.yul\":24736:24737   */\n      dup3\n        /* \"#utility.yul\":24733:24734   */\n      dup3\n        /* \"#utility.yul\":24729:24738   */\n      div\n        /* \"#utility.yul\":24724:24738   */\n      swap1\n      pop\n        /* \"#utility.yul\":24559:24744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24750:25082   */\n    tag_319:\n        /* \"#utility.yul\":24871:24875   */\n      0x00\n        /* \"#utility.yul\":24909:24911   */\n      0x40\n        /* \"#utility.yul\":24898:24907   */\n      dup3\n        /* \"#utility.yul\":24894:24912   */\n      add\n        /* \"#utility.yul\":24886:24912   */\n      swap1\n      pop\n        /* \"#utility.yul\":24922:24993   */\n      tag_616\n        /* \"#utility.yul\":24990:24991   */\n      0x00\n        /* \"#utility.yul\":24979:24988   */\n      dup4\n        /* \"#utility.yul\":24975:24992   */\n      add\n        /* \"#utility.yul\":24966:24972   */\n      dup6\n        /* \"#utility.yul\":24922:24993   */\n      tag_343\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":25003:25075   */\n      tag_617\n        /* \"#utility.yul\":25071:25073   */\n      0x20\n        /* \"#utility.yul\":25060:25069   */\n      dup4\n        /* \"#utility.yul\":25056:25074   */\n      add\n        /* \"#utility.yul\":25047:25053   */\n      dup5\n        /* \"#utility.yul\":25003:25075   */\n      tag_347\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":24750:25082   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004a0b4bd7a4c667a33618748745d0ef84ee37ebf247e825679e1e4c97118385064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1008": {
									"entryPoint": null,
									"id": 1008,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 306,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_533": {
									"entryPoint": 656,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 557,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2504:9",
										"nodeType": "YulBlock",
										"src": "0:2504:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "939:413:9",
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:9",
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nativeSrc": "987:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nativeSrc": "987:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nativeSrc": "956:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nativeSrc": "952:32:9",
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nativeSrc": "949:119:9",
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nativeSrc": "1078:128:9",
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nativeSrc": "1093:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nativeSrc": "1164:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nativeSrc": "1132:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:9",
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nativeSrc": "1231:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nativeSrc": "1303:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nativeSrc": "1271:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:9",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:9",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:9",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:9",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											},
											{
												"body": {
													"nativeSrc": "1454:73:9",
													"nodeType": "YulBlock",
													"src": "1454:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:9"
																},
																"nativeSrc": "1464:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1464:19:9"
															},
															"nativeSrc": "1464:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1464:19:9"
														},
														{
															"nativeSrc": "1492:29:9",
															"nodeType": "YulAssignment",
															"src": "1492:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1511:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1511:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1516:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:9"
																},
																"nativeSrc": "1507:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1507:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1492:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1492:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1358:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1426:3:9",
														"nodeType": "YulTypedName",
														"src": "1426:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1431:6:9",
														"nodeType": "YulTypedName",
														"src": "1431:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1442:11:9",
														"nodeType": "YulTypedName",
														"src": "1442:11:9",
														"type": ""
													}
												],
												"src": "1358:169:9"
											},
											{
												"body": {
													"nativeSrc": "1639:65:9",
													"nodeType": "YulBlock",
													"src": "1639:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1661:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1669:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1669:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:9"
																		},
																		"nativeSrc": "1657:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:14:9"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
																		"kind": "string",
																		"nativeSrc": "1673:23:9",
																		"nodeType": "YulLiteral",
																		"src": "1673:23:9",
																		"type": "",
																		"value": "Invalid staking token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1650:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:9"
																},
																"nativeSrc": "1650:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1650:47:9"
															},
															"nativeSrc": "1650:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1650:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
												"nativeSrc": "1533:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1631:6:9",
														"nodeType": "YulTypedName",
														"src": "1631:6:9",
														"type": ""
													}
												],
												"src": "1533:171:9"
											},
											{
												"body": {
													"nativeSrc": "1856:220:9",
													"nodeType": "YulBlock",
													"src": "1856:220:9",
													"statements": [
														{
															"nativeSrc": "1866:74:9",
															"nodeType": "YulAssignment",
															"src": "1866:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1932:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1932:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1937:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1937:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1873:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1873:58:9"
																},
																"nativeSrc": "1873:67:9",
																"nodeType": "YulFunctionCall",
																"src": "1873:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1866:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2038:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																	"nativeSrc": "1949:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "1949:88:9"
																},
																"nativeSrc": "1949:93:9",
																"nodeType": "YulFunctionCall",
																"src": "1949:93:9"
															},
															"nativeSrc": "1949:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "1949:93:9"
														},
														{
															"nativeSrc": "2051:19:9",
															"nodeType": "YulAssignment",
															"src": "2051:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2062:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2062:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2067:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2067:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2058:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:9"
																},
																"nativeSrc": "2058:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2058:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2051:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1844:3:9",
														"nodeType": "YulTypedName",
														"src": "1844:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1852:3:9",
														"nodeType": "YulTypedName",
														"src": "1852:3:9",
														"type": ""
													}
												],
												"src": "1710:366:9"
											},
											{
												"body": {
													"nativeSrc": "2253:248:9",
													"nodeType": "YulBlock",
													"src": "2253:248:9",
													"statements": [
														{
															"nativeSrc": "2263:26:9",
															"nodeType": "YulAssignment",
															"src": "2263:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2275:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2286:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:9"
																},
																"nativeSrc": "2271:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2271:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2263:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2263:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2310:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2310:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2321:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2321:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2306:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2306:3:9"
																		},
																		"nativeSrc": "2306:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2329:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2335:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2335:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2325:3:9"
																		},
																		"nativeSrc": "2325:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2325:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:9"
																},
																"nativeSrc": "2299:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2299:47:9"
															},
															"nativeSrc": "2299:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2299:47:9"
														},
														{
															"nativeSrc": "2355:139:9",
															"nodeType": "YulAssignment",
															"src": "2355:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2489:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2489:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2363:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "2363:124:9"
																},
																"nativeSrc": "2363:131:9",
																"nodeType": "YulFunctionCall",
																"src": "2363:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2355:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2355:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2082:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2233:9:9",
														"nodeType": "YulTypedName",
														"src": "2233:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2248:4:9",
														"nodeType": "YulTypedName",
														"src": "2248:4:9",
														"type": ""
													}
												],
												"src": "2082:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid staking token\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b50604051620029fa380380620029fa8339818101604052810190620000369190620002fc565b600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a5906200039f565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000f65f801b826200013260201b60201c565b50620001297f6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe826200013260201b60201c565b505050620003bf565b5f6200014583836200022d60201b60201c565b620002235760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001bf6200029060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000227565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002c6826200029b565b9050919050565b620002d881620002ba565b8114620002e3575f80fd5b50565b5f81519050620002f681620002cd565b92915050565b5f806040838503121562000315576200031462000297565b5b5f6200032485828601620002e6565b92505060206200033785828601620002e6565b9150509250929050565b5f82825260208201905092915050565b7f496e76616c6964207374616b696e6720746f6b656e00000000000000000000005f82015250565b5f6200038760158362000341565b9150620003948262000351565b602082019050919050565b5f6020820190508181035f830152620003b88162000379565b9050919050565b60805161260d620003ed5f395f818161076e01528181610b7701528181610c230152610dbf015261260d5ff3fe608060405234801561000f575f80fd5b506004361061011e575f3560e01c80635932fdba116100ab57806391d148541161006f57806391d148541461030a578063a217fddf1461033a578063a694fc3a14610358578063d547741f14610374578063e075d82c146103905761011e565b80635932fdba1461026257806370a082311461028057806372f702f3146102b0578063817b1cd2146102ce57806385ecdd93146102ec5761011e565b8063248a9ca3116100f2578063248a9ca3146101d45780632e1a7d4d146102045780632f2ff15d1461022057806336568abe1461023c578063372500ab146102585761011e565b80628cc2621461012257806301ffc9a7146101525780630b35a4b0146101825780631c1121c5146101a0575b5f80fd5b61013c600480360381019061013791906119ef565b6103ac565b6040516101499190611a32565b60405180910390f35b61016c60048036038101906101679190611aa0565b6103f3565b6040516101799190611ae5565b60405180910390f35b61018a61046c565b6040516101979190611bb5565b60405180910390f35b6101ba60048036038101906101b59190611bff565b61057f565b6040516101cb959493929190611c39565b60405180910390f35b6101ee60048036038101906101e99190611cbd565b6105d0565b6040516101fb9190611cf7565b60405180910390f35b61021e60048036038101906102199190611bff565b6105ec565b005b61023a60048036038101906102359190611d10565b6108a3565b005b61025660048036038101906102519190611d10565b6108c5565b005b610260610940565b005b61026a610bb7565b6040516102779190611cf7565b60405180910390f35b61029a600480360381019061029591906119ef565b610bdb565b6040516102a79190611a32565b60405180910390f35b6102b8610c21565b6040516102c59190611da9565b60405180910390f35b6102d6610c45565b6040516102e39190611a32565b60405180910390f35b6102f4610c4e565b6040516103019190611a32565b60405180910390f35b610324600480360381019061031f9190611d10565b610c54565b6040516103319190611ae5565b60405180910390f35b610342610cb7565b60405161034f9190611cf7565b60405180910390f35b610372600480360381019061036d9190611bff565b610cbd565b005b61038e60048036038101906103899190611d10565b610ef6565b005b6103aa60048036038101906103a59190611dc2565b610f18565b005b5f80600190505b60055481116103ed576103d86103c984836111ed565b836113e290919063ffffffff16565b915080806103e590611e53565b9150506103b3565b50919050565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104655750610464826113f7565b5b9050919050565b60605f80600190505b60055481116104bc5760045f8281526020019081526020015f20600101544210156104a95781806104a590611e53565b9250505b80806104b490611e53565b915050610475565b505f8167ffffffffffffffff8111156104d8576104d7611e9a565b5b6040519080825280602002602001820160405280156105065781602001602082028036833780820191505090505b5090505f80600190505b60055481116105755760045f8281526020019081526020015f2060010154421015610562578083838061054290611e53565b94508151811061055557610554611ec7565b5b6020026020010181815250505b808061056d90611e53565b915050610510565b5081935050505090565b6004602052805f5260405f205f91509050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b5f805f8381526020019081526020015f20600101549050919050565b6105f4611460565b5f8111610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90611f4e565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90611fb6565b60405180910390fd5b6106bf336114af565b6106d48160025461158d90919063ffffffff16565b60028190555061072a8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461158d90919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016107c7929190611fd4565b6020604051808303815f875af11580156107e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108079190612025565b905080610849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108409061209a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161088f9190611a32565b60405180910390a2506108a06115a2565b50565b6108ac826105d0565b6108b5816115ab565b6108bf83836115bf565b50505050565b6108cd6116a8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610931576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093b82826116af565b505050565b610948611460565b610951336114af565b5f80600190505b6005548111610af9575f60045f8381526020019081526020015f2090505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490505f81036109d3575050610ae6565b81600201546109ef8284600301546113e290919063ffffffff16565b1115610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790612102565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f2081905550610a988183600301546113e290919063ffffffff16565b8260030181905550610ace826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611798565b610ae181856113e290919063ffffffff16565b935050505b8080610af190611e53565b915050610958565b505f8111610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b339061216a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff80b6d248ca65e589d3f24c7ce36e2df22ba16ba4e7656aad67e114abbe971d2827f0000000000000000000000000000000000000000000000000000000000000000604051610ba4929190612188565b60405180910390a250610bb56115a2565b565b7f6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe81565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b60055481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610cc5611460565b5f8111610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611f4e565b60405180910390fd5b610d10336114af565b610d25816002546113e290919063ffffffff16565b600281905550610d7b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113e290919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e1a939291906121af565b6020604051808303815f875af1158015610e36573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e5a9190612025565b905080610e9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e939061209a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610ee29190611a32565b60405180910390a250610ef36115a2565b50565b610eff826105d0565b610f08816115ab565b610f1283836116af565b50505050565b7f6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe610f42816115ab565b42851015610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c9061222e565b60405180910390fd5b5f8411610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe90612296565b60405180910390fd5b5f8311611009576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611000906122fe565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611043919061231c565b602060405180830381865afa15801561105e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110829190612349565b9050838110156110c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110be906123be565b60405180910390fd5b5f60055f81546110d690611e53565b91905081905590506040518060a00160405280888152602001611102888a6113e290919063ffffffff16565b81526020018681526020015f81526020018573ffffffffffffffffffffffffffffffffffffffff1681525060045f8381526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f85396969f10b93e89b84ce058bbce90a809c86067bb94a5f0243dfe9f9868943816040516111dc9190611a32565b60405180910390a150505050505050565b5f8060045f8481526020019081526020015f2090505f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054148061124f5750805f015442105b1561125d575f9150506113dc565b5f611274825f01544261158d90919063ffffffff16565b90505f611291835f0154846001015461158d90919063ffffffff16565b90505f6112c1826112b3670de0b6b3a76400008661191690919063ffffffff16565b61192b90919063ffffffff16565b90505f6112df8560030154866002015461158d90919063ffffffff16565b90505f6113466002546113388560035f8e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461191690919063ffffffff16565b61192b90919063ffffffff16565b90506113d360065f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a81526020019081526020015f20546113c5670de0b6b3a76400006113b7858761191690919063ffffffff16565b61192b90919063ffffffff16565b61158d90919063ffffffff16565b96505050505050505b92915050565b5f81836113ef91906123dc565b905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6002600154036114a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149c90612459565b60405180910390fd5b6002600181905550565b5f600190505b6005548111611589576115266114cb83836111ed565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20546113e290919063ffffffff16565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2081905550808061158190611e53565b9150506114b5565b5050565b5f818361159a9190612477565b905092915050565b60018081905550565b6115bc816115b76116a8565b611940565b50565b5f6115ca8383610c54565b61169e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061163b6116a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506116a2565b5f90505b92915050565b5f33905090565b5f6116ba8383610c54565b1561178e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061172b6116a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611792565b5f90505b92915050565b808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117d2919061231c565b602060405180830381865afa1580156117ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118119190612349565b1015611852576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611849906124f4565b60405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161188e929190611fd4565b6020604051808303815f875af11580156118aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ce9190612025565b905080611910576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119079061209a565b60405180910390fd5b50505050565b5f81836119239190612512565b905092915050565b5f81836119389190612580565b905092915050565b61194a8282610c54565b61198d5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016119849291906125b0565b60405180910390fd5b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119be82611995565b9050919050565b6119ce816119b4565b81146119d8575f80fd5b50565b5f813590506119e9816119c5565b92915050565b5f60208284031215611a0457611a03611991565b5b5f611a11848285016119db565b91505092915050565b5f819050919050565b611a2c81611a1a565b82525050565b5f602082019050611a455f830184611a23565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a7f81611a4b565b8114611a89575f80fd5b50565b5f81359050611a9a81611a76565b92915050565b5f60208284031215611ab557611ab4611991565b5b5f611ac284828501611a8c565b91505092915050565b5f8115159050919050565b611adf81611acb565b82525050565b5f602082019050611af85f830184611ad6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611b3081611a1a565b82525050565b5f611b418383611b27565b60208301905092915050565b5f602082019050919050565b5f611b6382611afe565b611b6d8185611b08565b9350611b7883611b18565b805f5b83811015611ba8578151611b8f8882611b36565b9750611b9a83611b4d565b925050600181019050611b7b565b5085935050505092915050565b5f6020820190508181035f830152611bcd8184611b59565b905092915050565b611bde81611a1a565b8114611be8575f80fd5b50565b5f81359050611bf981611bd5565b92915050565b5f60208284031215611c1457611c13611991565b5b5f611c2184828501611beb565b91505092915050565b611c33816119b4565b82525050565b5f60a082019050611c4c5f830188611a23565b611c596020830187611a23565b611c666040830186611a23565b611c736060830185611a23565b611c806080830184611c2a565b9695505050505050565b5f819050919050565b611c9c81611c8a565b8114611ca6575f80fd5b50565b5f81359050611cb781611c93565b92915050565b5f60208284031215611cd257611cd1611991565b5b5f611cdf84828501611ca9565b91505092915050565b611cf181611c8a565b82525050565b5f602082019050611d0a5f830184611ce8565b92915050565b5f8060408385031215611d2657611d25611991565b5b5f611d3385828601611ca9565b9250506020611d44858286016119db565b9150509250929050565b5f819050919050565b5f611d71611d6c611d6784611995565b611d4e565b611995565b9050919050565b5f611d8282611d57565b9050919050565b5f611d9382611d78565b9050919050565b611da381611d89565b82525050565b5f602082019050611dbc5f830184611d9a565b92915050565b5f805f8060808587031215611dda57611dd9611991565b5b5f611de787828801611beb565b9450506020611df887828801611beb565b9350506040611e0987828801611beb565b9250506060611e1a878288016119db565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5d82611a1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8f57611e8e611e26565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611f38601283611ef4565b9150611f4382611f04565b602082019050919050565b5f6020820190508181035f830152611f6581611f2c565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611fa0601483611ef4565b9150611fab82611f6c565b602082019050919050565b5f6020820190508181035f830152611fcd81611f94565b9050919050565b5f604082019050611fe75f830185611c2a565b611ff46020830184611a23565b9392505050565b61200481611acb565b811461200e575f80fd5b50565b5f8151905061201f81611ffb565b92915050565b5f6020828403121561203a57612039611991565b5b5f61204784828501612011565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612084600f83611ef4565b915061208f82612050565b602082019050919050565b5f6020820190508181035f8301526120b181612078565b9050919050565b7f4f76657220636c61696d656400000000000000000000000000000000000000005f82015250565b5f6120ec600c83611ef4565b91506120f7826120b8565b602082019050919050565b5f6020820190508181035f830152612119816120e0565b9050919050565b7f4e6f2072657761726473000000000000000000000000000000000000000000005f82015250565b5f612154600a83611ef4565b915061215f82612120565b602082019050919050565b5f6020820190508181035f83015261218181612148565b9050919050565b5f60408201905061219b5f830185611a23565b6121a86020830184611c2a565b9392505050565b5f6060820190506121c25f830186611c2a565b6121cf6020830185611c2a565b6121dc6040830184611a23565b949350505050565b7f53746172742074696d6520696e207061737400000000000000000000000000005f82015250565b5f612218601283611ef4565b9150612223826121e4565b602082019050919050565b5f6020820190508181035f8301526122458161220c565b9050919050565b7f496e76616c6964206475726174696f6e000000000000000000000000000000005f82015250565b5f612280601083611ef4565b915061228b8261224c565b602082019050919050565b5f6020820190508181035f8301526122ad81612274565b9050919050565b7f496e76616c69642072657761726420616d6f756e7400000000000000000000005f82015250565b5f6122e8601583611ef4565b91506122f3826122b4565b602082019050919050565b5f6020820190508181035f830152612315816122dc565b9050919050565b5f60208201905061232f5f830184611c2a565b92915050565b5f8151905061234381611bd5565b92915050565b5f6020828403121561235e5761235d611991565b5b5f61236b84828501612335565b91505092915050565b7f496e73756666696369656e742072657761726420746f6b656e730000000000005f82015250565b5f6123a8601a83611ef4565b91506123b382612374565b602082019050919050565b5f6020820190508181035f8301526123d58161239c565b9050919050565b5f6123e682611a1a565b91506123f183611a1a565b925082820190508082111561240957612408611e26565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612443601f83611ef4565b915061244e8261240f565b602082019050919050565b5f6020820190508181035f83015261247081612437565b9050919050565b5f61248182611a1a565b915061248c83611a1a565b92508282039050818111156124a4576124a3611e26565b5b92915050565b7f496e73756666696369656e74207265776172642062616c616e636500000000005f82015250565b5f6124de601b83611ef4565b91506124e9826124aa565b602082019050919050565b5f6020820190508181035f83015261250b816124d2565b9050919050565b5f61251c82611a1a565b915061252783611a1a565b925082820261253581611a1a565b9150828204841483151761254c5761254b611e26565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61258a82611a1a565b915061259583611a1a565b9250826125a5576125a4612553565b5b828204905092915050565b5f6040820190506125c35f830185611c2a565b6125d06020830184611ce8565b939250505056fea264697066735822122004a0b4bd7a4c667a33618748745d0ef84ee37ebf247e825679e1e4c97118385064736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29FA CODESIZE SUB DUP1 PUSH3 0x29FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2FC JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA5 SWAP1 PUSH3 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xF6 PUSH0 DUP1 SHL DUP3 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x129 PUSH32 0x6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE DUP3 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x3BF JUMP JUMPDEST PUSH0 PUSH3 0x145 DUP4 DUP4 PUSH3 0x22D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x223 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1BF PUSH3 0x290 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x227 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2C6 DUP3 PUSH3 0x29B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D8 DUP2 PUSH3 0x2BA JUMP JUMPDEST DUP2 EQ PUSH3 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F6 DUP2 PUSH3 0x2CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x315 JUMPI PUSH3 0x314 PUSH3 0x297 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x324 DUP6 DUP3 DUP7 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x337 DUP6 DUP3 DUP7 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720746F6B656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x387 PUSH1 0x15 DUP4 PUSH3 0x341 JUMP JUMPDEST SWAP2 POP PUSH3 0x394 DUP3 PUSH3 0x351 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x3B8 DUP2 PUSH3 0x379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x260D PUSH3 0x3ED PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x76E ADD MSTORE DUP2 DUP2 PUSH2 0xB77 ADD MSTORE DUP2 DUP2 PUSH2 0xC23 ADD MSTORE PUSH2 0xDBF ADD MSTORE PUSH2 0x260D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5932FDBA GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xE075D82C EQ PUSH2 0x390 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x5932FDBA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x85ECDD93 EQ PUSH2 0x2EC JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x258 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xB35A4B0 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1C1121C5 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x3ED JUMPI PUSH2 0x3D8 PUSH2 0x3C9 DUP5 DUP4 PUSH2 0x11ED JUMP JUMPDEST DUP4 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x3E5 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B3 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x465 JUMPI POP PUSH2 0x464 DUP3 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x4BC JUMPI PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4A9 JUMPI DUP2 DUP1 PUSH2 0x4A5 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x4B4 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x475 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x1E9A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x506 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x575 JUMPI PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x562 JUMPI DUP1 DUP4 DUP4 DUP1 PUSH2 0x542 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x1EC7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP1 PUSH2 0x56D SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x510 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0x1460 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BF CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH1 0x2 SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x72A DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x8A0 PUSH2 0x15A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AC DUP3 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x8B5 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 PUSH2 0x15BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93B DUP3 DUP3 PUSH2 0x16AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x948 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x951 CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xAF9 JUMPI PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x9D3 JUMPI POP POP PUSH2 0xAE6 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x9EF DUP3 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA98 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xACE DUP3 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0xAE1 DUP2 DUP6 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAF1 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x958 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF80B6D248CA65E589D3F24C7CE36E2DF22BA16BA4E7656AAD67E114ABBE971D2 DUP3 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xBB5 PUSH2 0x15A2 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xCC5 PUSH2 0x1460 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD10 CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH1 0x2 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xD7B DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE36 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xEF3 PUSH2 0x15A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEFF DUP3 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xF12 DUP4 DUP4 PUSH2 0x16AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE PUSH2 0xF42 DUP2 PUSH2 0x15AB JUMP JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 GT PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x105E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP2 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1102 DUP9 DUP11 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x85396969F10B93E89B84CE058BBCE90A809C86067BB94A5F0243DFE9F9868943 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ DUP1 PUSH2 0x124F JUMPI POP DUP1 PUSH0 ADD SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x125D JUMPI PUSH0 SWAP2 POP POP PUSH2 0x13DC JUMP JUMPDEST PUSH0 PUSH2 0x1274 DUP3 PUSH0 ADD SLOAD TIMESTAMP PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1291 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12C1 DUP3 PUSH2 0x12B3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12DF DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1346 PUSH1 0x2 SLOAD PUSH2 0x1338 DUP6 PUSH1 0x3 PUSH0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13D3 PUSH1 0x6 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13C5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x13B7 DUP6 DUP8 PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x13EF SWAP2 SWAP1 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x1589 JUMPI PUSH2 0x1526 PUSH2 0x14CB DUP4 DUP4 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1581 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x15B7 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15CA DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x169E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x163B PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16A2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x16BA DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST ISZERO PUSH2 0x178E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x172B PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1792 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST LT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1849 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188E SWAP3 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1907 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194A DUP3 DUP3 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x198D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP3 SWAP2 SWAP1 PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BE DUP3 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E9 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A11 DUP5 DUP3 DUP6 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2C DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7F DUP2 PUSH2 0x1A4B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9A DUP2 PUSH2 0x1A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB5 JUMPI PUSH2 0x1AB4 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B41 DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1B6D DUP2 DUP6 PUSH2 0x1B08 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B78 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA8 JUMPI DUP2 MLOAD PUSH2 0x1B8F DUP9 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B9A DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B7B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCD DUP2 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDE DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF9 DUP2 PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C14 JUMPI PUSH2 0x1C13 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C21 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP9 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C66 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C73 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9C DUP2 PUSH2 0x1C8A JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB7 DUP2 PUSH2 0x1C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDF DUP5 DUP3 DUP6 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF1 DUP2 PUSH2 0x1C8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0A PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D44 DUP6 DUP3 DUP7 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D71 PUSH2 0x1D6C PUSH2 0x1D67 DUP5 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 DUP3 PUSH2 0x1D57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D93 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1D89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBC PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE7 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DF8 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E09 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1E1A DUP8 DUP3 DUP9 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E5D DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F38 PUSH1 0x12 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F43 DUP3 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F65 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA0 PUSH1 0x14 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAB DUP3 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCD DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1FF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2004 DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP2 EQ PUSH2 0x200E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x201F DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203A JUMPI PUSH2 0x2039 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2047 DUP5 DUP3 DUP6 ADD PUSH2 0x2011 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 PUSH1 0xF DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B1 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F76657220636C61696D65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EC PUSH1 0xC DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2154 PUSH1 0xA DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x215F DUP3 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2181 DUP2 PUSH2 0x2148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x219B PUSH0 DUP4 ADD DUP6 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x21A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x21CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53746172742074696D6520696E20706173740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 PUSH1 0x12 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2245 DUP2 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206475726174696F6E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0x10 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420616D6F756E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E8 PUSH1 0x15 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F3 DUP3 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2315 DUP2 PUSH2 0x22DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x232F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2343 DUP2 PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235E JUMPI PUSH2 0x235D PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236B DUP5 DUP3 DUP6 ADD PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420746F6B656E73000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A8 PUSH1 0x1A DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B3 DUP3 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D5 DUP2 PUSH2 0x239C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23E6 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F1 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2443 PUSH1 0x1F DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP3 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2470 DUP2 PUSH2 0x2437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2481 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x248C DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x1B DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x251C DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2527 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2535 DUP2 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x258A DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2595 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25A5 JUMPI PUSH2 0x25A4 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25C3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV LOG0 0xB4 0xBD PUSH27 0x4C667A33618748745D0EF84EE37EBF247E825679E1E4C971183850 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "304:6831:8:-:0;;;1259:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;;;;1353:1:8;1328:27;;:13;:27;;;1320:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1414:13;1392:36;;;;;;;;;;1449:37;2232:4:0;1460:18:8;;1480:5;1449:10;;;:37;;:::i;:::-;;1497:33;445:27;1524:5;1497:10;;;:33;;:::i;:::-;;1259:279;;304:6831;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:171::-;1673:23;1669:1;1661:6;1657:14;1650:47;1533:171;:::o;1710:366::-;1852:3;1873:67;1937:2;1932:3;1873:67;:::i;:::-;1866:74;;1949:93;2038:3;1949:93;:::i;:::-;2067:2;2062:3;2058:12;2051:19;;1710:366;;;:::o;2082:419::-;2248:4;2286:2;2275:9;2271:18;2263:26;;2335:9;2329:4;2325:20;2321:1;2310:9;2306:17;2299:47;2363:131;2489:4;2363:131;:::i;:::-;2355:139;;2082:419;;;:::o;304:6831:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3255,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REWARD_MANAGER_917": {
									"entryPoint": 2999,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6464,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5547,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_earnedPerSchedule_1347": {
									"entryPoint": 4589,
									"id": 1347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 5567,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_533": {
									"entryPoint": 5800,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_431": {
									"entryPoint": 5538,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_423": {
									"entryPoint": 5216,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5807,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_sendReward_1534": {
									"entryPoint": 6040,
									"id": 1534,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateRewards_1494": {
									"entryPoint": 5295,
									"id": 1494,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewardSchedule_1222": {
									"entryPoint": 3864,
									"id": 1222,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@add_763": {
									"entryPoint": 5090,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1546": {
									"entryPoint": 3035,
									"id": 1546,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewards_1458": {
									"entryPoint": 2368,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentScheduleId_944": {
									"entryPoint": 3150,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_808": {
									"entryPoint": 6443,
									"id": 808,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_1252": {
									"entryPoint": 940,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getActiveSchedules_1634": {
									"entryPoint": 1132,
									"id": 1634,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1488,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2211,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3156,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_793": {
									"entryPoint": 6422,
									"id": 793,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2245,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 3830,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardSchedules_942": {
									"entryPoint": 1407,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1072": {
									"entryPoint": 3261,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_931": {
									"entryPoint": 3105,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_778": {
									"entryPoint": 5517,
									"id": 778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_574": {
									"entryPoint": 5111,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1011,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalStaked_1554": {
									"entryPoint": 3141,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_1142": {
									"entryPoint": 1516,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$521_to_t_address_fromStack": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9648,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$521__to_t_address__fromStack_reversed": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$521_to_t_address": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2": {
									"entryPoint": 9076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25085:9",
										"nodeType": "YulBlock",
										"src": "0:25085:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "748:87:9",
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nativeSrc": "758:29:9",
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nativeSrc": "767:20:9",
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nativeSrc": "796:33:9",
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nativeSrc": "796:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:9",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:9",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:9",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nativeSrc": "907:263:9",
													"nodeType": "YulBlock",
													"src": "907:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:9",
																"nodeType": "YulBlock",
																"src": "953:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:9"
																			},
																			"nativeSrc": "955:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:9"
																		},
																		"nativeSrc": "955:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:9"
																		},
																		"nativeSrc": "924:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:9",
																		"nodeType": "YulLiteral",
																		"src": "949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:9"
																},
																"nativeSrc": "920:32:9",
																"nodeType": "YulFunctionCall",
																"src": "920:32:9"
															},
															"nativeSrc": "917:119:9",
															"nodeType": "YulIf",
															"src": "917:119:9"
														},
														{
															"nativeSrc": "1046:117:9",
															"nodeType": "YulBlock",
															"src": "1046:117:9",
															"statements": [
																{
																	"nativeSrc": "1061:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:9"
																				},
																				"nativeSrc": "1121:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:9"
																		},
																		"nativeSrc": "1100:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:9",
														"nodeType": "YulTypedName",
														"src": "877:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:9",
														"nodeType": "YulTypedName",
														"src": "888:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:9",
														"nodeType": "YulTypedName",
														"src": "900:6:9",
														"type": ""
													}
												],
												"src": "841:329:9"
											},
											{
												"body": {
													"nativeSrc": "1221:32:9",
													"nodeType": "YulBlock",
													"src": "1221:32:9",
													"statements": [
														{
															"nativeSrc": "1231:16:9",
															"nodeType": "YulAssignment",
															"src": "1231:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:9",
																"nodeType": "YulIdentifier",
																"src": "1242:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:9",
														"nodeType": "YulTypedName",
														"src": "1203:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:9",
														"nodeType": "YulTypedName",
														"src": "1213:7:9",
														"type": ""
													}
												],
												"src": "1176:77:9"
											},
											{
												"body": {
													"nativeSrc": "1324:53:9",
													"nodeType": "YulBlock",
													"src": "1324:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:9"
																		},
																		"nativeSrc": "1346:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:9"
																},
																"nativeSrc": "1334:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:9"
															},
															"nativeSrc": "1334:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:9",
														"nodeType": "YulTypedName",
														"src": "1312:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:9",
														"nodeType": "YulTypedName",
														"src": "1319:3:9",
														"type": ""
													}
												],
												"src": "1259:118:9"
											},
											{
												"body": {
													"nativeSrc": "1481:124:9",
													"nodeType": "YulBlock",
													"src": "1481:124:9",
													"statements": [
														{
															"nativeSrc": "1491:26:9",
															"nodeType": "YulAssignment",
															"src": "1491:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:9"
																},
																"nativeSrc": "1499:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:9"
																		},
																		"nativeSrc": "1580:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:9"
																},
																"nativeSrc": "1527:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:9"
															},
															"nativeSrc": "1527:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:9",
														"nodeType": "YulTypedName",
														"src": "1453:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:9",
														"nodeType": "YulTypedName",
														"src": "1465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:9",
														"nodeType": "YulTypedName",
														"src": "1476:4:9",
														"type": ""
													}
												],
												"src": "1383:222:9"
											},
											{
												"body": {
													"nativeSrc": "1655:105:9",
													"nodeType": "YulBlock",
													"src": "1655:105:9",
													"statements": [
														{
															"nativeSrc": "1665:89:9",
															"nodeType": "YulAssignment",
															"src": "1665:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1680:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1687:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1687:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1676:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:9"
																},
																"nativeSrc": "1676:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1676:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1665:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1665:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "1611:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:9",
														"nodeType": "YulTypedName",
														"src": "1637:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1647:7:9",
														"nodeType": "YulTypedName",
														"src": "1647:7:9",
														"type": ""
													}
												],
												"src": "1611:149:9"
											},
											{
												"body": {
													"nativeSrc": "1808:78:9",
													"nodeType": "YulBlock",
													"src": "1808:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1864:16:9",
																"nodeType": "YulBlock",
																"src": "1864:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1876:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1876:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1866:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1866:6:9"
																			},
																			"nativeSrc": "1866:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:12:9"
																		},
																		"nativeSrc": "1866:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1831:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1831:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1855:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1855:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "1838:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "1838:16:9"
																				},
																				"nativeSrc": "1838:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1838:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1828:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1828:2:9"
																		},
																		"nativeSrc": "1828:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1828:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:9"
																},
																"nativeSrc": "1821:42:9",
																"nodeType": "YulFunctionCall",
																"src": "1821:42:9"
															},
															"nativeSrc": "1818:62:9",
															"nodeType": "YulIf",
															"src": "1818:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "1766:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1801:5:9",
														"nodeType": "YulTypedName",
														"src": "1801:5:9",
														"type": ""
													}
												],
												"src": "1766:120:9"
											},
											{
												"body": {
													"nativeSrc": "1943:86:9",
													"nodeType": "YulBlock",
													"src": "1943:86:9",
													"statements": [
														{
															"nativeSrc": "1953:29:9",
															"nodeType": "YulAssignment",
															"src": "1953:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1975:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1962:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1962:12:9"
																},
																"nativeSrc": "1962:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1962:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1953:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2017:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2017:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "1991:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "1991:25:9"
																},
																"nativeSrc": "1991:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1991:32:9"
															},
															"nativeSrc": "1991:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "1991:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "1892:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1921:6:9",
														"nodeType": "YulTypedName",
														"src": "1921:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1929:3:9",
														"nodeType": "YulTypedName",
														"src": "1929:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1937:5:9",
														"nodeType": "YulTypedName",
														"src": "1937:5:9",
														"type": ""
													}
												],
												"src": "1892:137:9"
											},
											{
												"body": {
													"nativeSrc": "2100:262:9",
													"nodeType": "YulBlock",
													"src": "2100:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2146:83:9",
																"nodeType": "YulBlock",
																"src": "2146:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2148:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:9"
																			},
																			"nativeSrc": "2148:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:9"
																		},
																		"nativeSrc": "2148:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2121:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2130:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2130:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2117:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:9"
																		},
																		"nativeSrc": "2117:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2142:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2142:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2113:3:9"
																},
																"nativeSrc": "2113:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2113:32:9"
															},
															"nativeSrc": "2110:119:9",
															"nodeType": "YulIf",
															"src": "2110:119:9"
														},
														{
															"nativeSrc": "2239:116:9",
															"nodeType": "YulBlock",
															"src": "2239:116:9",
															"statements": [
																{
																	"nativeSrc": "2254:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2254:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2268:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2268:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2258:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2258:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2283:62:9",
																	"nodeType": "YulAssignment",
																	"src": "2283:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2317:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2317:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2328:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2328:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2313:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2313:3:9"
																				},
																				"nativeSrc": "2313:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2313:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2337:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2337:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2293:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "2293:19:9"
																		},
																		"nativeSrc": "2293:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2293:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2283:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2283:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2035:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2070:9:9",
														"nodeType": "YulTypedName",
														"src": "2070:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2081:7:9",
														"nodeType": "YulTypedName",
														"src": "2081:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2093:6:9",
														"nodeType": "YulTypedName",
														"src": "2093:6:9",
														"type": ""
													}
												],
												"src": "2035:327:9"
											},
											{
												"body": {
													"nativeSrc": "2410:48:9",
													"nodeType": "YulBlock",
													"src": "2410:48:9",
													"statements": [
														{
															"nativeSrc": "2420:32:9",
															"nodeType": "YulAssignment",
															"src": "2420:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2445:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2445:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2438:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2438:6:9"
																		},
																		"nativeSrc": "2438:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2438:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2431:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:9"
																},
																"nativeSrc": "2431:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2431:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2420:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2368:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2392:5:9",
														"nodeType": "YulTypedName",
														"src": "2392:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2402:7:9",
														"nodeType": "YulTypedName",
														"src": "2402:7:9",
														"type": ""
													}
												],
												"src": "2368:90:9"
											},
											{
												"body": {
													"nativeSrc": "2523:50:9",
													"nodeType": "YulBlock",
													"src": "2523:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2540:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2540:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2560:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2560:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2545:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "2545:14:9"
																		},
																		"nativeSrc": "2545:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2545:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2533:6:9"
																},
																"nativeSrc": "2533:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2533:34:9"
															},
															"nativeSrc": "2533:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2533:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2464:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2511:5:9",
														"nodeType": "YulTypedName",
														"src": "2511:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2518:3:9",
														"nodeType": "YulTypedName",
														"src": "2518:3:9",
														"type": ""
													}
												],
												"src": "2464:109:9"
											},
											{
												"body": {
													"nativeSrc": "2671:118:9",
													"nodeType": "YulBlock",
													"src": "2671:118:9",
													"statements": [
														{
															"nativeSrc": "2681:26:9",
															"nodeType": "YulAssignment",
															"src": "2681:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2693:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2693:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2704:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2689:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:9"
																},
																"nativeSrc": "2689:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2689:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2681:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2681:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:9"
																		},
																		"nativeSrc": "2764:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2717:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "2717:37:9"
																},
																"nativeSrc": "2717:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2717:65:9"
															},
															"nativeSrc": "2717:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2717:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2579:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2643:9:9",
														"nodeType": "YulTypedName",
														"src": "2643:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2655:6:9",
														"nodeType": "YulTypedName",
														"src": "2655:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2666:4:9",
														"nodeType": "YulTypedName",
														"src": "2666:4:9",
														"type": ""
													}
												],
												"src": "2579:210:9"
											},
											{
												"body": {
													"nativeSrc": "2869:40:9",
													"nodeType": "YulBlock",
													"src": "2869:40:9",
													"statements": [
														{
															"nativeSrc": "2880:22:9",
															"nodeType": "YulAssignment",
															"src": "2880:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2896:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2896:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2890:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2890:5:9"
																},
																"nativeSrc": "2890:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2890:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2880:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "2795:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2852:5:9",
														"nodeType": "YulTypedName",
														"src": "2852:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2862:6:9",
														"nodeType": "YulTypedName",
														"src": "2862:6:9",
														"type": ""
													}
												],
												"src": "2795:114:9"
											},
											{
												"body": {
													"nativeSrc": "3026:73:9",
													"nodeType": "YulBlock",
													"src": "3026:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3043:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3043:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3048:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3036:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:9"
																},
																"nativeSrc": "3036:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3036:19:9"
															},
															"nativeSrc": "3036:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "3036:19:9"
														},
														{
															"nativeSrc": "3064:29:9",
															"nodeType": "YulAssignment",
															"src": "3064:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3083:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3083:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3088:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3088:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:9"
																},
																"nativeSrc": "3079:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3079:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3064:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "3064:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2915:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2998:3:9",
														"nodeType": "YulTypedName",
														"src": "2998:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3003:6:9",
														"nodeType": "YulTypedName",
														"src": "3003:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3014:11:9",
														"nodeType": "YulTypedName",
														"src": "3014:11:9",
														"type": ""
													}
												],
												"src": "2915:184:9"
											},
											{
												"body": {
													"nativeSrc": "3177:60:9",
													"nodeType": "YulBlock",
													"src": "3177:60:9",
													"statements": [
														{
															"nativeSrc": "3187:11:9",
															"nodeType": "YulAssignment",
															"src": "3187:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "3195:3:9",
																"nodeType": "YulIdentifier",
																"src": "3195:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3187:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3187:4:9"
																}
															]
														},
														{
															"nativeSrc": "3208:22:9",
															"nodeType": "YulAssignment",
															"src": "3208:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3220:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3225:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3225:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3216:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:9"
																},
																"nativeSrc": "3216:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3216:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3208:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3208:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3105:132:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3164:3:9",
														"nodeType": "YulTypedName",
														"src": "3164:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3172:4:9",
														"nodeType": "YulTypedName",
														"src": "3172:4:9",
														"type": ""
													}
												],
												"src": "3105:132:9"
											},
											{
												"body": {
													"nativeSrc": "3298:53:9",
													"nodeType": "YulBlock",
													"src": "3298:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3315:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3315:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3338:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3338:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3320:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3320:17:9"
																		},
																		"nativeSrc": "3320:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:9"
																},
																"nativeSrc": "3308:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3308:37:9"
															},
															"nativeSrc": "3308:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3308:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3243:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3286:5:9",
														"nodeType": "YulTypedName",
														"src": "3286:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3293:3:9",
														"nodeType": "YulTypedName",
														"src": "3293:3:9",
														"type": ""
													}
												],
												"src": "3243:108:9"
											},
											{
												"body": {
													"nativeSrc": "3437:99:9",
													"nodeType": "YulBlock",
													"src": "3437:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3481:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3489:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3489:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "3447:33:9",
																	"nodeType": "YulIdentifier",
																	"src": "3447:33:9"
																},
																"nativeSrc": "3447:46:9",
																"nodeType": "YulFunctionCall",
																"src": "3447:46:9"
															},
															"nativeSrc": "3447:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "3447:46:9"
														},
														{
															"nativeSrc": "3502:28:9",
															"nodeType": "YulAssignment",
															"src": "3502:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3520:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3520:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3525:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3525:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3516:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:9"
																},
																"nativeSrc": "3516:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3516:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3502:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "3502:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "3357:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3410:6:9",
														"nodeType": "YulTypedName",
														"src": "3410:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3418:3:9",
														"nodeType": "YulTypedName",
														"src": "3418:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3426:10:9",
														"nodeType": "YulTypedName",
														"src": "3426:10:9",
														"type": ""
													}
												],
												"src": "3357:179:9"
											},
											{
												"body": {
													"nativeSrc": "3617:38:9",
													"nodeType": "YulBlock",
													"src": "3617:38:9",
													"statements": [
														{
															"nativeSrc": "3627:22:9",
															"nodeType": "YulAssignment",
															"src": "3627:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3639:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3644:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:9"
																},
																"nativeSrc": "3635:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3635:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3627:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3627:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3542:113:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3604:3:9",
														"nodeType": "YulTypedName",
														"src": "3604:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3612:4:9",
														"nodeType": "YulTypedName",
														"src": "3612:4:9",
														"type": ""
													}
												],
												"src": "3542:113:9"
											},
											{
												"body": {
													"nativeSrc": "3815:608:9",
													"nodeType": "YulBlock",
													"src": "3815:608:9",
													"statements": [
														{
															"nativeSrc": "3825:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3825:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3887:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3887:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "3839:47:9",
																	"nodeType": "YulIdentifier",
																	"src": "3839:47:9"
																},
																"nativeSrc": "3839:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3839:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3829:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3829:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3902:93:9",
															"nodeType": "YulAssignment",
															"src": "3902:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3988:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3988:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3909:73:9",
																	"nodeType": "YulIdentifier",
																	"src": "3909:73:9"
																},
																"nativeSrc": "3909:86:9",
																"nodeType": "YulFunctionCall",
																"src": "3909:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3902:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:9"
																}
															]
														},
														{
															"nativeSrc": "4004:71:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4004:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4069:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4069:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "4019:49:9",
																	"nodeType": "YulIdentifier",
																	"src": "4019:49:9"
																},
																"nativeSrc": "4019:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4019:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4008:7:9",
																	"nodeType": "YulTypedName",
																	"src": "4008:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4084:21:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4084:21:9",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4098:7:9",
																"nodeType": "YulIdentifier",
																"src": "4098:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4088:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4088:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4174:224:9",
																"nodeType": "YulBlock",
																"src": "4174:224:9",
																"statements": [
																	{
																		"nativeSrc": "4188:34:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4188:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4215:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4215:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4209:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4209:5:9"
																			},
																			"nativeSrc": "4209:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4209:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4192:13:9",
																				"nodeType": "YulTypedName",
																				"src": "4192:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4235:70:9",
																		"nodeType": "YulAssignment",
																		"src": "4235:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4286:13:9",
																					"nodeType": "YulIdentifier",
																					"src": "4286:13:9"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4301:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "4242:43:9",
																				"nodeType": "YulIdentifier",
																				"src": "4242:43:9"
																			},
																			"nativeSrc": "4242:63:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4235:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4235:3:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4318:70:9",
																		"nodeType": "YulAssignment",
																		"src": "4318:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4381:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "4381:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "4328:52:9",
																				"nodeType": "YulIdentifier",
																				"src": "4328:52:9"
																			},
																			"nativeSrc": "4328:60:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4318:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4318:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4136:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4136:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4139:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4139:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4133:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4133:2:9"
																},
																"nativeSrc": "4133:13:9",
																"nodeType": "YulFunctionCall",
																"src": "4133:13:9"
															},
															"nativeSrc": "4114:284:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4147:18:9",
																"nodeType": "YulBlock",
																"src": "4147:18:9",
																"statements": [
																	{
																		"nativeSrc": "4149:14:9",
																		"nodeType": "YulAssignment",
																		"src": "4149:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4158:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "4158:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4161:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4161:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4154:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4154:3:9"
																			},
																			"nativeSrc": "4154:9:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4154:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4149:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4149:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4118:14:9",
																"nodeType": "YulBlock",
																"src": "4118:14:9",
																"statements": [
																	{
																		"nativeSrc": "4120:10:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4120:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4129:1:9",
																			"nodeType": "YulLiteral",
																			"src": "4129:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4124:1:9",
																				"nodeType": "YulTypedName",
																				"src": "4124:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4114:284:9"
														},
														{
															"nativeSrc": "4407:10:9",
															"nodeType": "YulAssignment",
															"src": "4407:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "4414:3:9",
																"nodeType": "YulIdentifier",
																"src": "4414:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4407:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3691:732:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3794:5:9",
														"nodeType": "YulTypedName",
														"src": "3794:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3801:3:9",
														"nodeType": "YulTypedName",
														"src": "3801:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3810:3:9",
														"nodeType": "YulTypedName",
														"src": "3810:3:9",
														"type": ""
													}
												],
												"src": "3691:732:9"
											},
											{
												"body": {
													"nativeSrc": "4577:225:9",
													"nodeType": "YulBlock",
													"src": "4577:225:9",
													"statements": [
														{
															"nativeSrc": "4587:26:9",
															"nodeType": "YulAssignment",
															"src": "4587:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4599:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4599:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4595:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:9"
																},
																"nativeSrc": "4595:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4595:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4587:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4587:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4634:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4645:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4645:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4630:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4630:3:9"
																		},
																		"nativeSrc": "4630:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4630:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4653:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4653:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4659:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4659:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4649:3:9"
																		},
																		"nativeSrc": "4649:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4623:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:9"
																},
																"nativeSrc": "4623:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4623:47:9"
															},
															"nativeSrc": "4623:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4623:47:9"
														},
														{
															"nativeSrc": "4679:116:9",
															"nodeType": "YulAssignment",
															"src": "4679:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4781:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4781:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4790:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4790:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4687:93:9",
																	"nodeType": "YulIdentifier",
																	"src": "4687:93:9"
																},
																"nativeSrc": "4687:108:9",
																"nodeType": "YulFunctionCall",
																"src": "4687:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4679:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4679:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4429:373:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4549:9:9",
														"nodeType": "YulTypedName",
														"src": "4549:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4561:6:9",
														"nodeType": "YulTypedName",
														"src": "4561:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4572:4:9",
														"nodeType": "YulTypedName",
														"src": "4572:4:9",
														"type": ""
													}
												],
												"src": "4429:373:9"
											},
											{
												"body": {
													"nativeSrc": "4851:79:9",
													"nodeType": "YulBlock",
													"src": "4851:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4908:16:9",
																"nodeType": "YulBlock",
																"src": "4908:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4917:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4917:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4920:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4920:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4910:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4910:6:9"
																			},
																			"nativeSrc": "4910:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4910:12:9"
																		},
																		"nativeSrc": "4910:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4910:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4874:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4874:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4899:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4899:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4881:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4881:17:9"
																				},
																				"nativeSrc": "4881:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4881:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4871:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4871:2:9"
																		},
																		"nativeSrc": "4871:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4864:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:9"
																},
																"nativeSrc": "4864:43:9",
																"nodeType": "YulFunctionCall",
																"src": "4864:43:9"
															},
															"nativeSrc": "4861:63:9",
															"nodeType": "YulIf",
															"src": "4861:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4808:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4844:5:9",
														"nodeType": "YulTypedName",
														"src": "4844:5:9",
														"type": ""
													}
												],
												"src": "4808:122:9"
											},
											{
												"body": {
													"nativeSrc": "4988:87:9",
													"nodeType": "YulBlock",
													"src": "4988:87:9",
													"statements": [
														{
															"nativeSrc": "4998:29:9",
															"nodeType": "YulAssignment",
															"src": "4998:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5020:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5020:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5007:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5007:12:9"
																},
																"nativeSrc": "5007:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5007:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4998:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4998:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5063:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5063:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5036:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "5036:26:9"
																},
																"nativeSrc": "5036:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5036:33:9"
															},
															"nativeSrc": "5036:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5036:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4936:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4966:6:9",
														"nodeType": "YulTypedName",
														"src": "4966:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4974:3:9",
														"nodeType": "YulTypedName",
														"src": "4974:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4982:5:9",
														"nodeType": "YulTypedName",
														"src": "4982:5:9",
														"type": ""
													}
												],
												"src": "4936:139:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5750:454:9",
													"nodeType": "YulBlock",
													"src": "5750:454:9",
													"statements": [
														{
															"nativeSrc": "5760:27:9",
															"nodeType": "YulAssignment",
															"src": "5760:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5772:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5772:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5783:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5783:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:9"
																},
																"nativeSrc": "5768:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5768:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5760:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5760:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5841:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5841:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5854:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5865:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5865:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5850:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5850:3:9"
																		},
																		"nativeSrc": "5850:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5850:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5797:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5797:43:9"
																},
																"nativeSrc": "5797:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5797:71:9"
															},
															"nativeSrc": "5797:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5797:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5922:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5922:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5935:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5935:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5946:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5946:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5931:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:9"
																		},
																		"nativeSrc": "5931:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5931:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5878:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5878:43:9"
																},
																"nativeSrc": "5878:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5878:72:9"
															},
															"nativeSrc": "5878:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5878:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6004:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6017:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6017:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6028:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6028:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6013:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:9"
																		},
																		"nativeSrc": "6013:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6013:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5960:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5960:43:9"
																},
																"nativeSrc": "5960:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5960:72:9"
															},
															"nativeSrc": "5960:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5960:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6086:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6086:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6099:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6099:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6110:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6110:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6095:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6095:3:9"
																		},
																		"nativeSrc": "6095:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6095:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6042:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6042:43:9"
																},
																"nativeSrc": "6042:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6042:72:9"
															},
															"nativeSrc": "6042:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6042:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6168:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6168:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6181:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6181:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6192:3:9",
																				"nodeType": "YulLiteral",
																				"src": "6192:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6177:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:9"
																		},
																		"nativeSrc": "6177:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6124:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6124:43:9"
																},
																"nativeSrc": "6124:73:9",
																"nodeType": "YulFunctionCall",
																"src": "6124:73:9"
															},
															"nativeSrc": "6124:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "6124:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5540:664:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5690:9:9",
														"nodeType": "YulTypedName",
														"src": "5690:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5702:6:9",
														"nodeType": "YulTypedName",
														"src": "5702:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5710:6:9",
														"nodeType": "YulTypedName",
														"src": "5710:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5718:6:9",
														"nodeType": "YulTypedName",
														"src": "5718:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5726:6:9",
														"nodeType": "YulTypedName",
														"src": "5726:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5734:6:9",
														"nodeType": "YulTypedName",
														"src": "5734:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5745:4:9",
														"nodeType": "YulTypedName",
														"src": "5745:4:9",
														"type": ""
													}
												],
												"src": "5540:664:9"
											},
											{
												"body": {
													"nativeSrc": "6255:32:9",
													"nodeType": "YulBlock",
													"src": "6255:32:9",
													"statements": [
														{
															"nativeSrc": "6265:16:9",
															"nodeType": "YulAssignment",
															"src": "6265:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "6276:5:9",
																"nodeType": "YulIdentifier",
																"src": "6276:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6265:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6265:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "6210:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6237:5:9",
														"nodeType": "YulTypedName",
														"src": "6237:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6247:7:9",
														"nodeType": "YulTypedName",
														"src": "6247:7:9",
														"type": ""
													}
												],
												"src": "6210:77:9"
											},
											{
												"body": {
													"nativeSrc": "6336:79:9",
													"nodeType": "YulBlock",
													"src": "6336:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6393:16:9",
																"nodeType": "YulBlock",
																"src": "6393:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6402:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6402:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6405:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6395:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6395:6:9"
																			},
																			"nativeSrc": "6395:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6395:12:9"
																		},
																		"nativeSrc": "6395:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6395:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6359:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6359:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6384:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "6366:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6366:17:9"
																				},
																				"nativeSrc": "6366:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6366:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6356:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6356:2:9"
																		},
																		"nativeSrc": "6356:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6356:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6349:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:9"
																},
																"nativeSrc": "6349:43:9",
																"nodeType": "YulFunctionCall",
																"src": "6349:43:9"
															},
															"nativeSrc": "6346:63:9",
															"nodeType": "YulIf",
															"src": "6346:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "6293:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6329:5:9",
														"nodeType": "YulTypedName",
														"src": "6329:5:9",
														"type": ""
													}
												],
												"src": "6293:122:9"
											},
											{
												"body": {
													"nativeSrc": "6473:87:9",
													"nodeType": "YulBlock",
													"src": "6473:87:9",
													"statements": [
														{
															"nativeSrc": "6483:29:9",
															"nodeType": "YulAssignment",
															"src": "6483:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6505:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6505:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6492:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6492:12:9"
																},
																"nativeSrc": "6492:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6492:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6483:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6483:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6548:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6548:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "6521:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "6521:26:9"
																},
																"nativeSrc": "6521:33:9",
																"nodeType": "YulFunctionCall",
																"src": "6521:33:9"
															},
															"nativeSrc": "6521:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "6521:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "6421:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6451:6:9",
														"nodeType": "YulTypedName",
														"src": "6451:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6459:3:9",
														"nodeType": "YulTypedName",
														"src": "6459:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6467:5:9",
														"nodeType": "YulTypedName",
														"src": "6467:5:9",
														"type": ""
													}
												],
												"src": "6421:139:9"
											},
											{
												"body": {
													"nativeSrc": "6632:263:9",
													"nodeType": "YulBlock",
													"src": "6632:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6678:83:9",
																"nodeType": "YulBlock",
																"src": "6678:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6680:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6680:77:9"
																			},
																			"nativeSrc": "6680:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6680:79:9"
																		},
																		"nativeSrc": "6680:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6680:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6653:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6653:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6662:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6662:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:9"
																		},
																		"nativeSrc": "6649:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6649:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6674:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6674:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6645:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:9"
																},
																"nativeSrc": "6645:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6645:32:9"
															},
															"nativeSrc": "6642:119:9",
															"nodeType": "YulIf",
															"src": "6642:119:9"
														},
														{
															"nativeSrc": "6771:117:9",
															"nodeType": "YulBlock",
															"src": "6771:117:9",
															"statements": [
																{
																	"nativeSrc": "6786:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6786:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6800:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6800:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6790:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6790:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6815:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6815:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6850:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6850:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6861:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6861:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6846:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6846:3:9"
																				},
																				"nativeSrc": "6846:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6846:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6870:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6870:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6825:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6825:20:9"
																		},
																		"nativeSrc": "6825:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6825:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6815:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6815:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6566:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6602:9:9",
														"nodeType": "YulTypedName",
														"src": "6602:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6613:7:9",
														"nodeType": "YulTypedName",
														"src": "6613:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6625:6:9",
														"nodeType": "YulTypedName",
														"src": "6625:6:9",
														"type": ""
													}
												],
												"src": "6566:329:9"
											},
											{
												"body": {
													"nativeSrc": "6966:53:9",
													"nodeType": "YulBlock",
													"src": "6966:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6983:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7006:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7006:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6988:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6988:17:9"
																		},
																		"nativeSrc": "6988:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6988:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6976:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:9"
																},
																"nativeSrc": "6976:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6976:37:9"
															},
															"nativeSrc": "6976:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6976:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6901:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6954:5:9",
														"nodeType": "YulTypedName",
														"src": "6954:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6961:3:9",
														"nodeType": "YulTypedName",
														"src": "6961:3:9",
														"type": ""
													}
												],
												"src": "6901:118:9"
											},
											{
												"body": {
													"nativeSrc": "7123:124:9",
													"nodeType": "YulBlock",
													"src": "7123:124:9",
													"statements": [
														{
															"nativeSrc": "7133:26:9",
															"nodeType": "YulAssignment",
															"src": "7133:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7145:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7145:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7156:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7156:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7141:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:9"
																},
																"nativeSrc": "7141:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7141:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7133:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7133:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7213:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7213:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7226:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7226:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7237:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7237:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7222:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:9"
																		},
																		"nativeSrc": "7222:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7169:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7169:43:9"
																},
																"nativeSrc": "7169:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7169:71:9"
															},
															"nativeSrc": "7169:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7169:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "7025:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7095:9:9",
														"nodeType": "YulTypedName",
														"src": "7095:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7107:6:9",
														"nodeType": "YulTypedName",
														"src": "7107:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7118:4:9",
														"nodeType": "YulTypedName",
														"src": "7118:4:9",
														"type": ""
													}
												],
												"src": "7025:222:9"
											},
											{
												"body": {
													"nativeSrc": "7336:391:9",
													"nodeType": "YulBlock",
													"src": "7336:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7382:83:9",
																"nodeType": "YulBlock",
																"src": "7382:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7384:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7384:77:9"
																			},
																			"nativeSrc": "7384:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7384:79:9"
																		},
																		"nativeSrc": "7384:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7384:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7357:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7357:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7366:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7366:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7353:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:9"
																		},
																		"nativeSrc": "7353:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7378:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7349:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:9"
																},
																"nativeSrc": "7349:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7349:32:9"
															},
															"nativeSrc": "7346:119:9",
															"nodeType": "YulIf",
															"src": "7346:119:9"
														},
														{
															"nativeSrc": "7475:117:9",
															"nodeType": "YulBlock",
															"src": "7475:117:9",
															"statements": [
																{
																	"nativeSrc": "7490:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7490:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7504:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7504:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7494:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7494:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7519:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7519:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7554:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7554:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7565:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7565:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7550:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7550:3:9"
																				},
																				"nativeSrc": "7550:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7550:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7574:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7574:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7529:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7529:20:9"
																		},
																		"nativeSrc": "7529:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7519:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7519:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7602:118:9",
															"nodeType": "YulBlock",
															"src": "7602:118:9",
															"statements": [
																{
																	"nativeSrc": "7617:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7617:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7631:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7621:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7621:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7647:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7647:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7682:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7682:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7693:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7693:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7678:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7678:3:9"
																				},
																				"nativeSrc": "7678:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7678:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7702:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7702:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7657:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7657:20:9"
																		},
																		"nativeSrc": "7657:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7647:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7647:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "7253:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7298:9:9",
														"nodeType": "YulTypedName",
														"src": "7298:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7309:7:9",
														"nodeType": "YulTypedName",
														"src": "7309:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7321:6:9",
														"nodeType": "YulTypedName",
														"src": "7321:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7329:6:9",
														"nodeType": "YulTypedName",
														"src": "7329:6:9",
														"type": ""
													}
												],
												"src": "7253:474:9"
											},
											{
												"body": {
													"nativeSrc": "7765:28:9",
													"nodeType": "YulBlock",
													"src": "7765:28:9",
													"statements": [
														{
															"nativeSrc": "7775:12:9",
															"nodeType": "YulAssignment",
															"src": "7775:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "7782:5:9",
																"nodeType": "YulIdentifier",
																"src": "7782:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7775:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7775:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7733:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7751:5:9",
														"nodeType": "YulTypedName",
														"src": "7751:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7761:3:9",
														"nodeType": "YulTypedName",
														"src": "7761:3:9",
														"type": ""
													}
												],
												"src": "7733:60:9"
											},
											{
												"body": {
													"nativeSrc": "7859:82:9",
													"nodeType": "YulBlock",
													"src": "7859:82:9",
													"statements": [
														{
															"nativeSrc": "7869:66:9",
															"nodeType": "YulAssignment",
															"src": "7869:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7927:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7927:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7909:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "7909:17:9"
																				},
																				"nativeSrc": "7909:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7909:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7900:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "7900:8:9"
																		},
																		"nativeSrc": "7900:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7900:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7882:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7882:17:9"
																},
																"nativeSrc": "7882:53:9",
																"nodeType": "YulFunctionCall",
																"src": "7882:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7869:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7869:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7799:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7839:5:9",
														"nodeType": "YulTypedName",
														"src": "7839:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7849:9:9",
														"nodeType": "YulTypedName",
														"src": "7849:9:9",
														"type": ""
													}
												],
												"src": "7799:142:9"
											},
											{
												"body": {
													"nativeSrc": "8007:66:9",
													"nodeType": "YulBlock",
													"src": "8007:66:9",
													"statements": [
														{
															"nativeSrc": "8017:50:9",
															"nodeType": "YulAssignment",
															"src": "8017:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8061:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8061:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8030:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "8030:30:9"
																},
																"nativeSrc": "8030:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8030:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8017:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8017:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7947:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7987:5:9",
														"nodeType": "YulTypedName",
														"src": "7987:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7997:9:9",
														"nodeType": "YulTypedName",
														"src": "7997:9:9",
														"type": ""
													}
												],
												"src": "7947:126:9"
											},
											{
												"body": {
													"nativeSrc": "8153:66:9",
													"nodeType": "YulBlock",
													"src": "8153:66:9",
													"statements": [
														{
															"nativeSrc": "8163:50:9",
															"nodeType": "YulAssignment",
															"src": "8163:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8207:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8207:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8176:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "8176:30:9"
																},
																"nativeSrc": "8176:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8176:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8163:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8163:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$521_to_t_address",
												"nativeSrc": "8079:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8133:5:9",
														"nodeType": "YulTypedName",
														"src": "8133:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8143:9:9",
														"nodeType": "YulTypedName",
														"src": "8143:9:9",
														"type": ""
													}
												],
												"src": "8079:140:9"
											},
											{
												"body": {
													"nativeSrc": "8304:80:9",
													"nodeType": "YulBlock",
													"src": "8304:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8321:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8321:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8371:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8371:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$521_to_t_address",
																			"nativeSrc": "8326:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "8326:44:9"
																		},
																		"nativeSrc": "8326:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8326:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:9"
																},
																"nativeSrc": "8314:64:9",
																"nodeType": "YulFunctionCall",
																"src": "8314:64:9"
															},
															"nativeSrc": "8314:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "8314:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$521_to_t_address_fromStack",
												"nativeSrc": "8225:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8292:5:9",
														"nodeType": "YulTypedName",
														"src": "8292:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8299:3:9",
														"nodeType": "YulTypedName",
														"src": "8299:3:9",
														"type": ""
													}
												],
												"src": "8225:159:9"
											},
											{
												"body": {
													"nativeSrc": "8502:138:9",
													"nodeType": "YulBlock",
													"src": "8502:138:9",
													"statements": [
														{
															"nativeSrc": "8512:26:9",
															"nodeType": "YulAssignment",
															"src": "8512:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8524:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8524:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8535:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8535:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8520:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8520:3:9"
																},
																"nativeSrc": "8520:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8520:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8512:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8512:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8606:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8619:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8619:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8630:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8630:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8615:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8615:3:9"
																		},
																		"nativeSrc": "8615:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8615:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$521_to_t_address_fromStack",
																	"nativeSrc": "8548:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "8548:57:9"
																},
																"nativeSrc": "8548:85:9",
																"nodeType": "YulFunctionCall",
																"src": "8548:85:9"
															},
															"nativeSrc": "8548:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "8548:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$521__to_t_address__fromStack_reversed",
												"nativeSrc": "8390:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8474:9:9",
														"nodeType": "YulTypedName",
														"src": "8474:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8486:6:9",
														"nodeType": "YulTypedName",
														"src": "8486:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8497:4:9",
														"nodeType": "YulTypedName",
														"src": "8497:4:9",
														"type": ""
													}
												],
												"src": "8390:250:9"
											},
											{
												"body": {
													"nativeSrc": "8763:648:9",
													"nodeType": "YulBlock",
													"src": "8763:648:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8810:83:9",
																"nodeType": "YulBlock",
																"src": "8810:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8812:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8812:77:9"
																			},
																			"nativeSrc": "8812:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8812:79:9"
																		},
																		"nativeSrc": "8812:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8812:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8784:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8784:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8793:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8780:3:9"
																		},
																		"nativeSrc": "8780:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8780:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8805:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8805:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8776:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8776:3:9"
																},
																"nativeSrc": "8776:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8776:33:9"
															},
															"nativeSrc": "8773:120:9",
															"nodeType": "YulIf",
															"src": "8773:120:9"
														},
														{
															"nativeSrc": "8903:117:9",
															"nodeType": "YulBlock",
															"src": "8903:117:9",
															"statements": [
																{
																	"nativeSrc": "8918:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8918:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8932:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8932:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8922:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8922:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8947:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8947:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8982:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8982:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8993:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8993:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8978:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8978:3:9"
																				},
																				"nativeSrc": "8978:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8978:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9002:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9002:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8957:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8957:20:9"
																		},
																		"nativeSrc": "8957:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8957:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8947:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8947:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9030:118:9",
															"nodeType": "YulBlock",
															"src": "9030:118:9",
															"statements": [
																{
																	"nativeSrc": "9045:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9045:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9059:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9059:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9049:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9049:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9075:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9075:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9110:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9110:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9121:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9121:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9106:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9106:3:9"
																				},
																				"nativeSrc": "9106:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9106:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9130:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9130:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9085:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9085:20:9"
																		},
																		"nativeSrc": "9085:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9085:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9075:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9075:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9158:118:9",
															"nodeType": "YulBlock",
															"src": "9158:118:9",
															"statements": [
																{
																	"nativeSrc": "9173:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9173:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9187:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9187:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9177:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9177:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9203:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9203:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9238:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9249:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9249:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9234:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:9"
																				},
																				"nativeSrc": "9234:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9234:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9258:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9258:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9213:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9213:20:9"
																		},
																		"nativeSrc": "9213:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9203:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9203:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9286:118:9",
															"nodeType": "YulBlock",
															"src": "9286:118:9",
															"statements": [
																{
																	"nativeSrc": "9301:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9301:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9315:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9315:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9331:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9331:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9366:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9366:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9377:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9377:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9362:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9362:3:9"
																				},
																				"nativeSrc": "9362:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9362:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9386:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9386:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9341:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9341:20:9"
																		},
																		"nativeSrc": "9341:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9341:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9331:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9331:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_address",
												"nativeSrc": "8646:765:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8709:9:9",
														"nodeType": "YulTypedName",
														"src": "8709:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8720:7:9",
														"nodeType": "YulTypedName",
														"src": "8720:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8732:6:9",
														"nodeType": "YulTypedName",
														"src": "8732:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8740:6:9",
														"nodeType": "YulTypedName",
														"src": "8740:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8748:6:9",
														"nodeType": "YulTypedName",
														"src": "8748:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8756:6:9",
														"nodeType": "YulTypedName",
														"src": "8756:6:9",
														"type": ""
													}
												],
												"src": "8646:765:9"
											},
											{
												"body": {
													"nativeSrc": "9445:152:9",
													"nodeType": "YulBlock",
													"src": "9445:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9462:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9462:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9465:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9465:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9455:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9455:6:9"
																},
																"nativeSrc": "9455:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9455:88:9"
															},
															"nativeSrc": "9455:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9455:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9559:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9559:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9562:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:9"
																},
																"nativeSrc": "9552:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9552:15:9"
															},
															"nativeSrc": "9552:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9552:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9583:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9583:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9586:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9586:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9576:6:9"
																},
																"nativeSrc": "9576:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9576:15:9"
															},
															"nativeSrc": "9576:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9576:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9417:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9417:180:9"
											},
											{
												"body": {
													"nativeSrc": "9646:190:9",
													"nodeType": "YulBlock",
													"src": "9646:190:9",
													"statements": [
														{
															"nativeSrc": "9656:33:9",
															"nodeType": "YulAssignment",
															"src": "9656:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9683:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9683:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9665:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9665:17:9"
																},
																"nativeSrc": "9665:24:9",
																"nodeType": "YulFunctionCall",
																"src": "9665:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9656:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9656:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9779:22:9",
																"nodeType": "YulBlock",
																"src": "9779:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9781:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9781:16:9"
																			},
																			"nativeSrc": "9781:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9781:18:9"
																		},
																		"nativeSrc": "9781:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9781:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9704:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9704:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9711:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9711:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9701:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9701:2:9"
																},
																"nativeSrc": "9701:77:9",
																"nodeType": "YulFunctionCall",
																"src": "9701:77:9"
															},
															"nativeSrc": "9698:103:9",
															"nodeType": "YulIf",
															"src": "9698:103:9"
														},
														{
															"nativeSrc": "9810:20:9",
															"nodeType": "YulAssignment",
															"src": "9810:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9821:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9821:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9828:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9828:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9817:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9817:3:9"
																},
																"nativeSrc": "9817:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9817:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9810:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9810:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9603:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9632:5:9",
														"nodeType": "YulTypedName",
														"src": "9632:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9642:3:9",
														"nodeType": "YulTypedName",
														"src": "9642:3:9",
														"type": ""
													}
												],
												"src": "9603:233:9"
											},
											{
												"body": {
													"nativeSrc": "9870:152:9",
													"nodeType": "YulBlock",
													"src": "9870:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9887:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9887:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9890:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9890:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9880:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9880:6:9"
																},
																"nativeSrc": "9880:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9880:88:9"
															},
															"nativeSrc": "9880:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9880:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9984:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9984:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9987:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9987:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9977:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9977:6:9"
																},
																"nativeSrc": "9977:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9977:15:9"
															},
															"nativeSrc": "9977:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9977:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10008:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10008:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10011:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10001:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10001:6:9"
																},
																"nativeSrc": "10001:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10001:15:9"
															},
															"nativeSrc": "10001:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10001:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9842:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9842:180:9"
											},
											{
												"body": {
													"nativeSrc": "10056:152:9",
													"nodeType": "YulBlock",
													"src": "10056:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10073:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10076:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10076:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:9"
																},
																"nativeSrc": "10066:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10066:88:9"
															},
															"nativeSrc": "10066:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10066:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10170:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10170:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10173:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10173:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10163:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10163:6:9"
																},
																"nativeSrc": "10163:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10163:15:9"
															},
															"nativeSrc": "10163:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10163:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10197:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10197:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10187:6:9"
																},
																"nativeSrc": "10187:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10187:15:9"
															},
															"nativeSrc": "10187:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10187:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10028:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10028:180:9"
											},
											{
												"body": {
													"nativeSrc": "10310:73:9",
													"nodeType": "YulBlock",
													"src": "10310:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10327:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10327:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10332:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10332:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10320:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:9"
																},
																"nativeSrc": "10320:19:9",
																"nodeType": "YulFunctionCall",
																"src": "10320:19:9"
															},
															"nativeSrc": "10320:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "10320:19:9"
														},
														{
															"nativeSrc": "10348:29:9",
															"nodeType": "YulAssignment",
															"src": "10348:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10367:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10367:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10372:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10372:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10363:3:9"
																},
																"nativeSrc": "10363:14:9",
																"nodeType": "YulFunctionCall",
																"src": "10363:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10348:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "10348:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10214:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10282:3:9",
														"nodeType": "YulTypedName",
														"src": "10282:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10287:6:9",
														"nodeType": "YulTypedName",
														"src": "10287:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10298:11:9",
														"nodeType": "YulTypedName",
														"src": "10298:11:9",
														"type": ""
													}
												],
												"src": "10214:169:9"
											},
											{
												"body": {
													"nativeSrc": "10495:62:9",
													"nodeType": "YulBlock",
													"src": "10495:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10517:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10517:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10525:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10525:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10513:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10513:3:9"
																		},
																		"nativeSrc": "10513:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10513:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "10529:20:9",
																		"nodeType": "YulLiteral",
																		"src": "10529:20:9",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10506:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10506:6:9"
																},
																"nativeSrc": "10506:44:9",
																"nodeType": "YulFunctionCall",
																"src": "10506:44:9"
															},
															"nativeSrc": "10506:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "10506:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "10389:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10487:6:9",
														"nodeType": "YulTypedName",
														"src": "10487:6:9",
														"type": ""
													}
												],
												"src": "10389:168:9"
											},
											{
												"body": {
													"nativeSrc": "10709:220:9",
													"nodeType": "YulBlock",
													"src": "10709:220:9",
													"statements": [
														{
															"nativeSrc": "10719:74:9",
															"nodeType": "YulAssignment",
															"src": "10719:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10785:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10785:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10790:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10790:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10726:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10726:58:9"
																},
																"nativeSrc": "10726:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10726:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10719:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10891:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10891:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "10802:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10802:88:9"
																},
																"nativeSrc": "10802:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10802:93:9"
															},
															"nativeSrc": "10802:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10802:93:9"
														},
														{
															"nativeSrc": "10904:19:9",
															"nodeType": "YulAssignment",
															"src": "10904:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10915:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10915:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10920:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10920:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10911:3:9"
																},
																"nativeSrc": "10911:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10911:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10904:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10904:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10563:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10697:3:9",
														"nodeType": "YulTypedName",
														"src": "10697:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10705:3:9",
														"nodeType": "YulTypedName",
														"src": "10705:3:9",
														"type": ""
													}
												],
												"src": "10563:366:9"
											},
											{
												"body": {
													"nativeSrc": "11106:248:9",
													"nodeType": "YulBlock",
													"src": "11106:248:9",
													"statements": [
														{
															"nativeSrc": "11116:26:9",
															"nodeType": "YulAssignment",
															"src": "11116:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11128:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11128:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11139:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11124:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11124:3:9"
																},
																"nativeSrc": "11124:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11124:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11116:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11116:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11163:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11163:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11174:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11174:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11159:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11159:3:9"
																		},
																		"nativeSrc": "11159:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11159:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11182:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11182:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11188:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11188:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11178:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11178:3:9"
																		},
																		"nativeSrc": "11178:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11178:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11152:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11152:6:9"
																},
																"nativeSrc": "11152:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11152:47:9"
															},
															"nativeSrc": "11152:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11152:47:9"
														},
														{
															"nativeSrc": "11208:139:9",
															"nodeType": "YulAssignment",
															"src": "11208:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11342:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11342:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11216:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11216:124:9"
																},
																"nativeSrc": "11216:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11216:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11208:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11208:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10935:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11086:9:9",
														"nodeType": "YulTypedName",
														"src": "11086:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11101:4:9",
														"nodeType": "YulTypedName",
														"src": "11101:4:9",
														"type": ""
													}
												],
												"src": "10935:419:9"
											},
											{
												"body": {
													"nativeSrc": "11466:64:9",
													"nodeType": "YulBlock",
													"src": "11466:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11488:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11488:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11496:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11496:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11484:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:9"
																		},
																		"nativeSrc": "11484:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11484:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11500:22:9",
																		"nodeType": "YulLiteral",
																		"src": "11500:22:9",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11477:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11477:6:9"
																},
																"nativeSrc": "11477:46:9",
																"nodeType": "YulFunctionCall",
																"src": "11477:46:9"
															},
															"nativeSrc": "11477:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "11477:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "11360:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11458:6:9",
														"nodeType": "YulTypedName",
														"src": "11458:6:9",
														"type": ""
													}
												],
												"src": "11360:170:9"
											},
											{
												"body": {
													"nativeSrc": "11682:220:9",
													"nodeType": "YulBlock",
													"src": "11682:220:9",
													"statements": [
														{
															"nativeSrc": "11692:74:9",
															"nodeType": "YulAssignment",
															"src": "11692:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11758:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11758:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11763:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11699:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11699:58:9"
																},
																"nativeSrc": "11699:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11699:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11692:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11864:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11864:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "11775:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11775:88:9"
																},
																"nativeSrc": "11775:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11775:93:9"
															},
															"nativeSrc": "11775:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11775:93:9"
														},
														{
															"nativeSrc": "11877:19:9",
															"nodeType": "YulAssignment",
															"src": "11877:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11888:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11888:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11884:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11884:3:9"
																},
																"nativeSrc": "11884:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11884:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11877:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11536:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11670:3:9",
														"nodeType": "YulTypedName",
														"src": "11670:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11678:3:9",
														"nodeType": "YulTypedName",
														"src": "11678:3:9",
														"type": ""
													}
												],
												"src": "11536:366:9"
											},
											{
												"body": {
													"nativeSrc": "12079:248:9",
													"nodeType": "YulBlock",
													"src": "12079:248:9",
													"statements": [
														{
															"nativeSrc": "12089:26:9",
															"nodeType": "YulAssignment",
															"src": "12089:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12101:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12112:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12097:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:9"
																},
																"nativeSrc": "12097:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12097:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12089:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12089:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12136:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12136:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12147:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12147:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12132:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12132:3:9"
																		},
																		"nativeSrc": "12132:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12132:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12155:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12155:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12161:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12161:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12151:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:9"
																		},
																		"nativeSrc": "12151:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12151:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12125:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12125:6:9"
																},
																"nativeSrc": "12125:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12125:47:9"
															},
															"nativeSrc": "12125:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12125:47:9"
														},
														{
															"nativeSrc": "12181:139:9",
															"nodeType": "YulAssignment",
															"src": "12181:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12315:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12315:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12189:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12189:124:9"
																},
																"nativeSrc": "12189:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12189:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12181:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12181:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11908:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12059:9:9",
														"nodeType": "YulTypedName",
														"src": "12059:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12074:4:9",
														"nodeType": "YulTypedName",
														"src": "12074:4:9",
														"type": ""
													}
												],
												"src": "11908:419:9"
											},
											{
												"body": {
													"nativeSrc": "12459:206:9",
													"nodeType": "YulBlock",
													"src": "12459:206:9",
													"statements": [
														{
															"nativeSrc": "12469:26:9",
															"nodeType": "YulAssignment",
															"src": "12469:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12481:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12481:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12492:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12492:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12477:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12477:3:9"
																},
																"nativeSrc": "12477:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12477:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12469:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12469:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12549:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12549:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12562:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12562:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12573:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12573:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12558:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12558:3:9"
																		},
																		"nativeSrc": "12558:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12558:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12505:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12505:43:9"
																},
																"nativeSrc": "12505:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12505:71:9"
															},
															"nativeSrc": "12505:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12505:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12630:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12630:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12643:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12643:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12654:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12654:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12639:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12639:3:9"
																		},
																		"nativeSrc": "12639:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12639:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12586:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12586:43:9"
																},
																"nativeSrc": "12586:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12586:72:9"
															},
															"nativeSrc": "12586:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12586:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12333:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12423:9:9",
														"nodeType": "YulTypedName",
														"src": "12423:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12435:6:9",
														"nodeType": "YulTypedName",
														"src": "12435:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12443:6:9",
														"nodeType": "YulTypedName",
														"src": "12443:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12454:4:9",
														"nodeType": "YulTypedName",
														"src": "12454:4:9",
														"type": ""
													}
												],
												"src": "12333:332:9"
											},
											{
												"body": {
													"nativeSrc": "12711:76:9",
													"nodeType": "YulBlock",
													"src": "12711:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12765:16:9",
																"nodeType": "YulBlock",
																"src": "12765:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12774:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12774:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12777:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12777:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12767:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12767:6:9"
																			},
																			"nativeSrc": "12767:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12767:12:9"
																		},
																		"nativeSrc": "12767:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12767:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12734:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12734:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12756:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12756:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12741:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "12741:14:9"
																				},
																				"nativeSrc": "12741:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12741:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12731:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12731:2:9"
																		},
																		"nativeSrc": "12731:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12731:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12724:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12724:6:9"
																},
																"nativeSrc": "12724:40:9",
																"nodeType": "YulFunctionCall",
																"src": "12724:40:9"
															},
															"nativeSrc": "12721:60:9",
															"nodeType": "YulIf",
															"src": "12721:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12671:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12704:5:9",
														"nodeType": "YulTypedName",
														"src": "12704:5:9",
														"type": ""
													}
												],
												"src": "12671:116:9"
											},
											{
												"body": {
													"nativeSrc": "12853:77:9",
													"nodeType": "YulBlock",
													"src": "12853:77:9",
													"statements": [
														{
															"nativeSrc": "12863:22:9",
															"nodeType": "YulAssignment",
															"src": "12863:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12878:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12878:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12872:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12872:5:9"
																},
																"nativeSrc": "12872:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12872:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12863:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12863:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12918:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12918:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12894:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "12894:23:9"
																},
																"nativeSrc": "12894:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12894:30:9"
															},
															"nativeSrc": "12894:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12894:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12793:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12831:6:9",
														"nodeType": "YulTypedName",
														"src": "12831:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12839:3:9",
														"nodeType": "YulTypedName",
														"src": "12839:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12847:5:9",
														"nodeType": "YulTypedName",
														"src": "12847:5:9",
														"type": ""
													}
												],
												"src": "12793:137:9"
											},
											{
												"body": {
													"nativeSrc": "13010:271:9",
													"nodeType": "YulBlock",
													"src": "13010:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13056:83:9",
																"nodeType": "YulBlock",
																"src": "13056:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13058:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "13058:77:9"
																			},
																			"nativeSrc": "13058:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13058:79:9"
																		},
																		"nativeSrc": "13058:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13058:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13031:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13031:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13040:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13040:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13027:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13027:3:9"
																		},
																		"nativeSrc": "13027:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13027:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13052:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13052:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13023:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:9"
																},
																"nativeSrc": "13023:32:9",
																"nodeType": "YulFunctionCall",
																"src": "13023:32:9"
															},
															"nativeSrc": "13020:119:9",
															"nodeType": "YulIf",
															"src": "13020:119:9"
														},
														{
															"nativeSrc": "13149:125:9",
															"nodeType": "YulBlock",
															"src": "13149:125:9",
															"statements": [
																{
																	"nativeSrc": "13164:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13164:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13178:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13178:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13168:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13168:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13193:71:9",
																	"nodeType": "YulAssignment",
																	"src": "13193:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13236:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13236:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13247:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13247:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13232:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13232:3:9"
																				},
																				"nativeSrc": "13232:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13232:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13256:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13256:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13203:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "13203:28:9"
																		},
																		"nativeSrc": "13203:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13203:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13193:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13193:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12936:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12980:9:9",
														"nodeType": "YulTypedName",
														"src": "12980:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12991:7:9",
														"nodeType": "YulTypedName",
														"src": "12991:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13003:6:9",
														"nodeType": "YulTypedName",
														"src": "13003:6:9",
														"type": ""
													}
												],
												"src": "12936:345:9"
											},
											{
												"body": {
													"nativeSrc": "13393:59:9",
													"nodeType": "YulBlock",
													"src": "13393:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13415:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13415:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13423:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13423:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13411:3:9"
																		},
																		"nativeSrc": "13411:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13411:14:9"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13427:17:9",
																		"nodeType": "YulLiteral",
																		"src": "13427:17:9",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13404:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13404:6:9"
																},
																"nativeSrc": "13404:41:9",
																"nodeType": "YulFunctionCall",
																"src": "13404:41:9"
															},
															"nativeSrc": "13404:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "13404:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "13287:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13385:6:9",
														"nodeType": "YulTypedName",
														"src": "13385:6:9",
														"type": ""
													}
												],
												"src": "13287:165:9"
											},
											{
												"body": {
													"nativeSrc": "13604:220:9",
													"nodeType": "YulBlock",
													"src": "13604:220:9",
													"statements": [
														{
															"nativeSrc": "13614:74:9",
															"nodeType": "YulAssignment",
															"src": "13614:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13680:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13680:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13685:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13685:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13621:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13621:58:9"
																},
																"nativeSrc": "13621:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13621:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13614:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13786:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13786:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "13697:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13697:88:9"
																},
																"nativeSrc": "13697:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13697:93:9"
															},
															"nativeSrc": "13697:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13697:93:9"
														},
														{
															"nativeSrc": "13799:19:9",
															"nodeType": "YulAssignment",
															"src": "13799:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13810:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13810:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13815:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13815:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13806:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13806:3:9"
																},
																"nativeSrc": "13806:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13806:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13799:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13799:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13458:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13592:3:9",
														"nodeType": "YulTypedName",
														"src": "13592:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13600:3:9",
														"nodeType": "YulTypedName",
														"src": "13600:3:9",
														"type": ""
													}
												],
												"src": "13458:366:9"
											},
											{
												"body": {
													"nativeSrc": "14001:248:9",
													"nodeType": "YulBlock",
													"src": "14001:248:9",
													"statements": [
														{
															"nativeSrc": "14011:26:9",
															"nodeType": "YulAssignment",
															"src": "14011:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14023:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14023:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14034:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14019:3:9"
																},
																"nativeSrc": "14019:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14019:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14011:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14011:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14058:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14058:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14069:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14069:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14054:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14054:3:9"
																		},
																		"nativeSrc": "14054:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14054:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14077:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14077:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14083:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14083:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14073:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:9"
																		},
																		"nativeSrc": "14073:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14073:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14047:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14047:6:9"
																},
																"nativeSrc": "14047:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14047:47:9"
															},
															"nativeSrc": "14047:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14047:47:9"
														},
														{
															"nativeSrc": "14103:139:9",
															"nodeType": "YulAssignment",
															"src": "14103:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14237:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14237:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14111:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14111:124:9"
																},
																"nativeSrc": "14111:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14111:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14103:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14103:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13830:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13981:9:9",
														"nodeType": "YulTypedName",
														"src": "13981:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13996:4:9",
														"nodeType": "YulTypedName",
														"src": "13996:4:9",
														"type": ""
													}
												],
												"src": "13830:419:9"
											},
											{
												"body": {
													"nativeSrc": "14361:56:9",
													"nodeType": "YulBlock",
													"src": "14361:56:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14383:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14383:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14391:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14391:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14379:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:9"
																		},
																		"nativeSrc": "14379:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14379:14:9"
																	},
																	{
																		"hexValue": "4f76657220636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "14395:14:9",
																		"nodeType": "YulLiteral",
																		"src": "14395:14:9",
																		"type": "",
																		"value": "Over claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14372:6:9"
																},
																"nativeSrc": "14372:38:9",
																"nodeType": "YulFunctionCall",
																"src": "14372:38:9"
															},
															"nativeSrc": "14372:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "14372:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2",
												"nativeSrc": "14255:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14353:6:9",
														"nodeType": "YulTypedName",
														"src": "14353:6:9",
														"type": ""
													}
												],
												"src": "14255:162:9"
											},
											{
												"body": {
													"nativeSrc": "14569:220:9",
													"nodeType": "YulBlock",
													"src": "14569:220:9",
													"statements": [
														{
															"nativeSrc": "14579:74:9",
															"nodeType": "YulAssignment",
															"src": "14579:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14645:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14645:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14650:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14650:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14586:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14586:58:9"
																},
																"nativeSrc": "14586:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14586:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14579:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14751:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14751:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2",
																	"nativeSrc": "14662:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14662:88:9"
																},
																"nativeSrc": "14662:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14662:93:9"
															},
															"nativeSrc": "14662:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14662:93:9"
														},
														{
															"nativeSrc": "14764:19:9",
															"nodeType": "YulAssignment",
															"src": "14764:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14775:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14775:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14780:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14780:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14771:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14771:3:9"
																},
																"nativeSrc": "14771:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14771:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14764:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14423:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14557:3:9",
														"nodeType": "YulTypedName",
														"src": "14557:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14565:3:9",
														"nodeType": "YulTypedName",
														"src": "14565:3:9",
														"type": ""
													}
												],
												"src": "14423:366:9"
											},
											{
												"body": {
													"nativeSrc": "14966:248:9",
													"nodeType": "YulBlock",
													"src": "14966:248:9",
													"statements": [
														{
															"nativeSrc": "14976:26:9",
															"nodeType": "YulAssignment",
															"src": "14976:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14988:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14988:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14999:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14984:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14984:3:9"
																},
																"nativeSrc": "14984:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14984:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14976:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14976:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15023:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15023:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15034:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15034:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15019:3:9"
																		},
																		"nativeSrc": "15019:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15019:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15042:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15042:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15048:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15048:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15038:3:9"
																		},
																		"nativeSrc": "15038:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15038:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15012:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15012:6:9"
																},
																"nativeSrc": "15012:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15012:47:9"
															},
															"nativeSrc": "15012:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15012:47:9"
														},
														{
															"nativeSrc": "15068:139:9",
															"nodeType": "YulAssignment",
															"src": "15068:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15202:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15202:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15076:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15076:124:9"
																},
																"nativeSrc": "15076:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15076:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15068:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15068:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14795:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14946:9:9",
														"nodeType": "YulTypedName",
														"src": "14946:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14961:4:9",
														"nodeType": "YulTypedName",
														"src": "14961:4:9",
														"type": ""
													}
												],
												"src": "14795:419:9"
											},
											{
												"body": {
													"nativeSrc": "15326:54:9",
													"nodeType": "YulBlock",
													"src": "15326:54:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15348:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15348:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15356:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15356:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15344:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15344:3:9"
																		},
																		"nativeSrc": "15344:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15344:14:9"
																	},
																	{
																		"hexValue": "4e6f2072657761726473",
																		"kind": "string",
																		"nativeSrc": "15360:12:9",
																		"nodeType": "YulLiteral",
																		"src": "15360:12:9",
																		"type": "",
																		"value": "No rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15337:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15337:6:9"
																},
																"nativeSrc": "15337:36:9",
																"nodeType": "YulFunctionCall",
																"src": "15337:36:9"
															},
															"nativeSrc": "15337:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "15337:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
												"nativeSrc": "15220:160:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15318:6:9",
														"nodeType": "YulTypedName",
														"src": "15318:6:9",
														"type": ""
													}
												],
												"src": "15220:160:9"
											},
											{
												"body": {
													"nativeSrc": "15532:220:9",
													"nodeType": "YulBlock",
													"src": "15532:220:9",
													"statements": [
														{
															"nativeSrc": "15542:74:9",
															"nodeType": "YulAssignment",
															"src": "15542:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15608:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15608:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15613:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15613:2:9",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15549:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15549:58:9"
																},
																"nativeSrc": "15549:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15549:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15542:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15542:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15714:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15714:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																	"nativeSrc": "15625:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15625:88:9"
																},
																"nativeSrc": "15625:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15625:93:9"
															},
															"nativeSrc": "15625:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15625:93:9"
														},
														{
															"nativeSrc": "15727:19:9",
															"nodeType": "YulAssignment",
															"src": "15727:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15738:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15738:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15743:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15743:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15734:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:9"
																},
																"nativeSrc": "15734:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15734:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15727:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15727:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15386:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15520:3:9",
														"nodeType": "YulTypedName",
														"src": "15520:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15528:3:9",
														"nodeType": "YulTypedName",
														"src": "15528:3:9",
														"type": ""
													}
												],
												"src": "15386:366:9"
											},
											{
												"body": {
													"nativeSrc": "15929:248:9",
													"nodeType": "YulBlock",
													"src": "15929:248:9",
													"statements": [
														{
															"nativeSrc": "15939:26:9",
															"nodeType": "YulAssignment",
															"src": "15939:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15951:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15951:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15962:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15962:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15947:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15947:3:9"
																},
																"nativeSrc": "15947:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15947:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15939:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15939:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15986:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15986:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15997:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15997:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15982:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15982:3:9"
																		},
																		"nativeSrc": "15982:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15982:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16005:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16005:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16011:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16011:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16001:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16001:3:9"
																		},
																		"nativeSrc": "16001:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16001:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15975:6:9"
																},
																"nativeSrc": "15975:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15975:47:9"
															},
															"nativeSrc": "15975:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15975:47:9"
														},
														{
															"nativeSrc": "16031:139:9",
															"nodeType": "YulAssignment",
															"src": "16031:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16165:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16165:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16039:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16039:124:9"
																},
																"nativeSrc": "16039:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16039:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16031:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16031:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15758:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15909:9:9",
														"nodeType": "YulTypedName",
														"src": "15909:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15924:4:9",
														"nodeType": "YulTypedName",
														"src": "15924:4:9",
														"type": ""
													}
												],
												"src": "15758:419:9"
											},
											{
												"body": {
													"nativeSrc": "16309:206:9",
													"nodeType": "YulBlock",
													"src": "16309:206:9",
													"statements": [
														{
															"nativeSrc": "16319:26:9",
															"nodeType": "YulAssignment",
															"src": "16319:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16331:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16331:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16342:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16342:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16327:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16327:3:9"
																},
																"nativeSrc": "16327:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16327:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16319:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16319:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16399:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16399:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16412:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16412:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16423:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16423:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16408:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16408:3:9"
																		},
																		"nativeSrc": "16408:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16408:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16355:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16355:43:9"
																},
																"nativeSrc": "16355:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16355:71:9"
															},
															"nativeSrc": "16355:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16355:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16480:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16480:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16493:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16493:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16504:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16504:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16489:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16489:3:9"
																		},
																		"nativeSrc": "16489:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16489:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16436:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16436:43:9"
																},
																"nativeSrc": "16436:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16436:72:9"
															},
															"nativeSrc": "16436:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16436:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "16183:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16273:9:9",
														"nodeType": "YulTypedName",
														"src": "16273:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16285:6:9",
														"nodeType": "YulTypedName",
														"src": "16285:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16293:6:9",
														"nodeType": "YulTypedName",
														"src": "16293:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16304:4:9",
														"nodeType": "YulTypedName",
														"src": "16304:4:9",
														"type": ""
													}
												],
												"src": "16183:332:9"
											},
											{
												"body": {
													"nativeSrc": "16675:288:9",
													"nodeType": "YulBlock",
													"src": "16675:288:9",
													"statements": [
														{
															"nativeSrc": "16685:26:9",
															"nodeType": "YulAssignment",
															"src": "16685:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16697:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16697:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16708:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16708:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16693:3:9"
																},
																"nativeSrc": "16693:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16693:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16685:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16685:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16765:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16765:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16778:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16778:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16789:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16789:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16774:3:9"
																		},
																		"nativeSrc": "16774:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16774:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16721:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16721:43:9"
																},
																"nativeSrc": "16721:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16721:71:9"
															},
															"nativeSrc": "16721:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16721:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16846:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16846:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16859:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16859:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16870:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16870:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16855:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16855:3:9"
																		},
																		"nativeSrc": "16855:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16855:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16802:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16802:43:9"
																},
																"nativeSrc": "16802:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16802:72:9"
															},
															"nativeSrc": "16802:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16802:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16928:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16928:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16941:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16941:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16952:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16952:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16937:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16937:3:9"
																		},
																		"nativeSrc": "16937:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16937:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16884:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16884:43:9"
																},
																"nativeSrc": "16884:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16884:72:9"
															},
															"nativeSrc": "16884:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16884:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16521:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16631:9:9",
														"nodeType": "YulTypedName",
														"src": "16631:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16643:6:9",
														"nodeType": "YulTypedName",
														"src": "16643:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16651:6:9",
														"nodeType": "YulTypedName",
														"src": "16651:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16659:6:9",
														"nodeType": "YulTypedName",
														"src": "16659:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16670:4:9",
														"nodeType": "YulTypedName",
														"src": "16670:4:9",
														"type": ""
													}
												],
												"src": "16521:442:9"
											},
											{
												"body": {
													"nativeSrc": "17075:62:9",
													"nodeType": "YulBlock",
													"src": "17075:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17097:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17097:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17105:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17105:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17093:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17093:3:9"
																		},
																		"nativeSrc": "17093:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17093:14:9"
																	},
																	{
																		"hexValue": "53746172742074696d6520696e2070617374",
																		"kind": "string",
																		"nativeSrc": "17109:20:9",
																		"nodeType": "YulLiteral",
																		"src": "17109:20:9",
																		"type": "",
																		"value": "Start time in past"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17086:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17086:6:9"
																},
																"nativeSrc": "17086:44:9",
																"nodeType": "YulFunctionCall",
																"src": "17086:44:9"
															},
															"nativeSrc": "17086:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "17086:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65",
												"nativeSrc": "16969:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17067:6:9",
														"nodeType": "YulTypedName",
														"src": "17067:6:9",
														"type": ""
													}
												],
												"src": "16969:168:9"
											},
											{
												"body": {
													"nativeSrc": "17289:220:9",
													"nodeType": "YulBlock",
													"src": "17289:220:9",
													"statements": [
														{
															"nativeSrc": "17299:74:9",
															"nodeType": "YulAssignment",
															"src": "17299:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17365:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17365:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17370:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17370:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17306:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17306:58:9"
																},
																"nativeSrc": "17306:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17306:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17299:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17471:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65",
																	"nativeSrc": "17382:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17382:88:9"
																},
																"nativeSrc": "17382:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17382:93:9"
															},
															"nativeSrc": "17382:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17382:93:9"
														},
														{
															"nativeSrc": "17484:19:9",
															"nodeType": "YulAssignment",
															"src": "17484:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17495:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17495:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17500:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17491:3:9"
																},
																"nativeSrc": "17491:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17491:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17484:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17143:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17277:3:9",
														"nodeType": "YulTypedName",
														"src": "17277:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17285:3:9",
														"nodeType": "YulTypedName",
														"src": "17285:3:9",
														"type": ""
													}
												],
												"src": "17143:366:9"
											},
											{
												"body": {
													"nativeSrc": "17686:248:9",
													"nodeType": "YulBlock",
													"src": "17686:248:9",
													"statements": [
														{
															"nativeSrc": "17696:26:9",
															"nodeType": "YulAssignment",
															"src": "17696:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17708:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17708:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17719:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17719:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17704:3:9"
																},
																"nativeSrc": "17704:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17704:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17696:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17696:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17743:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17754:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17739:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17739:3:9"
																		},
																		"nativeSrc": "17739:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17739:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17762:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17762:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17768:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17758:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17758:3:9"
																		},
																		"nativeSrc": "17758:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17758:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17732:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17732:6:9"
																},
																"nativeSrc": "17732:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17732:47:9"
															},
															"nativeSrc": "17732:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17732:47:9"
														},
														{
															"nativeSrc": "17788:139:9",
															"nodeType": "YulAssignment",
															"src": "17788:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17922:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17922:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17796:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17796:124:9"
																},
																"nativeSrc": "17796:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17796:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17788:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17788:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17515:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17666:9:9",
														"nodeType": "YulTypedName",
														"src": "17666:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17681:4:9",
														"nodeType": "YulTypedName",
														"src": "17681:4:9",
														"type": ""
													}
												],
												"src": "17515:419:9"
											},
											{
												"body": {
													"nativeSrc": "18046:60:9",
													"nodeType": "YulBlock",
													"src": "18046:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18068:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18068:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18076:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18076:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18064:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18064:3:9"
																		},
																		"nativeSrc": "18064:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18064:14:9"
																	},
																	{
																		"hexValue": "496e76616c6964206475726174696f6e",
																		"kind": "string",
																		"nativeSrc": "18080:18:9",
																		"nodeType": "YulLiteral",
																		"src": "18080:18:9",
																		"type": "",
																		"value": "Invalid duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18057:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18057:6:9"
																},
																"nativeSrc": "18057:42:9",
																"nodeType": "YulFunctionCall",
																"src": "18057:42:9"
															},
															"nativeSrc": "18057:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "18057:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
												"nativeSrc": "17940:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18038:6:9",
														"nodeType": "YulTypedName",
														"src": "18038:6:9",
														"type": ""
													}
												],
												"src": "17940:166:9"
											},
											{
												"body": {
													"nativeSrc": "18258:220:9",
													"nodeType": "YulBlock",
													"src": "18258:220:9",
													"statements": [
														{
															"nativeSrc": "18268:74:9",
															"nodeType": "YulAssignment",
															"src": "18268:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18334:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18334:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18339:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18339:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18275:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18275:58:9"
																},
																"nativeSrc": "18275:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18275:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18268:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18440:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																	"nativeSrc": "18351:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18351:88:9"
																},
																"nativeSrc": "18351:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18351:93:9"
															},
															"nativeSrc": "18351:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18351:93:9"
														},
														{
															"nativeSrc": "18453:19:9",
															"nodeType": "YulAssignment",
															"src": "18453:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18464:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18464:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18469:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18469:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18460:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18460:3:9"
																},
																"nativeSrc": "18460:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18460:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18453:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18453:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18112:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18246:3:9",
														"nodeType": "YulTypedName",
														"src": "18246:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18254:3:9",
														"nodeType": "YulTypedName",
														"src": "18254:3:9",
														"type": ""
													}
												],
												"src": "18112:366:9"
											},
											{
												"body": {
													"nativeSrc": "18655:248:9",
													"nodeType": "YulBlock",
													"src": "18655:248:9",
													"statements": [
														{
															"nativeSrc": "18665:26:9",
															"nodeType": "YulAssignment",
															"src": "18665:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18677:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18677:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18688:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18688:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18673:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18673:3:9"
																},
																"nativeSrc": "18673:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18673:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18665:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18665:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18712:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18712:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18723:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18723:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18708:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18708:3:9"
																		},
																		"nativeSrc": "18708:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18708:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18731:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18731:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18737:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18737:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18727:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18727:3:9"
																		},
																		"nativeSrc": "18727:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18727:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18701:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18701:6:9"
																},
																"nativeSrc": "18701:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18701:47:9"
															},
															"nativeSrc": "18701:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18701:47:9"
														},
														{
															"nativeSrc": "18757:139:9",
															"nodeType": "YulAssignment",
															"src": "18757:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18891:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18891:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18765:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18765:124:9"
																},
																"nativeSrc": "18765:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18765:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18757:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18757:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18484:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18635:9:9",
														"nodeType": "YulTypedName",
														"src": "18635:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18650:4:9",
														"nodeType": "YulTypedName",
														"src": "18650:4:9",
														"type": ""
													}
												],
												"src": "18484:419:9"
											},
											{
												"body": {
													"nativeSrc": "19015:65:9",
													"nodeType": "YulBlock",
													"src": "19015:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19037:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19037:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19045:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19045:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19033:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19033:3:9"
																		},
																		"nativeSrc": "19033:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19033:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "19049:23:9",
																		"nodeType": "YulLiteral",
																		"src": "19049:23:9",
																		"type": "",
																		"value": "Invalid reward amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19026:6:9"
																},
																"nativeSrc": "19026:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19026:47:9"
															},
															"nativeSrc": "19026:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19026:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
												"nativeSrc": "18909:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19007:6:9",
														"nodeType": "YulTypedName",
														"src": "19007:6:9",
														"type": ""
													}
												],
												"src": "18909:171:9"
											},
											{
												"body": {
													"nativeSrc": "19232:220:9",
													"nodeType": "YulBlock",
													"src": "19232:220:9",
													"statements": [
														{
															"nativeSrc": "19242:74:9",
															"nodeType": "YulAssignment",
															"src": "19242:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19308:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19308:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19313:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19313:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19249:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19249:58:9"
																},
																"nativeSrc": "19249:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19249:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19242:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19242:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19414:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19414:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
																	"nativeSrc": "19325:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19325:88:9"
																},
																"nativeSrc": "19325:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19325:93:9"
															},
															"nativeSrc": "19325:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19325:93:9"
														},
														{
															"nativeSrc": "19427:19:9",
															"nodeType": "YulAssignment",
															"src": "19427:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19438:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19438:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19443:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19443:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19434:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19434:3:9"
																},
																"nativeSrc": "19434:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19434:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19427:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19427:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19086:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19220:3:9",
														"nodeType": "YulTypedName",
														"src": "19220:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19228:3:9",
														"nodeType": "YulTypedName",
														"src": "19228:3:9",
														"type": ""
													}
												],
												"src": "19086:366:9"
											},
											{
												"body": {
													"nativeSrc": "19629:248:9",
													"nodeType": "YulBlock",
													"src": "19629:248:9",
													"statements": [
														{
															"nativeSrc": "19639:26:9",
															"nodeType": "YulAssignment",
															"src": "19639:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19651:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19651:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19662:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19662:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19647:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19647:3:9"
																},
																"nativeSrc": "19647:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19647:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19639:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19639:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19686:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19686:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19697:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19697:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19682:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19682:3:9"
																		},
																		"nativeSrc": "19682:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19682:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19705:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19705:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19701:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19701:3:9"
																		},
																		"nativeSrc": "19701:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19701:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19675:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19675:6:9"
																},
																"nativeSrc": "19675:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19675:47:9"
															},
															"nativeSrc": "19675:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19675:47:9"
														},
														{
															"nativeSrc": "19731:139:9",
															"nodeType": "YulAssignment",
															"src": "19731:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19865:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19865:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19739:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19739:124:9"
																},
																"nativeSrc": "19739:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19739:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19731:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19731:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19458:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19609:9:9",
														"nodeType": "YulTypedName",
														"src": "19609:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19624:4:9",
														"nodeType": "YulTypedName",
														"src": "19624:4:9",
														"type": ""
													}
												],
												"src": "19458:419:9"
											},
											{
												"body": {
													"nativeSrc": "19981:124:9",
													"nodeType": "YulBlock",
													"src": "19981:124:9",
													"statements": [
														{
															"nativeSrc": "19991:26:9",
															"nodeType": "YulAssignment",
															"src": "19991:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20003:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20003:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20014:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20014:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19999:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19999:3:9"
																},
																"nativeSrc": "19999:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19999:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19991:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19991:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20071:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20071:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20084:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20084:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20095:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20095:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20080:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20080:3:9"
																		},
																		"nativeSrc": "20080:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20080:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20027:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20027:43:9"
																},
																"nativeSrc": "20027:71:9",
																"nodeType": "YulFunctionCall",
																"src": "20027:71:9"
															},
															"nativeSrc": "20027:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "20027:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19883:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19953:9:9",
														"nodeType": "YulTypedName",
														"src": "19953:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19965:6:9",
														"nodeType": "YulTypedName",
														"src": "19965:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19976:4:9",
														"nodeType": "YulTypedName",
														"src": "19976:4:9",
														"type": ""
													}
												],
												"src": "19883:222:9"
											},
											{
												"body": {
													"nativeSrc": "20174:80:9",
													"nodeType": "YulBlock",
													"src": "20174:80:9",
													"statements": [
														{
															"nativeSrc": "20184:22:9",
															"nodeType": "YulAssignment",
															"src": "20184:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20199:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20199:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20193:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "20193:5:9"
																},
																"nativeSrc": "20193:13:9",
																"nodeType": "YulFunctionCall",
																"src": "20193:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20184:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "20184:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20242:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "20242:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "20215:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "20215:26:9"
																},
																"nativeSrc": "20215:33:9",
																"nodeType": "YulFunctionCall",
																"src": "20215:33:9"
															},
															"nativeSrc": "20215:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "20215:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "20111:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20152:6:9",
														"nodeType": "YulTypedName",
														"src": "20152:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20160:3:9",
														"nodeType": "YulTypedName",
														"src": "20160:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20168:5:9",
														"nodeType": "YulTypedName",
														"src": "20168:5:9",
														"type": ""
													}
												],
												"src": "20111:143:9"
											},
											{
												"body": {
													"nativeSrc": "20337:274:9",
													"nodeType": "YulBlock",
													"src": "20337:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "20383:83:9",
																"nodeType": "YulBlock",
																"src": "20383:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20385:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "20385:77:9"
																			},
																			"nativeSrc": "20385:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "20385:79:9"
																		},
																		"nativeSrc": "20385:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "20385:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20358:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "20358:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20367:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20367:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20354:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20354:3:9"
																		},
																		"nativeSrc": "20354:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20354:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20379:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20379:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20350:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20350:3:9"
																},
																"nativeSrc": "20350:32:9",
																"nodeType": "YulFunctionCall",
																"src": "20350:32:9"
															},
															"nativeSrc": "20347:119:9",
															"nodeType": "YulIf",
															"src": "20347:119:9"
														},
														{
															"nativeSrc": "20476:128:9",
															"nodeType": "YulBlock",
															"src": "20476:128:9",
															"statements": [
																{
																	"nativeSrc": "20491:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20491:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20505:1:9",
																		"nodeType": "YulLiteral",
																		"src": "20505:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20495:6:9",
																			"nodeType": "YulTypedName",
																			"src": "20495:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20520:74:9",
																	"nodeType": "YulAssignment",
																	"src": "20520:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20566:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "20566:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20577:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "20577:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20562:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "20562:3:9"
																				},
																				"nativeSrc": "20562:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "20562:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20586:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "20586:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20530:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "20530:31:9"
																		},
																		"nativeSrc": "20530:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20530:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20520:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "20520:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "20260:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20307:9:9",
														"nodeType": "YulTypedName",
														"src": "20307:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20318:7:9",
														"nodeType": "YulTypedName",
														"src": "20318:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20330:6:9",
														"nodeType": "YulTypedName",
														"src": "20330:6:9",
														"type": ""
													}
												],
												"src": "20260:351:9"
											},
											{
												"body": {
													"nativeSrc": "20723:70:9",
													"nodeType": "YulBlock",
													"src": "20723:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20745:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20745:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20753:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20753:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20741:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20741:3:9"
																		},
																		"nativeSrc": "20741:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20741:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "20757:28:9",
																		"nodeType": "YulLiteral",
																		"src": "20757:28:9",
																		"type": "",
																		"value": "Insufficient reward tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20734:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20734:6:9"
																},
																"nativeSrc": "20734:52:9",
																"nodeType": "YulFunctionCall",
																"src": "20734:52:9"
															},
															"nativeSrc": "20734:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "20734:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
												"nativeSrc": "20617:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20715:6:9",
														"nodeType": "YulTypedName",
														"src": "20715:6:9",
														"type": ""
													}
												],
												"src": "20617:176:9"
											},
											{
												"body": {
													"nativeSrc": "20945:220:9",
													"nodeType": "YulBlock",
													"src": "20945:220:9",
													"statements": [
														{
															"nativeSrc": "20955:74:9",
															"nodeType": "YulAssignment",
															"src": "20955:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21021:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21021:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21026:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21026:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20962:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20962:58:9"
																},
																"nativeSrc": "20962:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20962:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20955:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20955:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21127:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21127:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
																	"nativeSrc": "21038:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21038:88:9"
																},
																"nativeSrc": "21038:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21038:93:9"
															},
															"nativeSrc": "21038:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21038:93:9"
														},
														{
															"nativeSrc": "21140:19:9",
															"nodeType": "YulAssignment",
															"src": "21140:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21151:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21151:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21156:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21156:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21147:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21147:3:9"
																},
																"nativeSrc": "21147:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21147:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21140:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20799:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20933:3:9",
														"nodeType": "YulTypedName",
														"src": "20933:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20941:3:9",
														"nodeType": "YulTypedName",
														"src": "20941:3:9",
														"type": ""
													}
												],
												"src": "20799:366:9"
											},
											{
												"body": {
													"nativeSrc": "21342:248:9",
													"nodeType": "YulBlock",
													"src": "21342:248:9",
													"statements": [
														{
															"nativeSrc": "21352:26:9",
															"nodeType": "YulAssignment",
															"src": "21352:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21364:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21364:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21375:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21375:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21360:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21360:3:9"
																},
																"nativeSrc": "21360:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21360:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21352:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21352:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21399:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21399:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21410:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21410:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21395:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21395:3:9"
																		},
																		"nativeSrc": "21395:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21395:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21418:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21418:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21424:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21424:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21414:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21414:3:9"
																		},
																		"nativeSrc": "21414:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21414:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21388:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21388:6:9"
																},
																"nativeSrc": "21388:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21388:47:9"
															},
															"nativeSrc": "21388:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21388:47:9"
														},
														{
															"nativeSrc": "21444:139:9",
															"nodeType": "YulAssignment",
															"src": "21444:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21578:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21578:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21452:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21452:124:9"
																},
																"nativeSrc": "21452:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21452:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21444:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21444:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21171:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21322:9:9",
														"nodeType": "YulTypedName",
														"src": "21322:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21337:4:9",
														"nodeType": "YulTypedName",
														"src": "21337:4:9",
														"type": ""
													}
												],
												"src": "21171:419:9"
											},
											{
												"body": {
													"nativeSrc": "21640:147:9",
													"nodeType": "YulBlock",
													"src": "21640:147:9",
													"statements": [
														{
															"nativeSrc": "21650:25:9",
															"nodeType": "YulAssignment",
															"src": "21650:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21673:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21673:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21655:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21655:17:9"
																},
																"nativeSrc": "21655:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21655:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21650:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21650:1:9"
																}
															]
														},
														{
															"nativeSrc": "21684:25:9",
															"nodeType": "YulAssignment",
															"src": "21684:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21707:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21707:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21689:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21689:17:9"
																},
																"nativeSrc": "21689:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21689:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21684:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21684:1:9"
																}
															]
														},
														{
															"nativeSrc": "21718:16:9",
															"nodeType": "YulAssignment",
															"src": "21718:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21729:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21729:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21732:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21732:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21725:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21725:3:9"
																},
																"nativeSrc": "21725:9:9",
																"nodeType": "YulFunctionCall",
																"src": "21725:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21718:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21758:22:9",
																"nodeType": "YulBlock",
																"src": "21758:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21760:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "21760:16:9"
																			},
																			"nativeSrc": "21760:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "21760:18:9"
																		},
																		"nativeSrc": "21760:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "21760:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21750:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21750:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21753:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21753:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21747:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "21747:2:9"
																},
																"nativeSrc": "21747:10:9",
																"nodeType": "YulFunctionCall",
																"src": "21747:10:9"
															},
															"nativeSrc": "21744:36:9",
															"nodeType": "YulIf",
															"src": "21744:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21596:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21627:1:9",
														"nodeType": "YulTypedName",
														"src": "21627:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21630:1:9",
														"nodeType": "YulTypedName",
														"src": "21630:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21636:3:9",
														"nodeType": "YulTypedName",
														"src": "21636:3:9",
														"type": ""
													}
												],
												"src": "21596:191:9"
											},
											{
												"body": {
													"nativeSrc": "21899:75:9",
													"nodeType": "YulBlock",
													"src": "21899:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21921:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21921:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21929:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21929:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21917:3:9"
																		},
																		"nativeSrc": "21917:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21917:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "21933:33:9",
																		"nodeType": "YulLiteral",
																		"src": "21933:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21910:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21910:6:9"
																},
																"nativeSrc": "21910:57:9",
																"nodeType": "YulFunctionCall",
																"src": "21910:57:9"
															},
															"nativeSrc": "21910:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "21910:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "21793:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21891:6:9",
														"nodeType": "YulTypedName",
														"src": "21891:6:9",
														"type": ""
													}
												],
												"src": "21793:181:9"
											},
											{
												"body": {
													"nativeSrc": "22126:220:9",
													"nodeType": "YulBlock",
													"src": "22126:220:9",
													"statements": [
														{
															"nativeSrc": "22136:74:9",
															"nodeType": "YulAssignment",
															"src": "22136:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22202:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22202:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22207:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22207:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22143:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22143:58:9"
																},
																"nativeSrc": "22143:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22143:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22136:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22136:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22308:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22308:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "22219:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22219:88:9"
																},
																"nativeSrc": "22219:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22219:93:9"
															},
															"nativeSrc": "22219:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22219:93:9"
														},
														{
															"nativeSrc": "22321:19:9",
															"nodeType": "YulAssignment",
															"src": "22321:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22332:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22332:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22337:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22337:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22328:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22328:3:9"
																},
																"nativeSrc": "22328:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22328:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22321:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21980:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22114:3:9",
														"nodeType": "YulTypedName",
														"src": "22114:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22122:3:9",
														"nodeType": "YulTypedName",
														"src": "22122:3:9",
														"type": ""
													}
												],
												"src": "21980:366:9"
											},
											{
												"body": {
													"nativeSrc": "22523:248:9",
													"nodeType": "YulBlock",
													"src": "22523:248:9",
													"statements": [
														{
															"nativeSrc": "22533:26:9",
															"nodeType": "YulAssignment",
															"src": "22533:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22545:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22545:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22556:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22556:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22541:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22541:3:9"
																},
																"nativeSrc": "22541:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22541:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22533:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22533:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22580:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22580:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22591:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22591:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22576:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22576:3:9"
																		},
																		"nativeSrc": "22576:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22576:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22599:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22599:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22605:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22605:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22595:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22595:3:9"
																		},
																		"nativeSrc": "22595:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22595:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22569:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22569:6:9"
																},
																"nativeSrc": "22569:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22569:47:9"
															},
															"nativeSrc": "22569:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22569:47:9"
														},
														{
															"nativeSrc": "22625:139:9",
															"nodeType": "YulAssignment",
															"src": "22625:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22759:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22759:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22633:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22633:124:9"
																},
																"nativeSrc": "22633:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22633:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22625:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22625:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22352:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22503:9:9",
														"nodeType": "YulTypedName",
														"src": "22503:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22518:4:9",
														"nodeType": "YulTypedName",
														"src": "22518:4:9",
														"type": ""
													}
												],
												"src": "22352:419:9"
											},
											{
												"body": {
													"nativeSrc": "22822:149:9",
													"nodeType": "YulBlock",
													"src": "22822:149:9",
													"statements": [
														{
															"nativeSrc": "22832:25:9",
															"nodeType": "YulAssignment",
															"src": "22832:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22855:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22855:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22837:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "22837:17:9"
																},
																"nativeSrc": "22837:20:9",
																"nodeType": "YulFunctionCall",
																"src": "22837:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22832:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "22832:1:9"
																}
															]
														},
														{
															"nativeSrc": "22866:25:9",
															"nodeType": "YulAssignment",
															"src": "22866:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22889:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22889:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22871:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "22871:17:9"
																},
																"nativeSrc": "22871:20:9",
																"nodeType": "YulFunctionCall",
																"src": "22871:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22866:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "22866:1:9"
																}
															]
														},
														{
															"nativeSrc": "22900:17:9",
															"nodeType": "YulAssignment",
															"src": "22900:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22912:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22912:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22915:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22915:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22908:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22908:3:9"
																},
																"nativeSrc": "22908:9:9",
																"nodeType": "YulFunctionCall",
																"src": "22908:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22900:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22900:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22942:22:9",
																"nodeType": "YulBlock",
																"src": "22942:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22944:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "22944:16:9"
																			},
																			"nativeSrc": "22944:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "22944:18:9"
																		},
																		"nativeSrc": "22944:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "22944:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "22933:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22933:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "22939:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22939:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22930:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "22930:2:9"
																},
																"nativeSrc": "22930:11:9",
																"nodeType": "YulFunctionCall",
																"src": "22930:11:9"
															},
															"nativeSrc": "22927:37:9",
															"nodeType": "YulIf",
															"src": "22927:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "22777:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22808:1:9",
														"nodeType": "YulTypedName",
														"src": "22808:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22811:1:9",
														"nodeType": "YulTypedName",
														"src": "22811:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "22817:4:9",
														"nodeType": "YulTypedName",
														"src": "22817:4:9",
														"type": ""
													}
												],
												"src": "22777:194:9"
											},
											{
												"body": {
													"nativeSrc": "23083:71:9",
													"nodeType": "YulBlock",
													"src": "23083:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23105:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23105:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23113:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23113:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23101:3:9"
																		},
																		"nativeSrc": "23101:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23101:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "23117:29:9",
																		"nodeType": "YulLiteral",
																		"src": "23117:29:9",
																		"type": "",
																		"value": "Insufficient reward balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23094:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23094:6:9"
																},
																"nativeSrc": "23094:53:9",
																"nodeType": "YulFunctionCall",
																"src": "23094:53:9"
															},
															"nativeSrc": "23094:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "23094:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
												"nativeSrc": "22977:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23075:6:9",
														"nodeType": "YulTypedName",
														"src": "23075:6:9",
														"type": ""
													}
												],
												"src": "22977:177:9"
											},
											{
												"body": {
													"nativeSrc": "23306:220:9",
													"nodeType": "YulBlock",
													"src": "23306:220:9",
													"statements": [
														{
															"nativeSrc": "23316:74:9",
															"nodeType": "YulAssignment",
															"src": "23316:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23382:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23382:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23387:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23387:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23323:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23323:58:9"
																},
																"nativeSrc": "23323:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23323:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23316:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23316:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23488:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23488:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																	"nativeSrc": "23399:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "23399:88:9"
																},
																"nativeSrc": "23399:93:9",
																"nodeType": "YulFunctionCall",
																"src": "23399:93:9"
															},
															"nativeSrc": "23399:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "23399:93:9"
														},
														{
															"nativeSrc": "23501:19:9",
															"nodeType": "YulAssignment",
															"src": "23501:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23512:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23512:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23517:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23517:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23508:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23508:3:9"
																},
																"nativeSrc": "23508:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23508:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23501:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23501:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23160:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23294:3:9",
														"nodeType": "YulTypedName",
														"src": "23294:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23302:3:9",
														"nodeType": "YulTypedName",
														"src": "23302:3:9",
														"type": ""
													}
												],
												"src": "23160:366:9"
											},
											{
												"body": {
													"nativeSrc": "23703:248:9",
													"nodeType": "YulBlock",
													"src": "23703:248:9",
													"statements": [
														{
															"nativeSrc": "23713:26:9",
															"nodeType": "YulAssignment",
															"src": "23713:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23725:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23725:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23736:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23736:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23721:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23721:3:9"
																},
																"nativeSrc": "23721:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23721:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23713:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23713:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23760:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23760:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23771:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23771:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23756:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23756:3:9"
																		},
																		"nativeSrc": "23756:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23756:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23779:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23779:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23785:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23785:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23775:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23775:3:9"
																		},
																		"nativeSrc": "23775:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23775:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23749:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23749:6:9"
																},
																"nativeSrc": "23749:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23749:47:9"
															},
															"nativeSrc": "23749:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23749:47:9"
														},
														{
															"nativeSrc": "23805:139:9",
															"nodeType": "YulAssignment",
															"src": "23805:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23939:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23939:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23813:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23813:124:9"
																},
																"nativeSrc": "23813:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23813:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23805:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23805:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23532:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23683:9:9",
														"nodeType": "YulTypedName",
														"src": "23683:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23698:4:9",
														"nodeType": "YulTypedName",
														"src": "23698:4:9",
														"type": ""
													}
												],
												"src": "23532:419:9"
											},
											{
												"body": {
													"nativeSrc": "24005:362:9",
													"nodeType": "YulBlock",
													"src": "24005:362:9",
													"statements": [
														{
															"nativeSrc": "24015:25:9",
															"nodeType": "YulAssignment",
															"src": "24015:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24038:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24038:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24020:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "24020:17:9"
																},
																"nativeSrc": "24020:20:9",
																"nodeType": "YulFunctionCall",
																"src": "24020:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24015:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "24015:1:9"
																}
															]
														},
														{
															"nativeSrc": "24049:25:9",
															"nodeType": "YulAssignment",
															"src": "24049:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24072:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24072:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24054:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "24054:17:9"
																},
																"nativeSrc": "24054:20:9",
																"nodeType": "YulFunctionCall",
																"src": "24054:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24049:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "24049:1:9"
																}
															]
														},
														{
															"nativeSrc": "24083:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "24083:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24106:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24106:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24109:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24109:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "24102:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24102:3:9"
																},
																"nativeSrc": "24102:9:9",
																"nodeType": "YulFunctionCall",
																"src": "24102:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "24087:11:9",
																	"nodeType": "YulTypedName",
																	"src": "24087:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24120:41:9",
															"nodeType": "YulAssignment",
															"src": "24120:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "24149:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "24149:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24131:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "24131:17:9"
																},
																"nativeSrc": "24131:30:9",
																"nodeType": "YulFunctionCall",
																"src": "24131:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "24120:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "24120:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24338:22:9",
																"nodeType": "YulBlock",
																"src": "24338:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24340:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "24340:16:9"
																			},
																			"nativeSrc": "24340:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "24340:18:9"
																		},
																		"nativeSrc": "24340:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "24340:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "24271:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "24271:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "24264:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "24264:6:9"
																				},
																				"nativeSrc": "24264:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "24264:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "24294:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "24294:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "24301:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "24301:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "24310:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "24310:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "24297:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "24297:3:9"
																						},
																						"nativeSrc": "24297:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "24297:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "24291:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "24291:2:9"
																				},
																				"nativeSrc": "24291:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "24291:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "24244:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "24244:2:9"
																		},
																		"nativeSrc": "24244:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24244:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24224:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24224:6:9"
																},
																"nativeSrc": "24224:113:9",
																"nodeType": "YulFunctionCall",
																"src": "24224:113:9"
															},
															"nativeSrc": "24221:139:9",
															"nodeType": "YulIf",
															"src": "24221:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "23957:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23988:1:9",
														"nodeType": "YulTypedName",
														"src": "23988:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23991:1:9",
														"nodeType": "YulTypedName",
														"src": "23991:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "23997:7:9",
														"nodeType": "YulTypedName",
														"src": "23997:7:9",
														"type": ""
													}
												],
												"src": "23957:410:9"
											},
											{
												"body": {
													"nativeSrc": "24401:152:9",
													"nodeType": "YulBlock",
													"src": "24401:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24418:1:9",
																		"nodeType": "YulLiteral",
																		"src": "24418:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24421:77:9",
																		"nodeType": "YulLiteral",
																		"src": "24421:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24411:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24411:6:9"
																},
																"nativeSrc": "24411:88:9",
																"nodeType": "YulFunctionCall",
																"src": "24411:88:9"
															},
															"nativeSrc": "24411:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "24411:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "24515:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24518:4:9",
																		"nodeType": "YulLiteral",
																		"src": "24518:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24508:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24508:6:9"
																},
																"nativeSrc": "24508:15:9",
																"nodeType": "YulFunctionCall",
																"src": "24508:15:9"
															},
															"nativeSrc": "24508:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "24508:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24539:1:9",
																		"nodeType": "YulLiteral",
																		"src": "24539:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24542:4:9",
																		"nodeType": "YulLiteral",
																		"src": "24542:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24532:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24532:6:9"
																},
																"nativeSrc": "24532:15:9",
																"nodeType": "YulFunctionCall",
																"src": "24532:15:9"
															},
															"nativeSrc": "24532:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "24532:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24373:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "24373:180:9"
											},
											{
												"body": {
													"nativeSrc": "24601:143:9",
													"nodeType": "YulBlock",
													"src": "24601:143:9",
													"statements": [
														{
															"nativeSrc": "24611:25:9",
															"nodeType": "YulAssignment",
															"src": "24611:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24634:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24634:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24616:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "24616:17:9"
																},
																"nativeSrc": "24616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "24616:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24611:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "24611:1:9"
																}
															]
														},
														{
															"nativeSrc": "24645:25:9",
															"nodeType": "YulAssignment",
															"src": "24645:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24668:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24668:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24650:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "24650:17:9"
																},
																"nativeSrc": "24650:20:9",
																"nodeType": "YulFunctionCall",
																"src": "24650:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24645:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "24645:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24692:22:9",
																"nodeType": "YulBlock",
																"src": "24692:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "24694:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "24694:16:9"
																			},
																			"nativeSrc": "24694:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "24694:18:9"
																		},
																		"nativeSrc": "24694:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "24694:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24689:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24689:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24682:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24682:6:9"
																},
																"nativeSrc": "24682:9:9",
																"nodeType": "YulFunctionCall",
																"src": "24682:9:9"
															},
															"nativeSrc": "24679:35:9",
															"nodeType": "YulIf",
															"src": "24679:35:9"
														},
														{
															"nativeSrc": "24724:14:9",
															"nodeType": "YulAssignment",
															"src": "24724:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24733:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24733:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24736:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "24736:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24729:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24729:3:9"
																},
																"nativeSrc": "24729:9:9",
																"nodeType": "YulFunctionCall",
																"src": "24729:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "24724:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "24724:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "24559:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24590:1:9",
														"nodeType": "YulTypedName",
														"src": "24590:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24593:1:9",
														"nodeType": "YulTypedName",
														"src": "24593:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "24599:1:9",
														"nodeType": "YulTypedName",
														"src": "24599:1:9",
														"type": ""
													}
												],
												"src": "24559:185:9"
											},
											{
												"body": {
													"nativeSrc": "24876:206:9",
													"nodeType": "YulBlock",
													"src": "24876:206:9",
													"statements": [
														{
															"nativeSrc": "24886:26:9",
															"nodeType": "YulAssignment",
															"src": "24886:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24898:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24898:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24909:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24894:3:9"
																},
																"nativeSrc": "24894:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24894:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24886:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24966:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "24966:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24979:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24979:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24990:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24990:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24975:3:9"
																		},
																		"nativeSrc": "24975:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24975:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24922:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "24922:43:9"
																},
																"nativeSrc": "24922:71:9",
																"nodeType": "YulFunctionCall",
																"src": "24922:71:9"
															},
															"nativeSrc": "24922:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "24922:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25047:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25047:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25060:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25060:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25071:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25071:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25056:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25056:3:9"
																		},
																		"nativeSrc": "25056:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25056:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "25003:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25003:43:9"
																},
																"nativeSrc": "25003:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25003:72:9"
															},
															"nativeSrc": "25003:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25003:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24750:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24840:9:9",
														"nodeType": "YulTypedName",
														"src": "24840:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24852:6:9",
														"nodeType": "YulTypedName",
														"src": "24852:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24860:6:9",
														"nodeType": "YulTypedName",
														"src": "24860:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24871:4:9",
														"nodeType": "YulTypedName",
														"src": "24871:4:9",
														"type": ""
													}
												],
												"src": "24750:332:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$521_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$521_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$521_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$521__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$521_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Over claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time in past\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"931": [
									{
										"length": 32,
										"start": 1902
									},
									{
										"length": 32,
										"start": 2935
									},
									{
										"length": 32,
										"start": 3107
									},
									{
										"length": 32,
										"start": 3519
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011e575f3560e01c80635932fdba116100ab57806391d148541161006f57806391d148541461030a578063a217fddf1461033a578063a694fc3a14610358578063d547741f14610374578063e075d82c146103905761011e565b80635932fdba1461026257806370a082311461028057806372f702f3146102b0578063817b1cd2146102ce57806385ecdd93146102ec5761011e565b8063248a9ca3116100f2578063248a9ca3146101d45780632e1a7d4d146102045780632f2ff15d1461022057806336568abe1461023c578063372500ab146102585761011e565b80628cc2621461012257806301ffc9a7146101525780630b35a4b0146101825780631c1121c5146101a0575b5f80fd5b61013c600480360381019061013791906119ef565b6103ac565b6040516101499190611a32565b60405180910390f35b61016c60048036038101906101679190611aa0565b6103f3565b6040516101799190611ae5565b60405180910390f35b61018a61046c565b6040516101979190611bb5565b60405180910390f35b6101ba60048036038101906101b59190611bff565b61057f565b6040516101cb959493929190611c39565b60405180910390f35b6101ee60048036038101906101e99190611cbd565b6105d0565b6040516101fb9190611cf7565b60405180910390f35b61021e60048036038101906102199190611bff565b6105ec565b005b61023a60048036038101906102359190611d10565b6108a3565b005b61025660048036038101906102519190611d10565b6108c5565b005b610260610940565b005b61026a610bb7565b6040516102779190611cf7565b60405180910390f35b61029a600480360381019061029591906119ef565b610bdb565b6040516102a79190611a32565b60405180910390f35b6102b8610c21565b6040516102c59190611da9565b60405180910390f35b6102d6610c45565b6040516102e39190611a32565b60405180910390f35b6102f4610c4e565b6040516103019190611a32565b60405180910390f35b610324600480360381019061031f9190611d10565b610c54565b6040516103319190611ae5565b60405180910390f35b610342610cb7565b60405161034f9190611cf7565b60405180910390f35b610372600480360381019061036d9190611bff565b610cbd565b005b61038e60048036038101906103899190611d10565b610ef6565b005b6103aa60048036038101906103a59190611dc2565b610f18565b005b5f80600190505b60055481116103ed576103d86103c984836111ed565b836113e290919063ffffffff16565b915080806103e590611e53565b9150506103b3565b50919050565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104655750610464826113f7565b5b9050919050565b60605f80600190505b60055481116104bc5760045f8281526020019081526020015f20600101544210156104a95781806104a590611e53565b9250505b80806104b490611e53565b915050610475565b505f8167ffffffffffffffff8111156104d8576104d7611e9a565b5b6040519080825280602002602001820160405280156105065781602001602082028036833780820191505090505b5090505f80600190505b60055481116105755760045f8281526020019081526020015f2060010154421015610562578083838061054290611e53565b94508151811061055557610554611ec7565b5b6020026020010181815250505b808061056d90611e53565b915050610510565b5081935050505090565b6004602052805f5260405f205f91509050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b5f805f8381526020019081526020015f20600101549050919050565b6105f4611460565b5f8111610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90611f4e565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90611fb6565b60405180910390fd5b6106bf336114af565b6106d48160025461158d90919063ffffffff16565b60028190555061072a8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461158d90919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016107c7929190611fd4565b6020604051808303815f875af11580156107e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108079190612025565b905080610849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108409061209a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161088f9190611a32565b60405180910390a2506108a06115a2565b50565b6108ac826105d0565b6108b5816115ab565b6108bf83836115bf565b50505050565b6108cd6116a8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610931576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093b82826116af565b505050565b610948611460565b610951336114af565b5f80600190505b6005548111610af9575f60045f8381526020019081526020015f2090505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490505f81036109d3575050610ae6565b81600201546109ef8284600301546113e290919063ffffffff16565b1115610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790612102565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f2081905550610a988183600301546113e290919063ffffffff16565b8260030181905550610ace826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611798565b610ae181856113e290919063ffffffff16565b935050505b8080610af190611e53565b915050610958565b505f8111610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b339061216a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff80b6d248ca65e589d3f24c7ce36e2df22ba16ba4e7656aad67e114abbe971d2827f0000000000000000000000000000000000000000000000000000000000000000604051610ba4929190612188565b60405180910390a250610bb56115a2565b565b7f6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe81565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f600254905090565b60055481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610cc5611460565b5f8111610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe90611f4e565b60405180910390fd5b610d10336114af565b610d25816002546113e290919063ffffffff16565b600281905550610d7b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113e290919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e1a939291906121af565b6020604051808303815f875af1158015610e36573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e5a9190612025565b905080610e9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e939061209a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610ee29190611a32565b60405180910390a250610ef36115a2565b50565b610eff826105d0565b610f08816115ab565b610f1283836116af565b50505050565b7f6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe610f42816115ab565b42851015610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c9061222e565b60405180910390fd5b5f8411610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe90612296565b60405180910390fd5b5f8311611009576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611000906122fe565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611043919061231c565b602060405180830381865afa15801561105e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110829190612349565b9050838110156110c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110be906123be565b60405180910390fd5b5f60055f81546110d690611e53565b91905081905590506040518060a00160405280888152602001611102888a6113e290919063ffffffff16565b81526020018681526020015f81526020018573ffffffffffffffffffffffffffffffffffffffff1681525060045f8381526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f85396969f10b93e89b84ce058bbce90a809c86067bb94a5f0243dfe9f9868943816040516111dc9190611a32565b60405180910390a150505050505050565b5f8060045f8481526020019081526020015f2090505f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054148061124f5750805f015442105b1561125d575f9150506113dc565b5f611274825f01544261158d90919063ffffffff16565b90505f611291835f0154846001015461158d90919063ffffffff16565b90505f6112c1826112b3670de0b6b3a76400008661191690919063ffffffff16565b61192b90919063ffffffff16565b90505f6112df8560030154866002015461158d90919063ffffffff16565b90505f6113466002546113388560035f8e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461191690919063ffffffff16565b61192b90919063ffffffff16565b90506113d360065f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8a81526020019081526020015f20546113c5670de0b6b3a76400006113b7858761191690919063ffffffff16565b61192b90919063ffffffff16565b61158d90919063ffffffff16565b96505050505050505b92915050565b5f81836113ef91906123dc565b905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6002600154036114a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149c90612459565b60405180910390fd5b6002600181905550565b5f600190505b6005548111611589576115266114cb83836111ed565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20546113e290919063ffffffff16565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2081905550808061158190611e53565b9150506114b5565b5050565b5f818361159a9190612477565b905092915050565b60018081905550565b6115bc816115b76116a8565b611940565b50565b5f6115ca8383610c54565b61169e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061163b6116a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506116a2565b5f90505b92915050565b5f33905090565b5f6116ba8383610c54565b1561178e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061172b6116a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611792565b5f90505b92915050565b808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117d2919061231c565b602060405180830381865afa1580156117ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118119190612349565b1015611852576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611849906124f4565b60405180910390fd5b5f8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161188e929190611fd4565b6020604051808303815f875af11580156118aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ce9190612025565b905080611910576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119079061209a565b60405180910390fd5b50505050565b5f81836119239190612512565b905092915050565b5f81836119389190612580565b905092915050565b61194a8282610c54565b61198d5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016119849291906125b0565b60405180910390fd5b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119be82611995565b9050919050565b6119ce816119b4565b81146119d8575f80fd5b50565b5f813590506119e9816119c5565b92915050565b5f60208284031215611a0457611a03611991565b5b5f611a11848285016119db565b91505092915050565b5f819050919050565b611a2c81611a1a565b82525050565b5f602082019050611a455f830184611a23565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a7f81611a4b565b8114611a89575f80fd5b50565b5f81359050611a9a81611a76565b92915050565b5f60208284031215611ab557611ab4611991565b5b5f611ac284828501611a8c565b91505092915050565b5f8115159050919050565b611adf81611acb565b82525050565b5f602082019050611af85f830184611ad6565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611b3081611a1a565b82525050565b5f611b418383611b27565b60208301905092915050565b5f602082019050919050565b5f611b6382611afe565b611b6d8185611b08565b9350611b7883611b18565b805f5b83811015611ba8578151611b8f8882611b36565b9750611b9a83611b4d565b925050600181019050611b7b565b5085935050505092915050565b5f6020820190508181035f830152611bcd8184611b59565b905092915050565b611bde81611a1a565b8114611be8575f80fd5b50565b5f81359050611bf981611bd5565b92915050565b5f60208284031215611c1457611c13611991565b5b5f611c2184828501611beb565b91505092915050565b611c33816119b4565b82525050565b5f60a082019050611c4c5f830188611a23565b611c596020830187611a23565b611c666040830186611a23565b611c736060830185611a23565b611c806080830184611c2a565b9695505050505050565b5f819050919050565b611c9c81611c8a565b8114611ca6575f80fd5b50565b5f81359050611cb781611c93565b92915050565b5f60208284031215611cd257611cd1611991565b5b5f611cdf84828501611ca9565b91505092915050565b611cf181611c8a565b82525050565b5f602082019050611d0a5f830184611ce8565b92915050565b5f8060408385031215611d2657611d25611991565b5b5f611d3385828601611ca9565b9250506020611d44858286016119db565b9150509250929050565b5f819050919050565b5f611d71611d6c611d6784611995565b611d4e565b611995565b9050919050565b5f611d8282611d57565b9050919050565b5f611d9382611d78565b9050919050565b611da381611d89565b82525050565b5f602082019050611dbc5f830184611d9a565b92915050565b5f805f8060808587031215611dda57611dd9611991565b5b5f611de787828801611beb565b9450506020611df887828801611beb565b9350506040611e0987828801611beb565b9250506060611e1a878288016119db565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e5d82611a1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8f57611e8e611e26565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611f38601283611ef4565b9150611f4382611f04565b602082019050919050565b5f6020820190508181035f830152611f6581611f2c565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611fa0601483611ef4565b9150611fab82611f6c565b602082019050919050565b5f6020820190508181035f830152611fcd81611f94565b9050919050565b5f604082019050611fe75f830185611c2a565b611ff46020830184611a23565b9392505050565b61200481611acb565b811461200e575f80fd5b50565b5f8151905061201f81611ffb565b92915050565b5f6020828403121561203a57612039611991565b5b5f61204784828501612011565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612084600f83611ef4565b915061208f82612050565b602082019050919050565b5f6020820190508181035f8301526120b181612078565b9050919050565b7f4f76657220636c61696d656400000000000000000000000000000000000000005f82015250565b5f6120ec600c83611ef4565b91506120f7826120b8565b602082019050919050565b5f6020820190508181035f830152612119816120e0565b9050919050565b7f4e6f2072657761726473000000000000000000000000000000000000000000005f82015250565b5f612154600a83611ef4565b915061215f82612120565b602082019050919050565b5f6020820190508181035f83015261218181612148565b9050919050565b5f60408201905061219b5f830185611a23565b6121a86020830184611c2a565b9392505050565b5f6060820190506121c25f830186611c2a565b6121cf6020830185611c2a565b6121dc6040830184611a23565b949350505050565b7f53746172742074696d6520696e207061737400000000000000000000000000005f82015250565b5f612218601283611ef4565b9150612223826121e4565b602082019050919050565b5f6020820190508181035f8301526122458161220c565b9050919050565b7f496e76616c6964206475726174696f6e000000000000000000000000000000005f82015250565b5f612280601083611ef4565b915061228b8261224c565b602082019050919050565b5f6020820190508181035f8301526122ad81612274565b9050919050565b7f496e76616c69642072657761726420616d6f756e7400000000000000000000005f82015250565b5f6122e8601583611ef4565b91506122f3826122b4565b602082019050919050565b5f6020820190508181035f830152612315816122dc565b9050919050565b5f60208201905061232f5f830184611c2a565b92915050565b5f8151905061234381611bd5565b92915050565b5f6020828403121561235e5761235d611991565b5b5f61236b84828501612335565b91505092915050565b7f496e73756666696369656e742072657761726420746f6b656e730000000000005f82015250565b5f6123a8601a83611ef4565b91506123b382612374565b602082019050919050565b5f6020820190508181035f8301526123d58161239c565b9050919050565b5f6123e682611a1a565b91506123f183611a1a565b925082820190508082111561240957612408611e26565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612443601f83611ef4565b915061244e8261240f565b602082019050919050565b5f6020820190508181035f83015261247081612437565b9050919050565b5f61248182611a1a565b915061248c83611a1a565b92508282039050818111156124a4576124a3611e26565b5b92915050565b7f496e73756666696369656e74207265776172642062616c616e636500000000005f82015250565b5f6124de601b83611ef4565b91506124e9826124aa565b602082019050919050565b5f6020820190508181035f83015261250b816124d2565b9050919050565b5f61251c82611a1a565b915061252783611a1a565b925082820261253581611a1a565b9150828204841483151761254c5761254b611e26565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61258a82611a1a565b915061259583611a1a565b9250826125a5576125a4612553565b5b828204905092915050565b5f6040820190506125c35f830185611c2a565b6125d06020830184611ce8565b939250505056fea264697066735822122004a0b4bd7a4c667a33618748745d0ef84ee37ebf247e825679e1e4c97118385064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5932FDBA GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xE075D82C EQ PUSH2 0x390 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x5932FDBA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x85ECDD93 EQ PUSH2 0x2EC JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x258 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xB35A4B0 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1C1121C5 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0xF18 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x3ED JUMPI PUSH2 0x3D8 PUSH2 0x3C9 DUP5 DUP4 PUSH2 0x11ED JUMP JUMPDEST DUP4 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x3E5 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B3 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x465 JUMPI POP PUSH2 0x464 DUP3 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x4BC JUMPI PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x4A9 JUMPI DUP2 DUP1 PUSH2 0x4A5 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x4B4 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x475 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x1E9A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x506 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x575 JUMPI PUSH1 0x4 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x562 JUMPI DUP1 DUP4 DUP4 DUP1 PUSH2 0x542 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x1EC7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP1 PUSH2 0x56D SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x510 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0x1460 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6BF CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH1 0x2 SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x72A DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x8A0 PUSH2 0x15A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AC DUP3 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x8B5 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 PUSH2 0x15BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93B DUP3 DUP3 PUSH2 0x16AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x948 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x951 CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xAF9 JUMPI PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x9D3 JUMPI POP POP PUSH2 0xAE6 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x9EF DUP3 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA98 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xACE DUP3 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0xAE1 DUP2 DUP6 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0xAF1 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x958 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF80B6D248CA65E589D3F24C7CE36E2DF22BA16BA4E7656AAD67E114ABBE971D2 DUP3 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0xBA4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xBB5 PUSH2 0x15A2 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xCC5 PUSH2 0x1460 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFE SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD10 CALLER PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH1 0x2 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xD7B DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE36 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xEF3 PUSH2 0x15A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEFF DUP3 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0x15AB JUMP JUMPDEST PUSH2 0xF12 DUP4 DUP4 PUSH2 0x16AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE PUSH2 0xF42 DUP2 PUSH2 0x15AB JUMP JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 GT PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x105E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1082 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP1 PUSH2 0x23BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP2 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1102 DUP9 DUP11 PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x85396969F10B93E89B84CE058BBCE90A809C86067BB94A5F0243DFE9F9868943 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ DUP1 PUSH2 0x124F JUMPI POP DUP1 PUSH0 ADD SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x125D JUMPI PUSH0 SWAP2 POP POP PUSH2 0x13DC JUMP JUMPDEST PUSH0 PUSH2 0x1274 DUP3 PUSH0 ADD SLOAD TIMESTAMP PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1291 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12C1 DUP3 PUSH2 0x12B3 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12DF DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x2 ADD SLOAD PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1346 PUSH1 0x2 SLOAD PUSH2 0x1338 DUP6 PUSH1 0x3 PUSH0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13D3 PUSH1 0x6 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13C5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x13B7 DUP6 DUP8 PUSH2 0x1916 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x192B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x158D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x13EF SWAP2 SWAP1 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x1589 JUMPI PUSH2 0x1526 PUSH2 0x14CB DUP4 DUP4 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13E2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1581 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x15BC DUP2 PUSH2 0x15B7 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15CA DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x169E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x163B PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16A2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x16BA DUP4 DUP4 PUSH2 0xC54 JUMP JUMPDEST ISZERO PUSH2 0x178E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x172B PUSH2 0x16A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1792 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x231C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST LT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1849 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188E SWAP3 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1907 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1938 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194A DUP3 DUP3 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x198D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP3 SWAP2 SWAP1 PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BE DUP3 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E9 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A11 DUP5 DUP3 DUP6 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2C DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7F DUP2 PUSH2 0x1A4B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9A DUP2 PUSH2 0x1A76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB5 JUMPI PUSH2 0x1AB4 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B41 DUP4 DUP4 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1B6D DUP2 DUP6 PUSH2 0x1B08 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B78 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA8 JUMPI DUP2 MLOAD PUSH2 0x1B8F DUP9 DUP3 PUSH2 0x1B36 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B9A DUP4 PUSH2 0x1B4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B7B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCD DUP2 DUP5 PUSH2 0x1B59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDE DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF9 DUP2 PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C14 JUMPI PUSH2 0x1C13 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C21 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP9 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C66 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C73 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9C DUP2 PUSH2 0x1C8A JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB7 DUP2 PUSH2 0x1C93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CDF DUP5 DUP3 DUP6 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF1 DUP2 PUSH2 0x1C8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0A PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D26 JUMPI PUSH2 0x1D25 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D33 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D44 DUP6 DUP3 DUP7 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D71 PUSH2 0x1D6C PUSH2 0x1D67 DUP5 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 DUP3 PUSH2 0x1D57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D93 DUP3 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1D89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBC PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE7 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1DF8 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E09 DUP8 DUP3 DUP9 ADD PUSH2 0x1BEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1E1A DUP8 DUP3 DUP9 ADD PUSH2 0x19DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E5D DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F38 PUSH1 0x12 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F43 DUP3 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F65 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA0 PUSH1 0x14 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAB DUP3 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCD DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1FF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2004 DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP2 EQ PUSH2 0x200E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x201F DUP2 PUSH2 0x1FFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203A JUMPI PUSH2 0x2039 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2047 DUP5 DUP3 DUP6 ADD PUSH2 0x2011 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 PUSH1 0xF DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B1 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F76657220636C61696D65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EC PUSH1 0xC DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647300000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2154 PUSH1 0xA DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x215F DUP3 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2181 DUP2 PUSH2 0x2148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x219B PUSH0 DUP4 ADD DUP6 PUSH2 0x1A23 JUMP JUMPDEST PUSH2 0x21A8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x21CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53746172742074696D6520696E20706173740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 PUSH1 0x12 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2245 DUP2 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206475726174696F6E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0x10 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420616D6F756E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22E8 PUSH1 0x15 DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F3 DUP3 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2315 DUP2 PUSH2 0x22DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x232F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2343 DUP2 PUSH2 0x1BD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235E JUMPI PUSH2 0x235D PUSH2 0x1991 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236B DUP5 DUP3 DUP6 ADD PUSH2 0x2335 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420746F6B656E73000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23A8 PUSH1 0x1A DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B3 DUP3 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D5 DUP2 PUSH2 0x239C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23E6 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F1 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2443 PUSH1 0x1F DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP3 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2470 DUP2 PUSH2 0x2437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2481 DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x248C DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH2 0x24A3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24DE PUSH1 0x1B DUP4 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250B DUP2 PUSH2 0x24D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x251C DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2527 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2535 DUP2 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x258A DUP3 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2595 DUP4 PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25A5 JUMPI PUSH2 0x25A4 PUSH2 0x2553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25C3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV LOG0 0xB4 0xBD PUSH27 0x4C667A33618748745D0EF84EE37EBF247E825679E1E4C971183850 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "304:6831:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3628:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6550:582:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2075:524:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4681:956:8;;;:::i;:::-;;404:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6333:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;697:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6451:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:462:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2666:895:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3628:212;3682:13;3713:9;3725:1;3713:13;;3708:125;3733:17;;3728:1;:22;3708:125;;3780:41;3790:30;3809:7;3818:1;3790:18;:30::i;:::-;3780:5;:9;;:41;;;;:::i;:::-;3772:49;;3752:3;;;;;:::i;:::-;;;;3708:125;;;;3628:212;;;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;6550:582:8:-;6601:16;6630:13;6663:9;6675:1;6663:13;;6658:167;6683:17;;6678:1;:22;6658:167;;6744:15;:18;6760:1;6744:18;;;;;;;;;;;:26;;;6726:15;:44;6722:92;;;6791:7;;;;;:::i;:::-;;;;6722:92;6702:3;;;;;:::i;:::-;;;;6658:167;;;;6837:23;6877:5;6863:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6837:46;;6894:13;6927:9;6939:1;6927:13;;6922:179;6947:17;;6942:1;:22;6922:179;;7008:15;:18;7024:1;7008:18;;;;;;;;;;;:26;;;6990:15;:44;6986:104;;;7073:1;7055:6;7062:7;;;;;:::i;:::-;;;7055:15;;;;;;;;:::i;:::-;;;;;;;:19;;;;;6986:104;6966:3;;;;;:::i;:::-;;;;6922:179;;;;7118:6;7111:13;;;;;6550:582;:::o;829:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;2075:524:8:-;2261:21:2;:19;:21::i;:::-;2159:1:8::1;2150:6;:10;2142:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2227:6;2202:9;:21;2212:10;2202:21;;;;;;;;;;;;;;;;:31;;2194:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2279:26;2294:10;2279:14;:26::i;:::-;2331:24;2348:6;2331:12;;:16;;:24;;;;:::i;:::-;2316:12;:39;;;;2390:33;2416:6;2390:9;:21;2400:10;2390:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;2366:9;:21;2376:10;2366:21;;;;;;;;;;;;;;;:57;;;;2444:12;2459;:21;;;2481:10;2493:6;2459:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2444:56;;2519:7;2511:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2572:10;2562:29;;;2584:6;2562:29;;;;;;:::i;:::-;;;;;;;;2131:468;2303:20:2::0;:18;:20::i;:::-;2075:524:8;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;4681:956:8:-;2261:21:2;:19;:21::i;:::-;4738:26:8::1;4753:10;4738:14;:26::i;:::-;4785:20;4825:9:::0;4837:1:::1;4825:13;;4820:680;4845:17;;4840:1;:22;4820:680;;4884:31;4918:15;:18;4934:1;4918:18;;;;;;;;;;;4884:52;;4951:14;4968:12;:24;4981:10;4968:24;;;;;;;;;;;;;;;:27;4993:1;4968:27;;;;;;;;;;;;4951:44;;5024:1;5014:6;:11:::0;5010:25:::1;;5027:8;;;;5010:25;5146:8;:21;;;5107:35;5135:6;5107:8;:23;;;:27;;:35;;;;:::i;:::-;:60;;5081:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;5274:1;5244:12;:24;5257:10;5244:24;;;;;;;;;;;;;;;:27;5269:1;5244:27;;;;;;;;;;;:31;;;;5316:35;5344:6;5316:8;:23;;;:27;;:35;;;;:::i;:::-;5290:8;:23;;:61;;;;5380:54;5392:8;:21;;;;;;;;;;;;5415:10;5427:6;5380:11;:54::i;:::-;5464:24;5481:6;5464:12;:16;;:24;;;;:::i;:::-;5449:39;;4869:631;;4820:680;4864:3;;;;;:::i;:::-;;;;4820:680;;;;5535:1;5520:12;:16;5512:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;5581:10;5567:62;;;5593:12;5615;5567:62;;;;;;;:::i;:::-;;;;;;;;4727:910;2303:20:2::0;:18;:20::i;:::-;4681:956:8:o;404:68::-;445:27;404:68;:::o;6333:110::-;6390:7;6417:9;:18;6427:7;6417:18;;;;;;;;;;;;;;;;6410:25;;6333:110;;;:::o;697:36::-;;;:::o;6451:91::-;6495:7;6522:12;;6515:19;;6451:91;:::o;893:32::-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1605:462:8:-;2261:21:2;:19;:21::i;:::-;1686:1:8::1;1677:6;:10;1669:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1721:26;1736:10;1721:14;:26::i;:::-;1783:24;1800:6;1783:12;;:16;;:24;;;;:::i;:::-;1768:12;:39;;;;1842:33;1868:6;1842:9;:21;1852:10;1842:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;1818:9;:21;1828:10;1818:21;;;;;;;;;;;;;;;:57;;;;1896:12;1911;:25;;;1937:10;1957:4;1964:6;1911:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:75;;1990:7;1982:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2040:10;2033:26;;;2052:6;2033:26;;;;;;:::i;:::-;;;;;;;;1658:409;2303:20:2::0;:18;:20::i;:::-;1605:462:8;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;2666:895:8:-;445:27;2464:16:0;2475:4;2464:10;:16::i;:::-;2882:15:8::1;2869:9;:28;;2861:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2950:1;2939:8;:12;2931:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3005:1;2991:11;:15;2983:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3053:15;3078:12;3071:30;;;3110:4;3071:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3053:63;;3146:11;3135:7;:22;;3127:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3201:18;3224:17;;3222:19;;;;;:::i;:::-;;;;;;;3201:40;;3282:222;;;;;;;;3323:9;3282:222;;;;3356:23;3370:8;3356:9;:13;;:23;;;;:::i;:::-;3282:222;;;;3408:11;3282:222;;;;3450:1;3282:222;;;;3480:12;3282:222;;;;::::0;3252:15:::1;:27;3268:10;3252:27;;;;;;;;;;;:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3522:31;3542:10;3522:31;;;;;;:::i;:::-;;;;;;;;2850:711;;2666:895:::0;;;;;:::o;3848:766::-;3935:7;3955:31;3989:15;:27;4005:10;3989:27;;;;;;;;;;;3955:61;;4053:1;4031:9;:18;4041:7;4031:18;;;;;;;;;;;;;;;;:23;:63;;;;4076:8;:18;;;4058:15;:36;4031:63;4027:77;;;4103:1;4096:8;;;;;4027:77;4117:19;4139:39;4159:8;:18;;;4139:15;:19;;:39;;;;:::i;:::-;4117:61;;4189:21;4213:40;4234:8;:18;;;4213:8;:16;;;:20;;:40;;;;:::i;:::-;4189:64;;4264:18;4285:40;4311:13;4285:21;4301:4;4285:11;:15;;:21;;;;:::i;:::-;:25;;:40;;;;:::i;:::-;4264:61;;4338:24;4365:50;4391:8;:23;;;4365:8;:21;;;:25;;:50;;;;:::i;:::-;4338:77;;4426:17;4446:52;4485:12;;4446:34;4469:10;4446:9;:18;4456:7;4446:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;:38;;:52;;;;:::i;:::-;4426:72;;4526:80;4572:12;:21;4585:7;4572:21;;;;;;;;;;;;;;;:33;4594:10;4572:33;;;;;;;;;;;;4526:41;4562:4;4526:31;4547:9;4526:16;:20;;:31;;;;:::i;:::-;:35;;:41;;;;:::i;:::-;:45;;:80;;;;:::i;:::-;4519:87;;;;;;;;3848:766;;;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;763:146:5:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5704:231:8:-;5770:9;5782:1;5770:13;;5765:163;5790:17;;5785:1;:22;5765:163;;5856:60;5885:30;5904:7;5913:1;5885:18;:30::i;:::-;5856:12;:21;5869:7;5856:21;;;;;;;;;;;;;;;:24;5878:1;5856:24;;;;;;;;;;;;:28;;:60;;;;:::i;:::-;5829:12;:21;5842:7;5829:21;;;;;;;;;;;;;;;:24;5851:1;5829:24;;;;;;;;;;;:87;;;;5809:3;;;;;:::i;:::-;;;;5765:163;;;;5704:231;:::o;3122:96:7:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;5943:323:8:-;6091:6;6056:5;6049:23;;;6081:4;6049:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;6027:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;6163:12;6185:5;6178:22;;;6201:2;6205:6;6178:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6163:49;;6231:7;6223:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;6016:250;5943:323;;;:::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:149::-;1647:7;1687:66;1680:5;1676:78;1665:89;;1611:149;;;:::o;1766:120::-;1838:23;1855:5;1838:23;:::i;:::-;1831:5;1828:34;1818:62;;1876:1;1873;1866:12;1818:62;1766:120;:::o;1892:137::-;1937:5;1975:6;1962:20;1953:29;;1991:32;2017:5;1991:32;:::i;:::-;1892:137;;;;:::o;2035:327::-;2093:6;2142:2;2130:9;2121:7;2117:23;2113:32;2110:119;;;2148:79;;:::i;:::-;2110:119;2268:1;2293:52;2337:7;2328:6;2317:9;2313:22;2293:52;:::i;:::-;2283:62;;2239:116;2035:327;;;;:::o;2368:90::-;2402:7;2445:5;2438:13;2431:21;2420:32;;2368:90;;;:::o;2464:109::-;2545:21;2560:5;2545:21;:::i;:::-;2540:3;2533:34;2464:109;;:::o;2579:210::-;2666:4;2704:2;2693:9;2689:18;2681:26;;2717:65;2779:1;2768:9;2764:17;2755:6;2717:65;:::i;:::-;2579:210;;;;:::o;2795:114::-;2862:6;2896:5;2890:12;2880:22;;2795:114;;;:::o;2915:184::-;3014:11;3048:6;3043:3;3036:19;3088:4;3083:3;3079:14;3064:29;;2915:184;;;;:::o;3105:132::-;3172:4;3195:3;3187:11;;3225:4;3220:3;3216:14;3208:22;;3105:132;;;:::o;3243:108::-;3320:24;3338:5;3320:24;:::i;:::-;3315:3;3308:37;3243:108;;:::o;3357:179::-;3426:10;3447:46;3489:3;3481:6;3447:46;:::i;:::-;3525:4;3520:3;3516:14;3502:28;;3357:179;;;;:::o;3542:113::-;3612:4;3644;3639:3;3635:14;3627:22;;3542:113;;;:::o;3691:732::-;3810:3;3839:54;3887:5;3839:54;:::i;:::-;3909:86;3988:6;3983:3;3909:86;:::i;:::-;3902:93;;4019:56;4069:5;4019:56;:::i;:::-;4098:7;4129:1;4114:284;4139:6;4136:1;4133:13;4114:284;;;4215:6;4209:13;4242:63;4301:3;4286:13;4242:63;:::i;:::-;4235:70;;4328:60;4381:6;4328:60;:::i;:::-;4318:70;;4174:224;4161:1;4158;4154:9;4149:14;;4114:284;;;4118:14;4414:3;4407:10;;3815:608;;;3691:732;;;;:::o;4429:373::-;4572:4;4610:2;4599:9;4595:18;4587:26;;4659:9;4653:4;4649:20;4645:1;4634:9;4630:17;4623:47;4687:108;4790:4;4781:6;4687:108;:::i;:::-;4679:116;;4429:373;;;;:::o;4808:122::-;4881:24;4899:5;4881:24;:::i;:::-;4874:5;4871:35;4861:63;;4920:1;4917;4910:12;4861:63;4808:122;:::o;4936:139::-;4982:5;5020:6;5007:20;4998:29;;5036:33;5063:5;5036:33;:::i;:::-;4936:139;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:664::-;5745:4;5783:3;5772:9;5768:19;5760:27;;5797:71;5865:1;5854:9;5850:17;5841:6;5797:71;:::i;:::-;5878:72;5946:2;5935:9;5931:18;5922:6;5878:72;:::i;:::-;5960;6028:2;6017:9;6013:18;6004:6;5960:72;:::i;:::-;6042;6110:2;6099:9;6095:18;6086:6;6042:72;:::i;:::-;6124:73;6192:3;6181:9;6177:19;6168:6;6124:73;:::i;:::-;5540:664;;;;;;;;:::o;6210:77::-;6247:7;6276:5;6265:16;;6210:77;;;:::o;6293:122::-;6366:24;6384:5;6366:24;:::i;:::-;6359:5;6356:35;6346:63;;6405:1;6402;6395:12;6346:63;6293:122;:::o;6421:139::-;6467:5;6505:6;6492:20;6483:29;;6521:33;6548:5;6521:33;:::i;:::-;6421:139;;;;:::o;6566:329::-;6625:6;6674:2;6662:9;6653:7;6649:23;6645:32;6642:119;;;6680:79;;:::i;:::-;6642:119;6800:1;6825:53;6870:7;6861:6;6850:9;6846:22;6825:53;:::i;:::-;6815:63;;6771:117;6566:329;;;;:::o;6901:118::-;6988:24;7006:5;6988:24;:::i;:::-;6983:3;6976:37;6901:118;;:::o;7025:222::-;7118:4;7156:2;7145:9;7141:18;7133:26;;7169:71;7237:1;7226:9;7222:17;7213:6;7169:71;:::i;:::-;7025:222;;;;:::o;7253:474::-;7321:6;7329;7378:2;7366:9;7357:7;7353:23;7349:32;7346:119;;;7384:79;;:::i;:::-;7346:119;7504:1;7529:53;7574:7;7565:6;7554:9;7550:22;7529:53;:::i;:::-;7519:63;;7475:117;7631:2;7657:53;7702:7;7693:6;7682:9;7678:22;7657:53;:::i;:::-;7647:63;;7602:118;7253:474;;;;;:::o;7733:60::-;7761:3;7782:5;7775:12;;7733:60;;;:::o;7799:142::-;7849:9;7882:53;7900:34;7909:24;7927:5;7909:24;:::i;:::-;7900:34;:::i;:::-;7882:53;:::i;:::-;7869:66;;7799:142;;;:::o;7947:126::-;7997:9;8030:37;8061:5;8030:37;:::i;:::-;8017:50;;7947:126;;;:::o;8079:140::-;8143:9;8176:37;8207:5;8176:37;:::i;:::-;8163:50;;8079:140;;;:::o;8225:159::-;8326:51;8371:5;8326:51;:::i;:::-;8321:3;8314:64;8225:159;;:::o;8390:250::-;8497:4;8535:2;8524:9;8520:18;8512:26;;8548:85;8630:1;8619:9;8615:17;8606:6;8548:85;:::i;:::-;8390:250;;;;:::o;8646:765::-;8732:6;8740;8748;8756;8805:3;8793:9;8784:7;8780:23;8776:33;8773:120;;;8812:79;;:::i;:::-;8773:120;8932:1;8957:53;9002:7;8993:6;8982:9;8978:22;8957:53;:::i;:::-;8947:63;;8903:117;9059:2;9085:53;9130:7;9121:6;9110:9;9106:22;9085:53;:::i;:::-;9075:63;;9030:118;9187:2;9213:53;9258:7;9249:6;9238:9;9234:22;9213:53;:::i;:::-;9203:63;;9158:118;9315:2;9341:53;9386:7;9377:6;9366:9;9362:22;9341:53;:::i;:::-;9331:63;;9286:118;8646:765;;;;;;;:::o;9417:180::-;9465:77;9462:1;9455:88;9562:4;9559:1;9552:15;9586:4;9583:1;9576:15;9603:233;9642:3;9665:24;9683:5;9665:24;:::i;:::-;9656:33;;9711:66;9704:5;9701:77;9698:103;;9781:18;;:::i;:::-;9698:103;9828:1;9821:5;9817:13;9810:20;;9603:233;;;:::o;9842:180::-;9890:77;9887:1;9880:88;9987:4;9984:1;9977:15;10011:4;10008:1;10001:15;10028:180;10076:77;10073:1;10066:88;10173:4;10170:1;10163:15;10197:4;10194:1;10187:15;10214:169;10298:11;10332:6;10327:3;10320:19;10372:4;10367:3;10363:14;10348:29;;10214:169;;;;:::o;10389:168::-;10529:20;10525:1;10517:6;10513:14;10506:44;10389:168;:::o;10563:366::-;10705:3;10726:67;10790:2;10785:3;10726:67;:::i;:::-;10719:74;;10802:93;10891:3;10802:93;:::i;:::-;10920:2;10915:3;10911:12;10904:19;;10563:366;;;:::o;10935:419::-;11101:4;11139:2;11128:9;11124:18;11116:26;;11188:9;11182:4;11178:20;11174:1;11163:9;11159:17;11152:47;11216:131;11342:4;11216:131;:::i;:::-;11208:139;;10935:419;;;:::o;11360:170::-;11500:22;11496:1;11488:6;11484:14;11477:46;11360:170;:::o;11536:366::-;11678:3;11699:67;11763:2;11758:3;11699:67;:::i;:::-;11692:74;;11775:93;11864:3;11775:93;:::i;:::-;11893:2;11888:3;11884:12;11877:19;;11536:366;;;:::o;11908:419::-;12074:4;12112:2;12101:9;12097:18;12089:26;;12161:9;12155:4;12151:20;12147:1;12136:9;12132:17;12125:47;12189:131;12315:4;12189:131;:::i;:::-;12181:139;;11908:419;;;:::o;12333:332::-;12454:4;12492:2;12481:9;12477:18;12469:26;;12505:71;12573:1;12562:9;12558:17;12549:6;12505:71;:::i;:::-;12586:72;12654:2;12643:9;12639:18;12630:6;12586:72;:::i;:::-;12333:332;;;;;:::o;12671:116::-;12741:21;12756:5;12741:21;:::i;:::-;12734:5;12731:32;12721:60;;12777:1;12774;12767:12;12721:60;12671:116;:::o;12793:137::-;12847:5;12878:6;12872:13;12863:22;;12894:30;12918:5;12894:30;:::i;:::-;12793:137;;;;:::o;12936:345::-;13003:6;13052:2;13040:9;13031:7;13027:23;13023:32;13020:119;;;13058:79;;:::i;:::-;13020:119;13178:1;13203:61;13256:7;13247:6;13236:9;13232:22;13203:61;:::i;:::-;13193:71;;13149:125;12936:345;;;;:::o;13287:165::-;13427:17;13423:1;13415:6;13411:14;13404:41;13287:165;:::o;13458:366::-;13600:3;13621:67;13685:2;13680:3;13621:67;:::i;:::-;13614:74;;13697:93;13786:3;13697:93;:::i;:::-;13815:2;13810:3;13806:12;13799:19;;13458:366;;;:::o;13830:419::-;13996:4;14034:2;14023:9;14019:18;14011:26;;14083:9;14077:4;14073:20;14069:1;14058:9;14054:17;14047:47;14111:131;14237:4;14111:131;:::i;:::-;14103:139;;13830:419;;;:::o;14255:162::-;14395:14;14391:1;14383:6;14379:14;14372:38;14255:162;:::o;14423:366::-;14565:3;14586:67;14650:2;14645:3;14586:67;:::i;:::-;14579:74;;14662:93;14751:3;14662:93;:::i;:::-;14780:2;14775:3;14771:12;14764:19;;14423:366;;;:::o;14795:419::-;14961:4;14999:2;14988:9;14984:18;14976:26;;15048:9;15042:4;15038:20;15034:1;15023:9;15019:17;15012:47;15076:131;15202:4;15076:131;:::i;:::-;15068:139;;14795:419;;;:::o;15220:160::-;15360:12;15356:1;15348:6;15344:14;15337:36;15220:160;:::o;15386:366::-;15528:3;15549:67;15613:2;15608:3;15549:67;:::i;:::-;15542:74;;15625:93;15714:3;15625:93;:::i;:::-;15743:2;15738:3;15734:12;15727:19;;15386:366;;;:::o;15758:419::-;15924:4;15962:2;15951:9;15947:18;15939:26;;16011:9;16005:4;16001:20;15997:1;15986:9;15982:17;15975:47;16039:131;16165:4;16039:131;:::i;:::-;16031:139;;15758:419;;;:::o;16183:332::-;16304:4;16342:2;16331:9;16327:18;16319:26;;16355:71;16423:1;16412:9;16408:17;16399:6;16355:71;:::i;:::-;16436:72;16504:2;16493:9;16489:18;16480:6;16436:72;:::i;:::-;16183:332;;;;;:::o;16521:442::-;16670:4;16708:2;16697:9;16693:18;16685:26;;16721:71;16789:1;16778:9;16774:17;16765:6;16721:71;:::i;:::-;16802:72;16870:2;16859:9;16855:18;16846:6;16802:72;:::i;:::-;16884;16952:2;16941:9;16937:18;16928:6;16884:72;:::i;:::-;16521:442;;;;;;:::o;16969:168::-;17109:20;17105:1;17097:6;17093:14;17086:44;16969:168;:::o;17143:366::-;17285:3;17306:67;17370:2;17365:3;17306:67;:::i;:::-;17299:74;;17382:93;17471:3;17382:93;:::i;:::-;17500:2;17495:3;17491:12;17484:19;;17143:366;;;:::o;17515:419::-;17681:4;17719:2;17708:9;17704:18;17696:26;;17768:9;17762:4;17758:20;17754:1;17743:9;17739:17;17732:47;17796:131;17922:4;17796:131;:::i;:::-;17788:139;;17515:419;;;:::o;17940:166::-;18080:18;18076:1;18068:6;18064:14;18057:42;17940:166;:::o;18112:366::-;18254:3;18275:67;18339:2;18334:3;18275:67;:::i;:::-;18268:74;;18351:93;18440:3;18351:93;:::i;:::-;18469:2;18464:3;18460:12;18453:19;;18112:366;;;:::o;18484:419::-;18650:4;18688:2;18677:9;18673:18;18665:26;;18737:9;18731:4;18727:20;18723:1;18712:9;18708:17;18701:47;18765:131;18891:4;18765:131;:::i;:::-;18757:139;;18484:419;;;:::o;18909:171::-;19049:23;19045:1;19037:6;19033:14;19026:47;18909:171;:::o;19086:366::-;19228:3;19249:67;19313:2;19308:3;19249:67;:::i;:::-;19242:74;;19325:93;19414:3;19325:93;:::i;:::-;19443:2;19438:3;19434:12;19427:19;;19086:366;;;:::o;19458:419::-;19624:4;19662:2;19651:9;19647:18;19639:26;;19711:9;19705:4;19701:20;19697:1;19686:9;19682:17;19675:47;19739:131;19865:4;19739:131;:::i;:::-;19731:139;;19458:419;;;:::o;19883:222::-;19976:4;20014:2;20003:9;19999:18;19991:26;;20027:71;20095:1;20084:9;20080:17;20071:6;20027:71;:::i;:::-;19883:222;;;;:::o;20111:143::-;20168:5;20199:6;20193:13;20184:22;;20215:33;20242:5;20215:33;:::i;:::-;20111:143;;;;:::o;20260:351::-;20330:6;20379:2;20367:9;20358:7;20354:23;20350:32;20347:119;;;20385:79;;:::i;:::-;20347:119;20505:1;20530:64;20586:7;20577:6;20566:9;20562:22;20530:64;:::i;:::-;20520:74;;20476:128;20260:351;;;;:::o;20617:176::-;20757:28;20753:1;20745:6;20741:14;20734:52;20617:176;:::o;20799:366::-;20941:3;20962:67;21026:2;21021:3;20962:67;:::i;:::-;20955:74;;21038:93;21127:3;21038:93;:::i;:::-;21156:2;21151:3;21147:12;21140:19;;20799:366;;;:::o;21171:419::-;21337:4;21375:2;21364:9;21360:18;21352:26;;21424:9;21418:4;21414:20;21410:1;21399:9;21395:17;21388:47;21452:131;21578:4;21452:131;:::i;:::-;21444:139;;21171:419;;;:::o;21596:191::-;21636:3;21655:20;21673:1;21655:20;:::i;:::-;21650:25;;21689:20;21707:1;21689:20;:::i;:::-;21684:25;;21732:1;21729;21725:9;21718:16;;21753:3;21750:1;21747:10;21744:36;;;21760:18;;:::i;:::-;21744:36;21596:191;;;;:::o;21793:181::-;21933:33;21929:1;21921:6;21917:14;21910:57;21793:181;:::o;21980:366::-;22122:3;22143:67;22207:2;22202:3;22143:67;:::i;:::-;22136:74;;22219:93;22308:3;22219:93;:::i;:::-;22337:2;22332:3;22328:12;22321:19;;21980:366;;;:::o;22352:419::-;22518:4;22556:2;22545:9;22541:18;22533:26;;22605:9;22599:4;22595:20;22591:1;22580:9;22576:17;22569:47;22633:131;22759:4;22633:131;:::i;:::-;22625:139;;22352:419;;;:::o;22777:194::-;22817:4;22837:20;22855:1;22837:20;:::i;:::-;22832:25;;22871:20;22889:1;22871:20;:::i;:::-;22866:25;;22915:1;22912;22908:9;22900:17;;22939:1;22933:4;22930:11;22927:37;;;22944:18;;:::i;:::-;22927:37;22777:194;;;;:::o;22977:177::-;23117:29;23113:1;23105:6;23101:14;23094:53;22977:177;:::o;23160:366::-;23302:3;23323:67;23387:2;23382:3;23323:67;:::i;:::-;23316:74;;23399:93;23488:3;23399:93;:::i;:::-;23517:2;23512:3;23508:12;23501:19;;23160:366;;;:::o;23532:419::-;23698:4;23736:2;23725:9;23721:18;23713:26;;23785:9;23779:4;23775:20;23771:1;23760:9;23756:17;23749:47;23813:131;23939:4;23813:131;:::i;:::-;23805:139;;23532:419;;;:::o;23957:410::-;23997:7;24020:20;24038:1;24020:20;:::i;:::-;24015:25;;24054:20;24072:1;24054:20;:::i;:::-;24049:25;;24109:1;24106;24102:9;24131:30;24149:11;24131:30;:::i;:::-;24120:41;;24310:1;24301:7;24297:15;24294:1;24291:22;24271:1;24264:9;24244:83;24221:139;;24340:18;;:::i;:::-;24221:139;24005:362;23957:410;;;;:::o;24373:180::-;24421:77;24418:1;24411:88;24518:4;24515:1;24508:15;24542:4;24539:1;24532:15;24559:185;24599:1;24616:20;24634:1;24616:20;:::i;:::-;24611:25;;24650:20;24668:1;24650:20;:::i;:::-;24645:25;;24689:1;24679:35;;24694:18;;:::i;:::-;24679:35;24736:1;24733;24729:9;24724:14;;24559:185;;;;:::o;24750:332::-;24871:4;24909:2;24898:9;24894:18;24886:26;;24922:71;24990:1;24979:9;24975:17;24966:6;24922:71;:::i;:::-;25003:72;25071:2;25060:9;25056:18;25047:6;25003:72;:::i;:::-;24750:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1948200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"REWARD_MANAGER()": "348",
								"addRewardSchedule(uint256,uint256,uint256,address)": "infinite",
								"balanceOf(address)": "2874",
								"claimRewards()": "infinite",
								"currentScheduleId()": "2536",
								"earned(address)": "infinite",
								"getActiveSchedules()": "7000",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3144",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardSchedules(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"supportsInterface(bytes4)": "763",
								"totalStaked()": "2521",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_earnedPerSchedule(address,uint256)": "infinite",
								"_sendReward(address,address,uint256)": "infinite",
								"_updateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1259,
									"end": 1538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1354,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1355,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1355,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1355,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1355,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1355,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1320,
									"end": 1381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1320,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1427,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1478,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1460,
									"end": 1478,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1480,
									"end": 1485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1449,
									"end": 1459,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1449,
									"end": 1459,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1449,
									"end": 1486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 445,
									"end": 472,
									"name": "PUSH",
									"source": 8,
									"value": "6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE"
								},
								{
									"begin": 1524,
									"end": 1529,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1497,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1507,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1442,
									"end": 1453,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1474,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1464,
									"end": 1483,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1520,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1514,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1521,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1704,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1533,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1673,
									"end": 1696,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C6964207374616B696E6720746F6B656E0000000000000000000000"
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1667,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1671,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1650,
									"end": 1697,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1533,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 2076,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1710,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1852,
									"end": 1855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1873,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1937,
									"end": 1939,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1932,
									"end": 1935,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1873,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1940,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1873,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 1940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1866,
									"end": 1940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2038,
									"end": 2041,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1949,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 2042,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1949,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2069,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2062,
									"end": 2065,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2070,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 2076,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 2076,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 2076,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 2076,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2501,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2082,
									"end": 2501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2288,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2284,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2335,
									"end": 2344,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2325,
									"end": 2345,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2310,
									"end": 2319,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2346,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2363,
									"end": 2494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2489,
									"end": 2493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2363,
									"end": 2494,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 2363,
									"end": 2494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2363,
									"end": 2494,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2363,
									"end": 2494,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2494,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2494,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2501,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2501,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2501,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2082,
									"end": 2501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "931"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 7135,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004a0b4bd7a4c667a33618748745d0ef84ee37ebf247e825679e1e4c97118385064736f6c63430008180033",
									".code": [
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "5932FDBA"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "E075D82C"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "5932FDBA"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "72F702F3"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "817B1CD2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "85ECDD93"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "372500AB"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "8CC262"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "B35A4B0"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "1C1121C5"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 304,
											"end": 7135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3628,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3628,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3628,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6550,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 829,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 829,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 829,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2075,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2075,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4681,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 404,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 404,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6333,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6333,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6333,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 697,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 697,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6451,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6451,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 893,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 893,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1605,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1605,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2666,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2666,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3713,
											"end": 3726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3728,
											"end": 3750,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3790,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3809,
											"end": 3816,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3790,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3820,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3790,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3780,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3752,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3752,
											"end": 3755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6630,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6663,
											"end": 6676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6700,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6683,
											"end": 6700,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6700,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6759,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6726,
											"end": 6770,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6722,
											"end": 6814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6791,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6814,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6722,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6702,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6837,
											"end": 6860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6882,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6863,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6837,
											"end": 6883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6837,
											"end": 6883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6927,
											"end": 6936,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6927,
											"end": 6940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 6940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6964,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6947,
											"end": 6964,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6964,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7005,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7034,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6986,
											"end": 7090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7062,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 7055,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 7090,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6986,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6966,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 7101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7124,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 7132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 886,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 829,
											"end": 886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2160,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2142,
											"end": 2183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2142,
											"end": 2183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2222,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2233,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2194,
											"end": 2258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2194,
											"end": 2258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2294,
											"end": 2304,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2279,
											"end": 2305,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2279,
											"end": 2305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2348,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2331,
											"end": 2343,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2331,
											"end": 2347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2331,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2316,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2416,
											"end": 2422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2410,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2411,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2390,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2386,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2387,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "931"
										},
										{
											"begin": 2459,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2459,
											"end": 2480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2481,
											"end": 2491,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2459,
											"end": 2500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2459,
											"end": 2500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2459,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2511,
											"end": 2546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2511,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2582,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2584,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2562,
											"end": 2591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2591,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4681,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4738,
											"end": 4764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4753,
											"end": 4763,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4738,
											"end": 4764,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4738,
											"end": 4764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4825,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4845,
											"end": 4862,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4862,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4935,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4936,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 4991,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4992,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 4994,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4995,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5025,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5010,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5035,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5035,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5027,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5010,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5135,
											"end": 5141,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5115,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5107,
											"end": 5130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5107,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5107,
											"end": 5142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5167,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5107,
											"end": 5167,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5081,
											"end": 5215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5081,
											"end": 5215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5267,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5268,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5270,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5271,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5344,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5324,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5316,
											"end": 5339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5316,
											"end": 5343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5316,
											"end": 5351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5290,
											"end": 5313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5351,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5351,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5392,
											"end": 5400,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5392,
											"end": 5413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5425,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5427,
											"end": 5433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5380,
											"end": 5434,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5380,
											"end": 5434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5481,
											"end": 5487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5476,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5464,
											"end": 5480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5464,
											"end": 5488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5488,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 5500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 5500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4864,
											"end": 4867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4867,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4820,
											"end": 5500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5536,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5512,
											"end": 5551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5512,
											"end": 5551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5591,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F80B6D248CA65E589D3F24C7CE36E2DF22BA16BA4E7656AAD67E114ABBE971D2"
										},
										{
											"begin": 5593,
											"end": 5605,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "931"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5567,
											"end": 5629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5629,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 5637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 5637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 445,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE"
										},
										{
											"begin": 404,
											"end": 472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6390,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "931"
										},
										{
											"begin": 697,
											"end": 733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 697,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 893,
											"end": 925,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 893,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1683,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1687,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1669,
											"end": 1710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1669,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1736,
											"end": 1746,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1721,
											"end": 1747,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1747,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1721,
											"end": 1747,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1800,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1783,
											"end": 1795,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1783,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1783,
											"end": 1807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1768,
											"end": 1807,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1807,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1868,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1842,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1842,
											"end": 1875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1838,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1839,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1875,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "931"
										},
										{
											"begin": 1911,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1937,
											"end": 1947,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 1961,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1964,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1911,
											"end": 1971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1911,
											"end": 1971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1911,
											"end": 1971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1982,
											"end": 2017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1982,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2050,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2052,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2033,
											"end": 2059,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2059,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 2067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 2067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 445,
											"end": 472,
											"name": "PUSH",
											"source": 8,
											"value": "6393FA734211156FCC8C7DDA6B0650F5C731D4C838C1DB43445A149AA2F5B6FE"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2897,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2878,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2897,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2897,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2861,
											"end": 2920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2861,
											"end": 2920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2939,
											"end": 2951,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2931,
											"end": 2972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2931,
											"end": 2972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3002,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3006,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2983,
											"end": 3032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2983,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 3110,
											"end": 3114,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3071,
											"end": 3116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3116,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3071,
											"end": 3116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3071,
											"end": 3116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3157,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3157,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3157,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3127,
											"end": 3188,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3127,
											"end": 3188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3201,
											"end": 3219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3224,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3222,
											"end": 3241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3201,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3201,
											"end": 3241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3332,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3370,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3365,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3356,
											"end": 3369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3356,
											"end": 3379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3419,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3278,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3279,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "85396969F10B93E89B84CE058BBCE90A809C86067BB94A5F0243DFE9F9868943"
										},
										{
											"begin": 3542,
											"end": 3552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3522,
											"end": 3553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3553,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 3561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2850,
											"end": 3561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3986,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4004,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4015,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4016,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 4016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 4016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4048,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4049,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4054,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4073,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4094,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 4031,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4104,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4027,
											"end": 4104,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 4096,
											"end": 4104,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4104,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 4027,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4154,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4139,
											"end": 4158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4234,
											"end": 4242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4213,
											"end": 4233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 4213,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4311,
											"end": 4324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4301,
											"end": 4305,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4285,
											"end": 4296,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4285,
											"end": 4310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4285,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4391,
											"end": 4399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4414,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4391,
											"end": 4414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4391,
											"end": 4414,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4373,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4365,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4443,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4485,
											"end": 4497,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4485,
											"end": 4497,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4469,
											"end": 4479,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4463,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4446,
											"end": 4468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4446,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4446,
											"end": 4484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4446,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4592,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4593,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4594,
											"end": 4604,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4605,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4562,
											"end": 4566,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4542,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4526,
											"end": 4546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4526,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 4526,
											"end": 4561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4526,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4526,
											"end": 4571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4526,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 4614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5704,
											"end": 5935,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5704,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5783,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5807,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5790,
											"end": 5807,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5785,
											"end": 5807,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5885,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5885,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5868,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5880,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5856,
											"end": 5884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5856,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5849,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5850,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5853,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5916,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5809,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5935,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5943,
											"end": 6266,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5943,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6081,
											"end": 6085,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6049,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6049,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 6049,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6097,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6049,
											"end": 6097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 6027,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 6027,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6185,
											"end": 6190,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 6201,
											"end": 6203,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6211,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6178,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6178,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6178,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6238,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 6223,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6223,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6016,
											"end": 6266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 6266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1760,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1611,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1753,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1766,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1838,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 1838,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1862,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 1818,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1982,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1991,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2128,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2145,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2110,
											"end": 2229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2148,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2229,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2110,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2337,
											"end": 2344,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2293,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2345,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2293,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2035,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2458,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2368,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2402,
											"end": 2409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2438,
											"end": 2451,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2545,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2706,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 2707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 2717,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2782,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 2717,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2909,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 2795,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3079,
											"end": 3093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3237,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3105,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3229,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3208,
											"end": 3230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3208,
											"end": 3230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3243,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 3338,
											"end": 3343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3320,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3344,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 3320,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3345,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 3489,
											"end": 3492,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3447,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3493,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 3447,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3529,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3655,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3542,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3839,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3893,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3839,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3909,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3909,
											"end": 3995,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 3909,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3995,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4019,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4075,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4019,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4146,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4222,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 4301,
											"end": 4304,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4286,
											"end": 4299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 4242,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4305,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 4242,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4381,
											"end": 4387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 4328,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4318,
											"end": 4388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4149,
											"end": 4163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 4114,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4669,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4643,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 4790,
											"end": 4794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4787,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 4687,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4687,
											"end": 4795,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 4687,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4808,
											"end": 4930,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4808,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4899,
											"end": 4904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4881,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4874,
											"end": 4879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4906,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 4861,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4808,
											"end": 4930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4808,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5007,
											"end": 5027,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5063,
											"end": 5068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5036,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5069,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5036,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5786,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5797,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 5946,
											"end": 5948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5935,
											"end": 5944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5878,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5950,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 5878,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 6028,
											"end": 6030,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5960,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 6032,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 5960,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6110,
											"end": 6112,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6108,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6086,
											"end": 6092,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 6042,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6114,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 6042,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6168,
											"end": 6174,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 6124,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6197,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 6124,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 6204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6287,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 6210,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6247,
											"end": 6254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 6366,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6391,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6512,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6548,
											"end": 6553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6521,
											"end": 6554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6554,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 6521,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6672,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6645,
											"end": 6677,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6642,
											"end": 6761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6680,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6680,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6759,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 6680,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6761,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6642,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 6870,
											"end": 6877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6846,
											"end": 6868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6825,
											"end": 6878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6878,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 6825,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6566,
											"end": 6895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 7019,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 6901,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 6988,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7012,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 6988,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 7019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 7019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7122,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7145,
											"end": 7154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7141,
											"end": 7159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7133,
											"end": 7159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7133,
											"end": 7159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7222,
											"end": 7239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7169,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7240,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 7169,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7375,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7364,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7353,
											"end": 7376,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7381,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 7384,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7574,
											"end": 7581,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7529,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7582,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 7702,
											"end": 7709,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7657,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7793,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7733,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7941,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7799,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 7900,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 7927,
											"end": 7932,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7909,
											"end": 7933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7900,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7934,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 7900,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7882,
											"end": 7935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7935,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 7882,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7941,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8073,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7947,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 8061,
											"end": 8066,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 8030,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 8030,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8219,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8079,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8143,
											"end": 8152,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 8207,
											"end": 8212,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8176,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 8176,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8176,
											"end": 8213,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 8176,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8384,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8225,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 8371,
											"end": 8376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 8326,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8377,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 8326,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8535,
											"end": 8537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8524,
											"end": 8533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8512,
											"end": 8538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8512,
											"end": 8538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8615,
											"end": 8632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8612,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8548,
											"end": 8633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8633,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 8548,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8740,
											"end": 8746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8808,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8791,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8780,
											"end": 8803,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8776,
											"end": 8809,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8893,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 8773,
											"end": 8893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 8812,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8812,
											"end": 8891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 8891,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 8812,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8893,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 8773,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 8933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 9002,
											"end": 9009,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8957,
											"end": 9010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 8957,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 9010,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 9010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 9020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9085,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 9130,
											"end": 9137,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9110,
											"end": 9119,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9085,
											"end": 9138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9085,
											"end": 9138,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 9085,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9075,
											"end": 9138,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9075,
											"end": 9138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9030,
											"end": 9148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 9258,
											"end": 9265,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9255,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9213,
											"end": 9266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 9213,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9266,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9341,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 9386,
											"end": 9393,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9362,
											"end": 9384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9341,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9394,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 9341,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9417,
											"end": 9597,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9417,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9465,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9462,
											"end": 9463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9552,
											"end": 9567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9583,
											"end": 9584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9591,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9836,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 9603,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 9683,
											"end": 9688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9665,
											"end": 9689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9689,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 9665,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9711,
											"end": 9777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9704,
											"end": 9709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9701,
											"end": 9778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 9698,
											"end": 9801,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9781,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9801,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 9698,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9828,
											"end": 9829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9821,
											"end": 9826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9836,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9842,
											"end": 10022,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9842,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9967,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9984,
											"end": 9985,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 9992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10015,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10016,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10028,
											"end": 10208,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10028,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10076,
											"end": 10153,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10154,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10173,
											"end": 10177,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10163,
											"end": 10178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10201,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10187,
											"end": 10202,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10376,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10367,
											"end": 10370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10363,
											"end": 10377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10348,
											"end": 10377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10348,
											"end": 10377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10557,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10389,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10549,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10517,
											"end": 10523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10929,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 10563,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 10708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 10790,
											"end": 10792,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10785,
											"end": 10788,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 10726,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10793,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 10726,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10802,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 10891,
											"end": 10894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10802,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10802,
											"end": 10895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10802,
											"end": 10895,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 10802,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10920,
											"end": 10922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10915,
											"end": 10918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 10923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 10923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11354,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 10935,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11101,
											"end": 11105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11128,
											"end": 11137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11188,
											"end": 11197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11182,
											"end": 11186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11178,
											"end": 11198,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11174,
											"end": 11175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 11342,
											"end": 11346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 11216,
											"end": 11347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11347,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 11216,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11208,
											"end": 11347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11208,
											"end": 11347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10935,
											"end": 11354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11360,
											"end": 11530,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11360,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11500,
											"end": 11522,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11360,
											"end": 11530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11360,
											"end": 11530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11902,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 11536,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11678,
											"end": 11681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11699,
											"end": 11766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11699,
											"end": 11766,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 11699,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11692,
											"end": 11766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11692,
											"end": 11766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11775,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 11864,
											"end": 11867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11775,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 11775,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11775,
											"end": 11868,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 11775,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11888,
											"end": 11891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11884,
											"end": 11896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12327,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11908,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12074,
											"end": 12078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12089,
											"end": 12115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12089,
											"end": 12115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12161,
											"end": 12170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12155,
											"end": 12159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12145,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12132,
											"end": 12149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12125,
											"end": 12172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 12315,
											"end": 12319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 12189,
											"end": 12320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12320,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 12189,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12181,
											"end": 12320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11908,
											"end": 12327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12458,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12492,
											"end": 12494,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12481,
											"end": 12490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12477,
											"end": 12495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12469,
											"end": 12495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12469,
											"end": 12495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12555,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12505,
											"end": 12576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 12505,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 12654,
											"end": 12656,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12643,
											"end": 12652,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 12586,
											"end": 12658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12658,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 12586,
											"end": 12658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12671,
											"end": 12787,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 12671,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 12756,
											"end": 12761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12741,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12741,
											"end": 12762,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 12741,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12734,
											"end": 12739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12763,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 12721,
											"end": 12781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12767,
											"end": 12779,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 12781,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 12721,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12671,
											"end": 12787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12671,
											"end": 12787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12847,
											"end": 12852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12878,
											"end": 12884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12872,
											"end": 12885,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12863,
											"end": 12885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12863,
											"end": 12885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12894,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 12918,
											"end": 12923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12894,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 12894,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12894,
											"end": 12924,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 12894,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12793,
											"end": 12930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13040,
											"end": 13049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13031,
											"end": 13038,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13027,
											"end": 13050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13023,
											"end": 13055,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13020,
											"end": 13139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13020,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 13020,
											"end": 13139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 13058,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 13058,
											"end": 13137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13137,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 13058,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13020,
											"end": 13139,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 13020,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13178,
											"end": 13179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 13256,
											"end": 13263,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13247,
											"end": 13253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13236,
											"end": 13245,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13232,
											"end": 13254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13203,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13203,
											"end": 13264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13203,
											"end": 13264,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 13203,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13193,
											"end": 13264,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13193,
											"end": 13264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13149,
											"end": 13274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12936,
											"end": 13281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13287,
											"end": 13452,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13287,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13427,
											"end": 13444,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13404,
											"end": 13445,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13287,
											"end": 13452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13287,
											"end": 13452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13824,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 13458,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13600,
											"end": 13603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13621,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13685,
											"end": 13687,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13680,
											"end": 13683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13621,
											"end": 13688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 13621,
											"end": 13688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13621,
											"end": 13688,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13621,
											"end": 13688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 13786,
											"end": 13789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13697,
											"end": 13790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 13697,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13815,
											"end": 13817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13810,
											"end": 13813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13806,
											"end": 13818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13458,
											"end": 13824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 14249,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 13830,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13996,
											"end": 14000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14036,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14011,
											"end": 14037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14011,
											"end": 14037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14083,
											"end": 14092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14077,
											"end": 14081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14073,
											"end": 14093,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14058,
											"end": 14067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14047,
											"end": 14094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14111,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 14237,
											"end": 14241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14111,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 14111,
											"end": 14242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14111,
											"end": 14242,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 14111,
											"end": 14242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14103,
											"end": 14242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 14249,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 14249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 14249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 14249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14255,
											"end": 14417,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14255,
											"end": 14417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14395,
											"end": 14409,
											"name": "PUSH",
											"source": 9,
											"value": "4F76657220636C61696D65640000000000000000000000000000000000000000"
										},
										{
											"begin": 14391,
											"end": 14392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14379,
											"end": 14393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14372,
											"end": 14410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14255,
											"end": 14417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14255,
											"end": 14417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14789,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 14423,
											"end": 14789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14565,
											"end": 14568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 14650,
											"end": 14652,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 14645,
											"end": 14648,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14586,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14586,
											"end": 14653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14586,
											"end": 14653,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 14586,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14579,
											"end": 14653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14579,
											"end": 14653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14662,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 14751,
											"end": 14754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14662,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14662,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14662,
											"end": 14755,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 14662,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14780,
											"end": 14782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14771,
											"end": 14783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14764,
											"end": 14783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 15214,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14795,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14988,
											"end": 14997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 15002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14976,
											"end": 15002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14976,
											"end": 15002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15048,
											"end": 15057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15023,
											"end": 15032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15059,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15076,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 15202,
											"end": 15206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15076,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15076,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15076,
											"end": 15207,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 15076,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15068,
											"end": 15207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15068,
											"end": 15207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 15214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 15214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 15214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14795,
											"end": 15214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15220,
											"end": 15380,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 15220,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15360,
											"end": 15372,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F207265776172647300000000000000000000000000000000000000000000"
										},
										{
											"begin": 15356,
											"end": 15357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15344,
											"end": 15358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15337,
											"end": 15373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15220,
											"end": 15380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15220,
											"end": 15380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15752,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 15386,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15528,
											"end": 15531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15549,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 15613,
											"end": 15615,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 15608,
											"end": 15611,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 15549,
											"end": 15616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15616,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 15549,
											"end": 15616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15542,
											"end": 15616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15542,
											"end": 15616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15625,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 15714,
											"end": 15717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15625,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 15625,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15625,
											"end": 15718,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 15625,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15743,
											"end": 15745,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15738,
											"end": 15741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15734,
											"end": 15746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15727,
											"end": 15746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15727,
											"end": 15746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15758,
											"end": 16177,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 15758,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 15964,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15951,
											"end": 15960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15947,
											"end": 15965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16011,
											"end": 16020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16005,
											"end": 16009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16001,
											"end": 16021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15997,
											"end": 15998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15995,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15982,
											"end": 15999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15975,
											"end": 16022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 16165,
											"end": 16169,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 16039,
											"end": 16170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16170,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 16039,
											"end": 16170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15758,
											"end": 16177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15758,
											"end": 16177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15758,
											"end": 16177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15758,
											"end": 16177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16304,
											"end": 16308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16331,
											"end": 16340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16327,
											"end": 16345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16319,
											"end": 16345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16319,
											"end": 16345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16355,
											"end": 16426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 16423,
											"end": 16424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16412,
											"end": 16421,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16408,
											"end": 16425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16399,
											"end": 16405,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16355,
											"end": 16426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 16355,
											"end": 16426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16355,
											"end": 16426,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 16355,
											"end": 16426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 16504,
											"end": 16506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16493,
											"end": 16502,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16489,
											"end": 16507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16480,
											"end": 16486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 16436,
											"end": 16508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16508,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 16436,
											"end": 16508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16670,
											"end": 16674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16708,
											"end": 16710,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16697,
											"end": 16706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16693,
											"end": 16711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16685,
											"end": 16711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16685,
											"end": 16711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16721,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 16789,
											"end": 16790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16778,
											"end": 16787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16774,
											"end": 16791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16765,
											"end": 16771,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16721,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 16721,
											"end": 16792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16721,
											"end": 16792,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 16721,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 16870,
											"end": 16872,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16859,
											"end": 16868,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16855,
											"end": 16873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16846,
											"end": 16852,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 16802,
											"end": 16874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 16802,
											"end": 16874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16884,
											"end": 16956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 16952,
											"end": 16954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16941,
											"end": 16950,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16937,
											"end": 16955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16928,
											"end": 16934,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16884,
											"end": 16956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 16884,
											"end": 16956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16884,
											"end": 16956,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 16884,
											"end": 16956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16521,
											"end": 16963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16969,
											"end": 17137,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 16969,
											"end": 17137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17109,
											"end": 17129,
											"name": "PUSH",
											"source": 9,
											"value": "53746172742074696D6520696E20706173740000000000000000000000000000"
										},
										{
											"begin": 17105,
											"end": 17106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17093,
											"end": 17107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17086,
											"end": 17130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16969,
											"end": 17137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16969,
											"end": 17137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17143,
											"end": 17509,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 17143,
											"end": 17509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17285,
											"end": 17288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17306,
											"end": 17373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 17370,
											"end": 17372,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 17365,
											"end": 17368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17306,
											"end": 17373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 17306,
											"end": 17373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17306,
											"end": 17373,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 17306,
											"end": 17373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17299,
											"end": 17373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17299,
											"end": 17373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 17471,
											"end": 17474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 17382,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17382,
											"end": 17475,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 17382,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17500,
											"end": 17502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17495,
											"end": 17498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17491,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17484,
											"end": 17503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17484,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17143,
											"end": 17509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17143,
											"end": 17509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17143,
											"end": 17509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17143,
											"end": 17509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17934,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 17515,
											"end": 17934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17681,
											"end": 17685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17719,
											"end": 17721,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17708,
											"end": 17717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17704,
											"end": 17722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17696,
											"end": 17722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17696,
											"end": 17722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17768,
											"end": 17777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17762,
											"end": 17766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 17778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17754,
											"end": 17755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17743,
											"end": 17752,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17739,
											"end": 17756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17732,
											"end": 17779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17796,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 17922,
											"end": 17926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17796,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 17796,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17796,
											"end": 17927,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 17796,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17788,
											"end": 17927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17788,
											"end": 17927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17515,
											"end": 17934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 18106,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 17940,
											"end": 18106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18080,
											"end": 18098,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C6964206475726174696F6E00000000000000000000000000000000"
										},
										{
											"begin": 18076,
											"end": 18077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18057,
											"end": 18099,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 18106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 18106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18112,
											"end": 18478,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 18112,
											"end": 18478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18254,
											"end": 18257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18275,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 18339,
											"end": 18341,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 18334,
											"end": 18337,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18275,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 18275,
											"end": 18342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18275,
											"end": 18342,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 18275,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18268,
											"end": 18342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18268,
											"end": 18342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18351,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 18440,
											"end": 18443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18351,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 18351,
											"end": 18444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18351,
											"end": 18444,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 18351,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18460,
											"end": 18472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18453,
											"end": 18472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18453,
											"end": 18472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18112,
											"end": 18478,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18112,
											"end": 18478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18112,
											"end": 18478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18112,
											"end": 18478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18484,
											"end": 18903,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 18484,
											"end": 18903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18650,
											"end": 18654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18688,
											"end": 18690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18677,
											"end": 18686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18673,
											"end": 18691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18665,
											"end": 18691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18731,
											"end": 18735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18747,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18723,
											"end": 18724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18708,
											"end": 18725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18701,
											"end": 18748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18765,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 18891,
											"end": 18895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18765,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 18765,
											"end": 18896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18765,
											"end": 18896,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 18765,
											"end": 18896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18757,
											"end": 18896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18757,
											"end": 18896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18484,
											"end": 18903,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18484,
											"end": 18903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18484,
											"end": 18903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18484,
											"end": 18903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 19080,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 18909,
											"end": 19080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19049,
											"end": 19072,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C69642072657761726420616D6F756E740000000000000000000000"
										},
										{
											"begin": 19045,
											"end": 19046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19037,
											"end": 19043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19033,
											"end": 19047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 19080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 19080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 19313,
											"end": 19315,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 19308,
											"end": 19311,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 19249,
											"end": 19316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 19249,
											"end": 19316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19242,
											"end": 19316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 19414,
											"end": 19417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 19325,
											"end": 19418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 19325,
											"end": 19418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19443,
											"end": 19445,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19438,
											"end": 19441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19434,
											"end": 19446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19427,
											"end": 19446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19427,
											"end": 19446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19086,
											"end": 19452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19624,
											"end": 19628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19664,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19651,
											"end": 19660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19647,
											"end": 19665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 19665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 19665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19711,
											"end": 19720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19705,
											"end": 19709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19701,
											"end": 19721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19697,
											"end": 19698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19686,
											"end": 19695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19682,
											"end": 19699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19675,
											"end": 19722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 19865,
											"end": 19869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 19739,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 19739,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19731,
											"end": 19870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19731,
											"end": 19870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19458,
											"end": 19877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19976,
											"end": 19980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20014,
											"end": 20016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20003,
											"end": 20012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19999,
											"end": 20017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19991,
											"end": 20017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19991,
											"end": 20017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 20095,
											"end": 20096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20084,
											"end": 20093,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20080,
											"end": 20097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20071,
											"end": 20077,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 20027,
											"end": 20098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20027,
											"end": 20098,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 20027,
											"end": 20098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19883,
											"end": 20105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20199,
											"end": 20205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20193,
											"end": 20206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 20242,
											"end": 20247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 20215,
											"end": 20248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20248,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 20215,
											"end": 20248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20111,
											"end": 20254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20330,
											"end": 20336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20379,
											"end": 20381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20367,
											"end": 20376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20358,
											"end": 20365,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20354,
											"end": 20377,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20350,
											"end": 20382,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20466,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 20347,
											"end": 20466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20385,
											"end": 20464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 20385,
											"end": 20464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 20385,
											"end": 20464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20385,
											"end": 20464,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 20385,
											"end": 20464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20466,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 20347,
											"end": 20466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20505,
											"end": 20506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20530,
											"end": 20594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 20586,
											"end": 20593,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20577,
											"end": 20583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20566,
											"end": 20575,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20562,
											"end": 20584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20530,
											"end": 20594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 20530,
											"end": 20594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20530,
											"end": 20594,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 20530,
											"end": 20594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20520,
											"end": 20594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20520,
											"end": 20594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20476,
											"end": 20604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20617,
											"end": 20793,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 20617,
											"end": 20793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20757,
											"end": 20785,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742072657761726420746F6B656E73000000000000"
										},
										{
											"begin": 20753,
											"end": 20754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20745,
											"end": 20751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20741,
											"end": 20755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20734,
											"end": 20786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20617,
											"end": 20793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20617,
											"end": 20793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20799,
											"end": 21165,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 20799,
											"end": 21165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20941,
											"end": 20944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20962,
											"end": 21029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 21026,
											"end": 21028,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 21021,
											"end": 21024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20962,
											"end": 21029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 20962,
											"end": 21029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20962,
											"end": 21029,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 20962,
											"end": 21029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20955,
											"end": 21029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20955,
											"end": 21029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21038,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 21127,
											"end": 21130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21038,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 21038,
											"end": 21131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21038,
											"end": 21131,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 21038,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21156,
											"end": 21158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21151,
											"end": 21154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21147,
											"end": 21159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21140,
											"end": 21159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20799,
											"end": 21165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20799,
											"end": 21165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20799,
											"end": 21165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20799,
											"end": 21165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21590,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 21171,
											"end": 21590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21337,
											"end": 21341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21375,
											"end": 21377,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21364,
											"end": 21373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21360,
											"end": 21378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21352,
											"end": 21378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21352,
											"end": 21378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21424,
											"end": 21433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21418,
											"end": 21422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21414,
											"end": 21434,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21410,
											"end": 21411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21399,
											"end": 21408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21395,
											"end": 21412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21388,
											"end": 21435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21452,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 21578,
											"end": 21582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21452,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 21452,
											"end": 21583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21452,
											"end": 21583,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 21452,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21636,
											"end": 21639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21655,
											"end": 21675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 21673,
											"end": 21674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21655,
											"end": 21675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 21655,
											"end": 21675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21655,
											"end": 21675,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 21655,
											"end": 21675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21650,
											"end": 21675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21650,
											"end": 21675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21689,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 21707,
											"end": 21708,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21689,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 21689,
											"end": 21709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21689,
											"end": 21709,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 21689,
											"end": 21709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21684,
											"end": 21709,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21684,
											"end": 21709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21732,
											"end": 21733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21729,
											"end": 21730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21725,
											"end": 21734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21718,
											"end": 21734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21718,
											"end": 21734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21753,
											"end": 21756,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21750,
											"end": 21751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21747,
											"end": 21757,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 21744,
											"end": 21780,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 21744,
											"end": 21780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 21744,
											"end": 21780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21760,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 21760,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 21760,
											"end": 21778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21760,
											"end": 21778,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 21760,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21744,
											"end": 21780,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 21744,
											"end": 21780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21596,
											"end": 21787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21793,
											"end": 21974,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 21793,
											"end": 21974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21933,
											"end": 21966,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 21929,
											"end": 21930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21921,
											"end": 21927,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21917,
											"end": 21931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21910,
											"end": 21967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21793,
											"end": 21974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21793,
											"end": 21974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 22346,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 21980,
											"end": 22346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22122,
											"end": 22125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22143,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 22207,
											"end": 22209,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 22202,
											"end": 22205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22143,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 22143,
											"end": 22210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22143,
											"end": 22210,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 22143,
											"end": 22210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22136,
											"end": 22210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22136,
											"end": 22210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22219,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 22308,
											"end": 22311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22219,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 22219,
											"end": 22312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22219,
											"end": 22312,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 22219,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22337,
											"end": 22339,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22332,
											"end": 22335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22328,
											"end": 22340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22321,
											"end": 22340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22321,
											"end": 22340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 22346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 22346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 22346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22352,
											"end": 22771,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 22352,
											"end": 22771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22556,
											"end": 22558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22545,
											"end": 22554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22541,
											"end": 22559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22533,
											"end": 22559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22533,
											"end": 22559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22605,
											"end": 22614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22599,
											"end": 22603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22595,
											"end": 22615,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22591,
											"end": 22592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22580,
											"end": 22589,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22576,
											"end": 22593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22569,
											"end": 22616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22633,
											"end": 22764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 22759,
											"end": 22763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22633,
											"end": 22764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 22633,
											"end": 22764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22633,
											"end": 22764,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 22633,
											"end": 22764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22625,
											"end": 22764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22625,
											"end": 22764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22352,
											"end": 22771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22352,
											"end": 22771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22352,
											"end": 22771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22352,
											"end": 22771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22817,
											"end": 22821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22837,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 22855,
											"end": 22856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22837,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 22837,
											"end": 22857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22837,
											"end": 22857,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 22837,
											"end": 22857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22832,
											"end": 22857,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22832,
											"end": 22857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22871,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 22889,
											"end": 22890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22871,
											"end": 22891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 22871,
											"end": 22891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22871,
											"end": 22891,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 22871,
											"end": 22891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22866,
											"end": 22891,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22866,
											"end": 22891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22915,
											"end": 22916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22912,
											"end": 22913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22908,
											"end": 22917,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22900,
											"end": 22917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22900,
											"end": 22917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22939,
											"end": 22940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22933,
											"end": 22937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22930,
											"end": 22941,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 22927,
											"end": 22964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22927,
											"end": 22964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 22927,
											"end": 22964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 22944,
											"end": 22962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 22944,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22927,
											"end": 22964,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 22927,
											"end": 22964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22777,
											"end": 22971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22977,
											"end": 23154,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 22977,
											"end": 23154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23117,
											"end": 23146,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E74207265776172642062616C616E63650000000000"
										},
										{
											"begin": 23113,
											"end": 23114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23105,
											"end": 23111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23101,
											"end": 23115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23094,
											"end": 23147,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22977,
											"end": 23154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22977,
											"end": 23154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23160,
											"end": 23526,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 23160,
											"end": 23526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23302,
											"end": 23305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23323,
											"end": 23390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 23387,
											"end": 23389,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 23382,
											"end": 23385,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23323,
											"end": 23390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 23323,
											"end": 23390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23323,
											"end": 23390,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 23323,
											"end": 23390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23316,
											"end": 23390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23316,
											"end": 23390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23399,
											"end": 23492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 23488,
											"end": 23491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23399,
											"end": 23492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 23399,
											"end": 23492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23399,
											"end": 23492,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 23399,
											"end": 23492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23517,
											"end": 23519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23512,
											"end": 23515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23508,
											"end": 23520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23501,
											"end": 23520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23501,
											"end": 23520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23160,
											"end": 23526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23160,
											"end": 23526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23160,
											"end": 23526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23160,
											"end": 23526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23951,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 23532,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23698,
											"end": 23702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23736,
											"end": 23738,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23725,
											"end": 23734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23721,
											"end": 23739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23713,
											"end": 23739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23713,
											"end": 23739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23785,
											"end": 23794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23779,
											"end": 23783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23775,
											"end": 23795,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23771,
											"end": 23772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23760,
											"end": 23769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23756,
											"end": 23773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23749,
											"end": 23796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23813,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 23939,
											"end": 23943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23813,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 23813,
											"end": 23944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23813,
											"end": 23944,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 23813,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23805,
											"end": 23944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23805,
											"end": 23944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23532,
											"end": 23951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23997,
											"end": 24004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24020,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 24038,
											"end": 24039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24020,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 24020,
											"end": 24040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24020,
											"end": 24040,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 24020,
											"end": 24040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24015,
											"end": 24040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24015,
											"end": 24040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24054,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 24072,
											"end": 24073,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24054,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 24054,
											"end": 24074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24054,
											"end": 24074,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 24054,
											"end": 24074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24049,
											"end": 24074,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24049,
											"end": 24074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24109,
											"end": 24110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24106,
											"end": 24107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24102,
											"end": 24111,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 24131,
											"end": 24161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 24149,
											"end": 24160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24131,
											"end": 24161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 24131,
											"end": 24161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24131,
											"end": 24161,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 24131,
											"end": 24161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24120,
											"end": 24161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24120,
											"end": 24161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24310,
											"end": 24311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24301,
											"end": 24308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24297,
											"end": 24312,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 24294,
											"end": 24295,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 24291,
											"end": 24313,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 24271,
											"end": 24272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24264,
											"end": 24273,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24244,
											"end": 24327,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 24221,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 24221,
											"end": 24360,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24340,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 24340,
											"end": 24358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 24340,
											"end": 24358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24340,
											"end": 24358,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 24340,
											"end": 24358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24221,
											"end": 24360,
											"name": "tag",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 24221,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24005,
											"end": 24367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23957,
											"end": 24367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24373,
											"end": 24553,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 24373,
											"end": 24553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24421,
											"end": 24498,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24418,
											"end": 24419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24411,
											"end": 24499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24518,
											"end": 24522,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 24515,
											"end": 24516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24508,
											"end": 24523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24542,
											"end": 24546,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 24539,
											"end": 24540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24532,
											"end": 24547,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24599,
											"end": 24600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24616,
											"end": 24636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 24634,
											"end": 24635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24616,
											"end": 24636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 24616,
											"end": 24636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24616,
											"end": 24636,
											"name": "tag",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 24616,
											"end": 24636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24611,
											"end": 24636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24611,
											"end": 24636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24650,
											"end": 24670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 24668,
											"end": 24669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24650,
											"end": 24670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 24650,
											"end": 24670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24650,
											"end": 24670,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 24650,
											"end": 24670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24645,
											"end": 24670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24645,
											"end": 24670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24689,
											"end": 24690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24679,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 24679,
											"end": 24714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 24694,
											"end": 24712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 24694,
											"end": 24712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24694,
											"end": 24712,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 24694,
											"end": 24712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24679,
											"end": 24714,
											"name": "tag",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 24679,
											"end": 24714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24736,
											"end": 24737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24733,
											"end": 24734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24729,
											"end": 24738,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 24724,
											"end": 24738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24724,
											"end": 24738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24559,
											"end": 24744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24871,
											"end": 24875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24909,
											"end": 24911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24898,
											"end": 24907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24894,
											"end": 24912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24886,
											"end": 24912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24886,
											"end": 24912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24922,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 24990,
											"end": 24991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24979,
											"end": 24988,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24975,
											"end": 24992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24966,
											"end": 24972,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24922,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 24922,
											"end": 24993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24922,
											"end": 24993,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 24922,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25003,
											"end": 25075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 25071,
											"end": 25073,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25060,
											"end": 25069,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25056,
											"end": 25074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25047,
											"end": 25053,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25003,
											"end": 25075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 25003,
											"end": 25075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25003,
											"end": 25075,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 25003,
											"end": 25075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 25082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/rewards/DynamicRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"REWARD_MANAGER()": "5932fdba",
							"addRewardSchedule(uint256,uint256,uint256,address)": "e075d82c",
							"balanceOf(address)": "70a08231",
							"claimRewards()": "372500ab",
							"currentScheduleId()": "85ecdd93",
							"earned(address)": "008cc262",
							"getActiveSchedules()": "0b35a4b0",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardSchedules(uint256)": "1c1121c5",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalStaked()": "817b1cd2",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"RewardScheduleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"name\":\"addRewardSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentScheduleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSchedules\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewards/DynamicRewards.sol\":\"DynamicRewards\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/rewards/DynamicRewards.sol\":{\"keccak256\":\"0x1d8be846de9b0f0495612de06f6e9a1740d10e216ead615d9d08a6fec1a364ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f294cf2b938d660464f2f517866ab6cc363c943b49d5c0b2707891fb7f2cd24f\",\"dweb:/ipfs/QmWvFx5aX7xwJZWjwiqXksW6EBj8YZU3GvwU5PTuiQRUpT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 389,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 933,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 937,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 942,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "rewardSchedules",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(RewardSchedule)928_storage)"
							},
							{
								"astId": 944,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "currentScheduleId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 950,
								"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
								"label": "_userAccrued",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(RewardSchedule)928_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct DynamicRewards.RewardSchedule)",
								"numberOfBytes": "32",
								"value": "t_struct(RewardSchedule)928_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RewardSchedule)928_storage": {
								"encoding": "inplace",
								"label": "struct DynamicRewards.RewardSchedule",
								"members": [
									{
										"astId": 919,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 921,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "endTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 923,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "totalRewards",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 925,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "claimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 927,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "rewardsToken",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/rewards/DynamicRewards.sol:DynamicRewards",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							551
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 552,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 551,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 576,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 575,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 575,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								575,
								587,
								378,
								551
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										574
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 574,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							443
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 387,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 389,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 443,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 403,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 408,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 413,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 419,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 443,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 443,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 438,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 443,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							521
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 446,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 455,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 464,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 521,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 521,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 521,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 521,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 521,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 521,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 522,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								455,
								464
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 529,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 528,
												"id": 531,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 551,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 538,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 537,
												"id": 540,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 551,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 546,
												"id": 548,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 551,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 552,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							575
						],
						"IERC165": [
							587
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 588,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 587,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 557,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 587,
										"src": "688:7:5"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575,
								587
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										586
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "845:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 566,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "862:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 568,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "882:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$587_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 567,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$587",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 565,
												"id": 572,
												"nodeType": "Return",
												"src": "855:47:5"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "790:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "839:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:5"
									},
									"scope": 575,
									"src": "763:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 576,
							"src": "660:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							587
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 580,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 587,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 588,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							899
						]
					},
					"id": 900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 620,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															603
														],
														"declarations": [
															{
																"constant": false,
																"id": 603,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 620,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 602,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 607,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 609,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 615,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 613,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 601,
															"id": 614,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 617,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 618,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 601,
														"id": 619,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 899,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 648,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 635,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 641,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 633,
															"id": 640,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 643,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 644,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 646,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 633,
														"id": 647,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 899,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 690,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 669,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 661,
															"id": 668,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															671
														],
														"declarations": [
															{
																"constant": false,
																"id": 671,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 690,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 670,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 675,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 673,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 676,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 677,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 679,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 685,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 661,
															"id": 684,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 687,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 688,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 661,
														"id": 689,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 899,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 718,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 704,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 711,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 703,
															"id": 710,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 713,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 714,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 716,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 703,
														"id": 717,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 899,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 746,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 732,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 739,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 737,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 731,
															"id": 738,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 741,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 742,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 744,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 731,
														"id": 745,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 899,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 759,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 761,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 899,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 899,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 789,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 787,
												"id": 791,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 899,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 804,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 802,
												"id": 806,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 899,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 818,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 819,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 821,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 899,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 846,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 836,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 837,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 839,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 835,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 841,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 834,
														"id": 845,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 899,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 871,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 861,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 864,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 860,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 866,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 868,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 859,
														"id": 870,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 899,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 896,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 886,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 889,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 885,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 891,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 892,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 893,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 884,
														"id": 895,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 899,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/rewards/DynamicRewards.sol": {
				"ast": {
					"absolutePath": "contracts/rewards/DynamicRewards.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							551
						],
						"DynamicRewards": [
							1635
						],
						"ERC165": [
							575
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							521
						],
						"ReentrancyGuard": [
							443
						],
						"SafeMath": [
							899
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 902,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 522,
							"src": "61:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 296,
							"src": "119:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 904,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 444,
							"src": "179:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 900,
							"src": "243:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 906,
										"name": "AccessControl",
										"nameLocations": [
											"331:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "331:13:8"
									},
									"id": 907,
									"nodeType": "InheritanceSpecifier",
									"src": "331:13:8"
								},
								{
									"baseName": {
										"id": 908,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"346:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "346:15:8"
									},
									"id": 909,
									"nodeType": "InheritanceSpecifier",
									"src": "346:15:8"
								}
							],
							"canonicalName": "DynamicRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1635,
							"linearizedBaseContracts": [
								1635,
								443,
								295,
								575,
								587,
								378,
								551
							],
							"name": "DynamicRewards",
							"nameLocation": "313:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 912,
									"libraryName": {
										"id": 910,
										"name": "SafeMath",
										"nameLocations": [
											"375:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "375:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "369:27:8",
									"typeName": {
										"id": 911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "5932fdba",
									"id": 917,
									"mutability": "constant",
									"name": "REWARD_MANAGER",
									"nameLocation": "428:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "404:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 913,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "404:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5245574152445f4d414e41474552",
												"id": 915,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "455:16:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe",
													"typeString": "literal_string \"REWARD_MANAGER\""
												},
												"value": "REWARD_MANAGER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6393fa734211156fcc8c7dda6b0650f5c731d4c838c1db43445a149aa2f5b6fe",
													"typeString": "literal_string \"REWARD_MANAGER\""
												}
											],
											"id": 914,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "445:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "445:27:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DynamicRewards.RewardSchedule",
									"id": 928,
									"members": [
										{
											"constant": false,
											"id": 919,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "526:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "518:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "518:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 921,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "554:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "546:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "totalRewards",
											"nameLocation": "580:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "572:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "572:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "claimedRewards",
											"nameLocation": "611:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "603:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "603:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 927,
											"mutability": "mutable",
											"name": "rewardsToken",
											"nameLocation": "644:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 928,
											"src": "636:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 926,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "636:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RewardSchedule",
									"nameLocation": "492:14:8",
									"nodeType": "StructDefinition",
									"scope": 1635,
									"src": "485:204:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 931,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "721:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "697:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$521",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 930,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 929,
											"name": "IERC20",
											"nameLocations": [
												"697:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 521,
											"src": "697:6:8"
										},
										"referencedDeclaration": 521,
										"src": "697:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$521",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 933,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "756:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "740:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "811:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "775:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 936,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "775:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 935,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1c1121c5",
									"id": 942,
									"mutability": "mutable",
									"name": "rewardSchedules",
									"nameLocation": "871:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "829:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
										"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule)"
									},
									"typeName": {
										"id": 941,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 938,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "829:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
											"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "RewardSchedule",
												"nameLocations": [
													"848:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 928,
												"src": "848:14:8"
											},
											"referencedDeclaration": 928,
											"src": "848:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
												"typeString": "struct DynamicRewards.RewardSchedule"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85ecdd93",
									"id": 944,
									"mutability": "mutable",
									"name": "currentScheduleId",
									"nameLocation": "908:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "893:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "893:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 950,
									"mutability": "mutable",
									"name": "_userAccrued",
									"nameLocation": "988:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1635,
									"src": "932:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 949,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 945,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "940:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "932:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 948,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "959:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "951:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "970:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 956,
									"name": "Staked",
									"nameLocation": "1015:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1038:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1022:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1052:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1044:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:38:8"
									},
									"src": "1009:51:8"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 962,
									"name": "Withdrawn",
									"nameLocation": "1072:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1098:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1082:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1112:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1104:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:38:8"
									},
									"src": "1066:54:8"
								},
								{
									"anonymous": false,
									"eventSelector": "85396969f10b93e89b84ce058bbce90a809c86067bb94a5f0243dfe9f9868943",
									"id": 966,
									"name": "RewardScheduleAdded",
									"nameLocation": "1132:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "1160:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "1152:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:20:8"
									},
									"src": "1126:46:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f80b6d248ca65e589d3f24c7ce36e2df22ba16ba4e7656aad67e114abbe971d2",
									"id": 974,
									"name": "RewardClaimed",
									"nameLocation": "1184:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1214:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1198:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1228:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1220:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:53:8"
									},
									"src": "1178:73:8"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1309:229:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "1328:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1353:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1345:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1345:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1328:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1357:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															},
															"value": "Invalid staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1320:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "1320:61:8"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1392:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 993,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "1414:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 992,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1407:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1407:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$521",
															"typeString": "contract IERC20"
														}
													},
													"src": "1392:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$521",
														"typeString": "contract IERC20"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "1392:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 998,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1460:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 999,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1480:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 997,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1449:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1449:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1449:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "REWARD_MANAGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "1508:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1004,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1524:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1002,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1497:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "1497:33:8"
											}
										]
									},
									"id": 1008,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1279:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1271:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1302:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1294:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:38:8"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:8"
									},
									"scope": 1635,
									"src": "1259:279:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1658:409:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1677:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1686:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1677:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1689:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1736:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1740:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1736:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1022,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1721:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1721:26:8"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1768:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1030,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1800:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1028,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "1783:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1796:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 763,
															"src": "1783:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1783:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1768:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1768:39:8"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "1818:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1037,
														"indexExpression": {
															"expression": {
																"id": 1035,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1828:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1832:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1828:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1818:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1043,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1868:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1038,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "1842:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1041,
																"indexExpression": {
																	"expression": {
																		"id": 1039,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1852:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1856:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1852:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1842:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1864:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 763,
															"src": "1842:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1842:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1818:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1818:57:8"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1901:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "1896:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1047,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1896:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1937:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1941:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1937:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1055,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1957:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																		"typeString": "contract DynamicRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																		"typeString": "contract DynamicRewards"
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1949:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1949:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1949:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1964:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1049,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "1911:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1924:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 520,
														"src": "1911:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1896:75:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1990:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1999:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1982:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2040:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2044:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2040:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2052:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1065,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2033:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2033:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "2028:31:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1012,
												"name": "nonReentrant",
												"nameLocations": [
													"1645:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "1645:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1645:12:8"
										}
									],
									"name": "stake",
									"nameLocation": "1614:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1628:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1620:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:16:8"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1658:0:8"
									},
									"scope": 1635,
									"src": "1605:462:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "2131:468:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2150:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2159:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2150:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2162:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2142:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2142:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1087,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "2202:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1090,
																"indexExpression": {
																	"expression": {
																		"id": 1088,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2212:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2216:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2212:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2202:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1091,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2227:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2202:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1086,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2194:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2194:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2194:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1097,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2294:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2298:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2294:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1096,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "2279:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2279:26:8"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "2316:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1104,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2348:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1102,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "2331:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2344:3:8",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "2331:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2331:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2316:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2316:39:8"
											},
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2366:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"expression": {
																"id": 1109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2376:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2380:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2376:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2366:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1117,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2416:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1112,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "2390:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1115,
																"indexExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2400:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2404:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2400:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2390:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2412:3:8",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 778,
															"src": "2390:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2390:33:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2366:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "2366:57:8"
											},
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2449:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "2444:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1121,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2444:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2481:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2485:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2481:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "2493:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1123,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "2459:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2472:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "2459:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2459:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2444:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1131,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2519:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2528:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2511:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2511:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2572:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2576:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2572:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "2584:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2562:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "2557:34:8"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "nonReentrant",
												"nameLocations": [
													"2118:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "2118:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2118:12:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "2084:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2101:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "2093:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:16:8"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:0:8"
									},
									"scope": 1635,
									"src": "2075:524:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "2850:711:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2869:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1158,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2882:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2888:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2882:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2869:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d6520696e2070617374",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2899:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65",
																"typeString": "literal_string \"Start time in past\""
															},
															"value": "Start time in past"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfd3bc21995ba9f55ab8d54af3ffbabd536a74a790e9b16e1a9d954d5bbbae65",
																"typeString": "literal_string \"Start time in past\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2861:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2861:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1165,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2939:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2950:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2939:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206475726174696f6e",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2953:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																"typeString": "literal_string \"Invalid duration\""
															},
															"value": "Invalid duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																"typeString": "literal_string \"Invalid duration\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2931:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2931:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "2931:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "2991:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3005:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2991:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420616d6f756e74",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
																"typeString": "literal_string \"Invalid reward amount\""
															},
															"value": "Invalid reward amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
																"typeString": "literal_string \"Invalid reward amount\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2983:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2983:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "2983:49:8"
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3061:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1221,
														"src": "3053:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3053:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																		"typeString": "contract DynamicRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																		"typeString": "contract DynamicRewards"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "3078:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1180,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "3071:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3071:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3092:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 478,
														"src": "3071:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3071:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3053:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "3135:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1192,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3146:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3135:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420746f6b656e73",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3159:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
																"typeString": "literal_string \"Insufficient reward tokens\""
															},
															"value": "Insufficient reward tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feb9ed92c05bf894f55a1d03e984cee0770acd4ac6704cea1f36818e6e0544c2",
																"typeString": "literal_string \"Insufficient reward tokens\""
															}
														],
														"id": 1190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3127:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "3127:61:8"
											},
											{
												"assignments": [
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "scheduleId",
														"nameLocation": "3209:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1221,
														"src": "3201:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3201:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "3222:19:8",
													"subExpression": {
														"id": 1199,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3224:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3201:40:8"
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1202,
															"name": "rewardSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3252:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
																"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule storage ref)"
															}
														},
														"id": 1204,
														"indexExpression": {
															"id": 1203,
															"name": "scheduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3268:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3252:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
															"typeString": "struct DynamicRewards.RewardSchedule storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1206,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "3323:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1209,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "3370:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1207,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "3356:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3366:3:8",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 763,
																	"src": "3356:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3356:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1211,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3408:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3450:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1213,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3480:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1205,
															"name": "RewardSchedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3282:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RewardSchedule_$928_storage_ptr_$",
																"typeString": "type(struct DynamicRewards.RewardSchedule storage pointer)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3312:9:8",
															"3347:7:8",
															"3394:12:8",
															"3434:14:8",
															"3466:12:8"
														],
														"names": [
															"startTime",
															"endTime",
															"totalRewards",
															"claimedRewards",
															"rewardsToken"
														],
														"nodeType": "FunctionCall",
														"src": "3282:222:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardSchedule_$928_memory_ptr",
															"typeString": "struct DynamicRewards.RewardSchedule memory"
														}
													},
													"src": "3252:252:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
														"typeString": "struct DynamicRewards.RewardSchedule storage ref"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3252:252:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1218,
															"name": "scheduleId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3542:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "RewardScheduleAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3522:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "EmitStatement",
												"src": "3517:36:8"
											}
										]
									},
									"functionSelector": "e075d82c",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1153,
													"name": "REWARD_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "2834:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1152,
												"name": "onlyRole",
												"nameLocations": [
													"2825:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2825:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2825:24:8"
										}
									],
									"name": "addRewardSchedule",
									"nameLocation": "2675:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2711:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2703:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2739:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2731:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "2766:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2758:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "rewardsToken",
												"nameLocation": "2796:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "2788:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:123:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:0:8"
									},
									"scope": 1635,
									"src": "2666:895:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "3697:143:8",
										"statements": [
											{
												"body": {
													"id": 1249,
													"nodeType": "Block",
													"src": "3757:76:8",
													"statements": [
														{
															"expression": {
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1239,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "3772:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1243,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1224,
																					"src": "3809:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1244,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1230,
																					"src": "3818:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1242,
																				"name": "_earnedPerSchedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "3790:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3790:30:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1240,
																			"name": "total",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "3780:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3786:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 763,
																		"src": "3780:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3780:41:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3772:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "3772:49:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3728:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1234,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3733:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3728:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"initializationExpression": {
													"assignments": [
														1230
													],
													"declarations": [
														{
															"constant": false,
															"id": 1230,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3721:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1250,
															"src": "3713:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1229,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3713:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1232,
													"initialValue": {
														"hexValue": "31",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3725:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3713:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3752:3:8",
														"subExpression": {
															"id": 1236,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "3752:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1238,
													"nodeType": "ExpressionStatement",
													"src": "3752:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3708:125:8"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3637:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3652:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3644:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:8"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "3690:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3682:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:15:8"
									},
									"scope": 1635,
									"src": "3628:212:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "3944:670:8",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "3978:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "3955:31:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
															"typeString": "struct DynamicRewards.RewardSchedule"
														},
														"typeName": {
															"id": 1262,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1261,
																"name": "RewardSchedule",
																"nameLocations": [
																	"3955:14:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 928,
																"src": "3955:14:8"
															},
															"referencedDeclaration": 928,
															"src": "3955:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																"typeString": "struct DynamicRewards.RewardSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"baseExpression": {
														"id": 1264,
														"name": "rewardSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3989:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
															"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule storage ref)"
														}
													},
													"id": 1266,
													"indexExpression": {
														"id": 1265,
														"name": "scheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "4005:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3989:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
														"typeString": "struct DynamicRewards.RewardSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3955:61:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1268,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "4031:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1270,
															"indexExpression": {
																"id": 1269,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "4041:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4031:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4053:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4031:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1273,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4058:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4064:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4058:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1275,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4076:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4085:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "4076:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4058:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4031:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "4027:77:8",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4103:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1260,
													"id": 1280,
													"nodeType": "Return",
													"src": "4096:8:8"
												}
											},
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "4125:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4117:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4117:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1287,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4159:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4168:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "4159:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1284,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4139:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4145:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4139:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4155:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "4139:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4117:61:8"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "totalDuration",
														"nameLocation": "4197:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4189:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4189:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1296,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4234:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4243:9:8",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 919,
															"src": "4234:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1293,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4213:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4222:7:8",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 921,
															"src": "4213:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4230:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "4213:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4213:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4189:64:8"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "4272:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4264:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4264:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [
														{
															"id": 1307,
															"name": "totalDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "4311:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4301:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1302,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "4285:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4297:3:8",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 793,
																"src": "4285:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4285:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4307:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "4285:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4285:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4264:61:8"
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "availableRewards",
														"nameLocation": "4346:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4338:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4338:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1315,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4391:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4400:14:8",
															"memberName": "claimedRewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 925,
															"src": "4391:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1312,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "4365:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																	"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4374:12:8",
															"memberName": "totalRewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 923,
															"src": "4365:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4387:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "4365:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4365:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4338:77:8"
											},
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "4434:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4426:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4426:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"arguments": [
														{
															"id": 1328,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "4485:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1325,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "4469:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 1321,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "4446:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"id": 1322,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "4456:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4446:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4465:3:8",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 793,
																"src": "4446:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4446:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4481:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 808,
														"src": "4446:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4426:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1339,
																	"name": "_userAccrued",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "4572:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1341,
																"indexExpression": {
																	"id": 1340,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "4585:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4572:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1343,
															"indexExpression": {
																"id": 1342,
																"name": "scheduleId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "4594:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4572:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4562:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1333,
																			"name": "userShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "4547:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1331,
																			"name": "availableRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "4526:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4543:3:8",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 793,
																		"src": "4526:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4526:31:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4558:3:8",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 808,
																"src": "4526:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4526:41:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4568:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "4526:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4526:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1345,
												"nodeType": "Return",
												"src": "4519:87:8"
											}
										]
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_earnedPerSchedule",
									"nameLocation": "3857:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3884:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3876:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "scheduleId",
												"nameLocation": "3901:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3893:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3875:37:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3935:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:9:8"
									},
									"scope": 1635,
									"src": "3848:766:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "4727:910:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1353,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4753:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4757:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4753:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1352,
														"name": "_updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4738:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4738:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "4738:26:8"
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "totalClaimed",
														"nameLocation": "4793:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1457,
														"src": "4785:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4785:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"hexValue": "30",
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4808:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4785:24:8"
											},
											{
												"body": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4869:631:8",
													"statements": [
														{
															"assignments": [
																1373
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1373,
																	"mutability": "mutable",
																	"name": "schedule",
																	"nameLocation": "4907:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1438,
																	"src": "4884:31:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																		"typeString": "struct DynamicRewards.RewardSchedule"
																	},
																	"typeName": {
																		"id": 1372,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1371,
																			"name": "RewardSchedule",
																			"nameLocations": [
																				"4884:14:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 928,
																			"src": "4884:14:8"
																		},
																		"referencedDeclaration": 928,
																		"src": "4884:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																			"typeString": "struct DynamicRewards.RewardSchedule"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1377,
															"initialValue": {
																"baseExpression": {
																	"id": 1374,
																	"name": "rewardSchedules",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "4918:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
																		"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule storage ref)"
																	}
																},
																"id": 1376,
																"indexExpression": {
																	"id": 1375,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4934:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4918:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
																	"typeString": "struct DynamicRewards.RewardSchedule storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4884:52:8"
														},
														{
															"assignments": [
																1379
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1379,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "4959:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1438,
																	"src": "4951:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1378,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4951:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1386,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1380,
																		"name": "_userAccrued",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "4968:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1383,
																	"indexExpression": {
																		"expression": {
																			"id": 1381,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4981:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4985:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4981:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4968:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1385,
																"indexExpression": {
																	"id": 1384,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4993:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4968:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4951:44:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "5014:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5024:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5014:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1391,
															"nodeType": "IfStatement",
															"src": "5010:25:8",
															"trueBody": {
																"id": 1390,
																"nodeType": "Continue",
																"src": "5027:8:8"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1396,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1379,
																					"src": "5135:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1393,
																						"name": "schedule",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1373,
																						"src": "5107:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																							"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																						}
																					},
																					"id": 1394,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5116:14:8",
																					"memberName": "claimedRewards",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 925,
																					"src": "5107:23:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5131:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 763,
																				"src": "5107:27:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5107:35:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1398,
																				"name": "schedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1373,
																				"src": "5146:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																					"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																				}
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5155:12:8",
																			"memberName": "totalRewards",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5146:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5107:60:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f76657220636c61696d6564",
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5186:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2",
																			"typeString": "literal_string \"Over claimed\""
																		},
																		"value": "Over claimed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_92995e0798e0ca0c343b765dd55600e02a1eacfbcb4d4d1e2e4d9e5979ae78d2",
																			"typeString": "literal_string \"Over claimed\""
																		}
																	],
																	"id": 1392,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5081:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5081:134:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1403,
															"nodeType": "ExpressionStatement",
															"src": "5081:134:8"
														},
														{
															"expression": {
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1404,
																			"name": "_userAccrued",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "5244:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1408,
																		"indexExpression": {
																			"expression": {
																				"id": 1405,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5257:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5261:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5257:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5244:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1409,
																	"indexExpression": {
																		"id": 1407,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "5269:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5244:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5244:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "5244:31:8"
														},
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1413,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "5290:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																			"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5299:14:8",
																	"memberName": "claimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "5290:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1419,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "5344:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1416,
																				"name": "schedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1373,
																				"src": "5316:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																					"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																				}
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5325:14:8",
																			"memberName": "claimedRewards",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 925,
																			"src": "5316:23:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5340:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 763,
																		"src": "5316:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5316:35:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5290:61:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "5290:61:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1424,
																			"name": "schedule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "5392:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RewardSchedule_$928_storage_ptr",
																				"typeString": "struct DynamicRewards.RewardSchedule storage pointer"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5401:12:8",
																		"memberName": "rewardsToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 927,
																		"src": "5392:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1426,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5415:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5419:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5415:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1428,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5427:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1423,
																	"name": "_sendReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "5380:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5380:54:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1430,
															"nodeType": "ExpressionStatement",
															"src": "5380:54:8"
														},
														{
															"expression": {
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1431,
																	"name": "totalClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "5449:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1434,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "5481:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1432,
																			"name": "totalClaimed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1358,
																			"src": "5464:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5477:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 763,
																		"src": "5464:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5464:24:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5449:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "5449:39:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1365,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "4840:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1366,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4845:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4840:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"initializationExpression": {
													"assignments": [
														1362
													],
													"declarations": [
														{
															"constant": false,
															"id": 1362,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4833:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1439,
															"src": "4825:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1361,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4825:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1364,
													"initialValue": {
														"hexValue": "31",
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4837:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4825:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4864:3:8",
														"subExpression": {
															"id": 1368,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4864:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1370,
													"nodeType": "ExpressionStatement",
													"src": "4864:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4820:680:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "totalClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "5520:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5535:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5520:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726473",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5538:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																"typeString": "literal_string \"No rewards\""
															},
															"value": "No rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
																"typeString": "literal_string \"No rewards\""
															}
														],
														"id": 1440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5512:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5512:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "5512:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5581:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5585:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5581:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1450,
															"name": "totalClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "5593:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1453,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "5615:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$521",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$521",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5607:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1451,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5607:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5607:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1447,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "5567:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "EmitStatement",
												"src": "5562:67:8"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1349,
												"name": "nonReentrant",
												"nameLocations": [
													"4714:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 408,
												"src": "4714:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4714:12:8"
										}
									],
									"name": "claimRewards",
									"nameLocation": "4690:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4702:2:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4727:0:8"
									},
									"scope": 1635,
									"src": "4681:956:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "5754:181:8",
										"statements": [
											{
												"body": {
													"id": 1491,
													"nodeType": "Block",
													"src": "5814:114:8",
													"statements": [
														{
															"expression": {
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1473,
																			"name": "_userAccrued",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "5829:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1476,
																		"indexExpression": {
																			"id": 1474,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "5842:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5829:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1477,
																	"indexExpression": {
																		"id": 1475,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1464,
																		"src": "5851:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5829:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1485,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1460,
																					"src": "5904:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1486,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1464,
																					"src": "5913:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1484,
																				"name": "_earnedPerSchedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "5885:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5885:30:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1478,
																					"name": "_userAccrued",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 950,
																					"src": "5856:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(uint256 => uint256))"
																					}
																				},
																				"id": 1480,
																				"indexExpression": {
																					"id": 1479,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1460,
																					"src": "5869:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5856:21:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1482,
																			"indexExpression": {
																				"id": 1481,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "5878:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5856:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5881:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 763,
																		"src": "5856:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5856:60:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5829:87:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1490,
															"nodeType": "ExpressionStatement",
															"src": "5829:87:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1467,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "5785:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1468,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5790:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5785:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"initializationExpression": {
													"assignments": [
														1464
													],
													"declarations": [
														{
															"constant": false,
															"id": 1464,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5778:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1492,
															"src": "5770:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1463,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5770:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1466,
													"initialValue": {
														"hexValue": "31",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5782:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5770:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5809:3:8",
														"subExpression": {
															"id": 1470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5809:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1472,
													"nodeType": "ExpressionStatement",
													"src": "5809:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5765:163:8"
											}
										]
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRewards",
									"nameLocation": "5713:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5736:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "5728:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5727:17:8"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5754:0:8"
									},
									"scope": 1635,
									"src": "5704:231:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "6016:250:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1510,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6081:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																					"typeString": "contract DynamicRewards"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DynamicRewards_$1635",
																					"typeString": "contract DynamicRewards"
																				}
																			],
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6073:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1508,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6073:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6073:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1496,
																				"src": "6056:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1504,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "6049:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6049:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$521",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6063:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 478,
																	"src": "6049:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6049:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1513,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "6091:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6049:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6112:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																"typeString": "literal_string \"Insufficient reward balance\""
															},
															"value": "Insufficient reward balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																"typeString": "literal_string \"Insufficient reward balance\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6027:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6027:125:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "6027:125:8"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6168:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "6163:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1518,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6163:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"arguments": [
														{
															"id": 1524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "6201:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "6205:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1521,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "6185:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1520,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "6178:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$521_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6178:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$521",
																"typeString": "contract IERC20"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6192:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "6178:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6163:49:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1529,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "6231:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6240:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6223:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6223:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "6223:35:8"
											}
										]
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendReward",
									"nameLocation": "5952:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5972:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5964:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5987:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5979:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5999:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5991:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5963:43:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6016:0:8"
									},
									"scope": 1635,
									"src": "5943:323:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "6399:44:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1541,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "6417:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1543,
													"indexExpression": {
														"id": 1542,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "6427:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6417:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1544,
												"nodeType": "Return",
												"src": "6410:25:8"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6342:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6360:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "6352:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6352:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:17:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "6390:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:9:8"
									},
									"scope": 1635,
									"src": "6333:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "6504:38:8",
										"statements": [
											{
												"expression": {
													"id": 1551,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 933,
													"src": "6522:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1552,
												"nodeType": "Return",
												"src": "6515:19:8"
											}
										]
									},
									"functionSelector": "817b1cd2",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStaked",
									"nameLocation": "6460:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6471:2:8"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6495:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6495:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:9:8"
									},
									"scope": 1635,
									"src": "6451:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "6619:513:8",
										"statements": [
											{
												"assignments": [
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "6638:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "6630:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6630:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"hexValue": "30",
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6646:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6630:17:8"
											},
											{
												"body": {
													"id": 1586,
													"nodeType": "Block",
													"src": "6707:118:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1574,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6726:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6732:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6726:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1576,
																			"name": "rewardSchedules",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "6744:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
																				"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule storage ref)"
																			}
																		},
																		"id": 1578,
																		"indexExpression": {
																			"id": 1577,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "6760:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6744:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
																			"typeString": "struct DynamicRewards.RewardSchedule storage ref"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6763:7:8",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 921,
																	"src": "6744:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6726:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1585,
															"nodeType": "IfStatement",
															"src": "6722:92:8",
															"trueBody": {
																"id": 1584,
																"nodeType": "Block",
																"src": "6772:42:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "6791:7:8",
																			"subExpression": {
																				"id": 1581,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "6791:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1583,
																		"nodeType": "ExpressionStatement",
																		"src": "6791:7:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1568,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "6678:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1569,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "6683:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6678:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1587,
												"initializationExpression": {
													"assignments": [
														1565
													],
													"declarations": [
														{
															"constant": false,
															"id": 1565,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6671:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1587,
															"src": "6663:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1564,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6663:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1567,
													"initialValue": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6675:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6663:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6702:3:8",
														"subExpression": {
															"id": 1571,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "6702:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ExpressionStatement",
													"src": "6702:3:8"
												},
												"nodeType": "ForStatement",
												"src": "6658:167:8"
											},
											{
												"assignments": [
													1592
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "active",
														"nameLocation": "6854:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "6837:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1590,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6837:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1591,
															"nodeType": "ArrayTypeName",
															"src": "6837:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1598,
												"initialValue": {
													"arguments": [
														{
															"id": 1596,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6877:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6863:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6867:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1594,
															"nodeType": "ArrayTypeName",
															"src": "6867:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6863:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6837:46:8"
											},
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6902:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "6894:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6894:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"hexValue": "30",
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6910:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6894:17:8"
											},
											{
												"body": {
													"id": 1629,
													"nodeType": "Block",
													"src": "6971:130:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1613,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6990:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6996:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6990:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1615,
																			"name": "rewardSchedules",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "7008:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RewardSchedule_$928_storage_$",
																				"typeString": "mapping(uint256 => struct DynamicRewards.RewardSchedule storage ref)"
																			}
																		},
																		"id": 1617,
																		"indexExpression": {
																			"id": 1616,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "7024:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7008:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RewardSchedule_$928_storage",
																			"typeString": "struct DynamicRewards.RewardSchedule storage ref"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7027:7:8",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 921,
																	"src": "7008:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6990:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1628,
															"nodeType": "IfStatement",
															"src": "6986:104:8",
															"trueBody": {
																"id": 1627,
																"nodeType": "Block",
																"src": "7036:54:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1620,
																					"name": "active",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1592,
																					"src": "7055:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1623,
																				"indexExpression": {
																					"id": 1622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "7062:7:8",
																					"subExpression": {
																						"id": 1621,
																						"name": "index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1600,
																						"src": "7062:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7055:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1624,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "7073:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7055:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1626,
																		"nodeType": "ExpressionStatement",
																		"src": "7055:19:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "6942:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1608,
														"name": "currentScheduleId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "6947:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6942:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"initializationExpression": {
													"assignments": [
														1604
													],
													"declarations": [
														{
															"constant": false,
															"id": 1604,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6935:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1630,
															"src": "6927:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1603,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6927:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1606,
													"initialValue": {
														"hexValue": "31",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6939:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6927:13:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6966:3:8",
														"subExpression": {
															"id": 1610,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "6966:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1612,
													"nodeType": "ExpressionStatement",
													"src": "6966:3:8"
												},
												"nodeType": "ForStatement",
												"src": "6922:179:8"
											},
											{
												"expression": {
													"id": 1631,
													"name": "active",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1592,
													"src": "7118:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1632,
												"nodeType": "Return",
												"src": "7111:13:8"
											}
										]
									},
									"functionSelector": "0b35a4b0",
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveSchedules",
									"nameLocation": "6559:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6577:2:8"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "6601:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1556,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6601:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1557,
													"nodeType": "ArrayTypeName",
													"src": "6601:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:18:8"
									},
									"scope": 1635,
									"src": "6550:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1636,
							"src": "304:6831:8",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								956,
								962,
								966,
								974
							]
						}
					],
					"src": "33:7104:8"
				},
				"id": 8
			}
		}
	}
}